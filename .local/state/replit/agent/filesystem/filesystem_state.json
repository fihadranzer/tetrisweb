{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Pi Tetris - AI-Driven Software Development Platform\n\n## Overview\n\nPi Tetris is a comprehensive software development company specializing in AI-driven solutions. The platform serves as both a marketing website and content management system, showcasing services like AI/ML development, custom software development, mobile app development, and data engineering. The application features a public-facing website with service listings, case studies, team information, and client testimonials, along with an administrative interface for content management.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with separate public and admin sections\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **UI Framework**: Tailwind CSS with shadcn/ui component library using Radix UI primitives\n- **Forms**: React Hook Form with Zod for validation and type safety\n- **File Uploads**: Uppy integration for file management with Google Cloud Storage\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server\n- **Language**: TypeScript throughout the entire stack\n- **API Design**: RESTful API with organized route handlers\n- **Authentication**: Replit OpenID Connect (OIDC) integration with Passport.js\n- **Session Management**: Express sessions with PostgreSQL storage\n- **Database ORM**: Drizzle ORM with type-safe schema definitions\n- **File Storage**: Google Cloud Storage integration with custom ACL policies\n\n### Data Storage\n- **Primary Database**: PostgreSQL with Neon serverless connection\n- **Schema Management**: Drizzle Kit for migrations and schema management\n- **Session Storage**: PostgreSQL table for user sessions\n- **File Storage**: Google Cloud Storage for media assets and file uploads\n- **Database Connection**: Connection pooling with Neon serverless WebSocket support\n\n### Authentication & Authorization\n- **Provider**: Replit OIDC for seamless integration within Replit environment\n- **Session Strategy**: Server-side sessions with secure HTTP-only cookies\n- **Admin Access**: Role-based access control with admin flag in user model\n- **Security**: Session TTL management and secure cookie configuration\n\n### Content Management\n- **Models**: Comprehensive schema for services, case studies, team members, testimonials, clients, technologies, and categories\n- **Rich Content**: Support for markdown content with rich text editing capabilities\n- **Image Management**: Integrated file upload system with preview and management\n- **Categorization**: Flexible category system for organizing different content types\n- **Status Management**: Active/inactive toggles and featured content flags\n\n## External Dependencies\n\n### Cloud Services\n- **Neon Database**: Serverless PostgreSQL hosting with WebSocket support\n- **Google Cloud Storage**: Object storage for file uploads and media assets\n- **Replit Infrastructure**: Authentication, deployment, and development environment\n\n### Third-Party Libraries\n- **UI Components**: Radix UI primitives for accessible component foundation\n- **File Upload**: Uppy ecosystem for robust file handling and AWS S3 integration\n- **Validation**: Zod for runtime type checking and schema validation\n- **Styling**: Tailwind CSS with custom design system and CSS variables\n- **Icons**: Lucide React for consistent iconography\n\n### Development Tools\n- **Build System**: Vite for fast development and optimized production builds\n- **Type Safety**: TypeScript with strict configuration across client and server\n- **Code Quality**: ESBuild for server bundling and optimization\n- **Development**: Hot module replacement and development server integration","size_bytes":3838},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Pi Tetris brand colors\n        \"pi-blue\": {\n          DEFAULT: \"var(--pi-blue)\",\n          light: \"var(--pi-blue-light)\",\n          lighter: \"var(--pi-blue-lighter)\",\n        },\n        \"pi-gray\": {\n          DEFAULT: \"var(--pi-gray)\",\n          light: \"var(--pi-gray-light)\",\n          dark: \"var(--pi-gray-dark)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"system-ui\", \"sans-serif\"],\n        serif: [\"Georgia\", \"serif\"],\n        mono: [\"Menlo\", \"Monaco\", \"Consolas\", \"Liberation Mono\", \"Courier New\", \"monospace\"],\n      },\n      spacing: {\n        '18': '4.5rem',\n        '88': '22rem',\n        '128': '32rem',\n      },\n      maxWidth: {\n        '8xl': '88rem',\n        '9xl': '96rem',\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fadeIn 0.6s ease-in-out\",\n        \"slide-up\": \"slideUp 0.6s ease-out\",\n        \"bounce-slow\": \"bounce 3s infinite\",\n        \"pulse-slow\": \"pulse 3s infinite\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        fadeIn: {\n          \"0%\": {\n            opacity: \"0\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n          },\n        },\n        slideUp: {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"translateY(20px)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"translateY(0)\",\n          },\n        },\n      },\n      boxShadow: {\n        'professional': '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n        'professional-lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n        'glass': '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n      },\n      backdropBlur: {\n        xs: '2px',\n      },\n      backgroundImage: {\n        'gradient-pi': 'linear-gradient(135deg, var(--pi-blue), var(--pi-blue-light))',\n        'gradient-professional': 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      },\n      typography: {\n        DEFAULT: {\n          css: {\n            color: 'var(--foreground)',\n            a: {\n              color: 'var(--pi-blue)',\n              '&:hover': {\n                color: 'var(--pi-blue-light)',\n              },\n            },\n            strong: {\n              color: 'var(--foreground)',\n            },\n            h1: {\n              color: 'var(--foreground)',\n            },\n            h2: {\n              color: 'var(--foreground)',\n            },\n            h3: {\n              color: 'var(--foreground)',\n            },\n            h4: {\n              color: 'var(--foreground)',\n            },\n          },\n        },\n      },\n    },\n  },\n  plugins: [\n    require(\"tailwindcss-animate\"), \n    require(\"@tailwindcss/typography\"),\n    // Custom plugin for Pi Tetris utilities\n    function({ addUtilities }: any) {\n      const newUtilities = {\n        '.text-gradient-pi': {\n          'background': 'linear-gradient(135deg, var(--pi-blue), var(--pi-blue-light))',\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        },\n        '.glass-morphism': {\n          'backdrop-filter': 'blur(16px) saturate(180%)',\n          'background-color': 'rgba(255, 255, 255, 0.75)',\n          'border': '1px solid rgba(255, 255, 255, 0.125)',\n        },\n        '.glass-morphism-dark': {\n          'backdrop-filter': 'blur(16px) saturate(180%)',\n          'background-color': 'rgba(17, 25, 40, 0.75)',\n          'border': '1px solid rgba(255, 255, 255, 0.125)',\n        },\n      }\n      addUtilities(newUtilities)\n    }\n  ],\n} satisfies Config;\n","size_bytes":5988},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"// Load environment variables from .env file for local development\nimport dotenv from 'dotenv';\ndotenv.config();\n\nimport express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2180},"server/objectAcl.ts":{"content":"import { File } from \"@google-cloud/storage\";\n\nconst ACL_POLICY_METADATA_KEY = \"custom:aclPolicy\";\n\n// The type of the access group.\n//\n// Can be flexibly defined according to the use case.\n//\n// Examples:\n// - USER_LIST: the users from a list stored in the database;\n// - EMAIL_DOMAIN: the users whose email is in a specific domain;\n// - GROUP_MEMBER: the users who are members of a specific group;\n// - SUBSCRIBER: the users who are subscribers of a specific service / content\n//   creator.\nexport enum ObjectAccessGroupType {}\n\n// The logic user group that can access the object.\nexport interface ObjectAccessGroup {\n  // The type of the access group.\n  type: ObjectAccessGroupType;\n  // The logic id that is enough to identify the qualified group members.\n  //\n  // It may have different format for different types. For example:\n  // - for USER_LIST, the id could be the user list db entity id, and the\n  //   user list db entity could contain a bunch of user ids. User needs\n  //   to be a member of the user list to be able to access the object.\n  // - for EMAIL_DOMAIN, the id could be the email domain, and the user needs\n  //   to have an email with the domain to be able to access the object.\n  // - for GROUP_MEMBER, the id could be the group db entity id, and the\n  //   group db entity could contain a bunch of user ids. User needs to be\n  //   a member of the group to be able to access the object.\n  // - for SUBSCRIBER, the id could be the subscriber db entity id, and the\n  //   subscriber db entity could contain a bunch of user ids. User needs to\n  //   be a subscriber to be able to access the object.\n  id: string;\n}\n\nexport enum ObjectPermission {\n  READ = \"read\",\n  WRITE = \"write\",\n}\n\nexport interface ObjectAclRule {\n  group: ObjectAccessGroup;\n  permission: ObjectPermission;\n}\n\n// The ACL policy of the object.\n// This would be set as part of the object custom metadata:\n// - key: \"custom:aclPolicy\"\n// - value: JSON string of the ObjectAclPolicy object.\nexport interface ObjectAclPolicy {\n  owner: string;\n  visibility: \"public\" | \"private\";\n  aclRules?: Array<ObjectAclRule>;\n}\n\n// Check if the requested permission is allowed based on the granted permission.\nfunction isPermissionAllowed(\n  requested: ObjectPermission,\n  granted: ObjectPermission,\n): boolean {\n  // Users granted with read or write permissions can read the object.\n  if (requested === ObjectPermission.READ) {\n    return [ObjectPermission.READ, ObjectPermission.WRITE].includes(granted);\n  }\n\n  // Only users granted with write permissions can write the object.\n  return granted === ObjectPermission.WRITE;\n}\n\n// The base class for all access groups.\n//\n// Different types of access groups can be implemented according to the use case.\nabstract class BaseObjectAccessGroup implements ObjectAccessGroup {\n  constructor(\n    public readonly type: ObjectAccessGroupType,\n    public readonly id: string,\n  ) {}\n\n  // Check if the user is a member of the group.\n  public abstract hasMember(userId: string): Promise<boolean>;\n}\n\nfunction createObjectAccessGroup(\n  group: ObjectAccessGroup,\n): BaseObjectAccessGroup {\n  switch (group.type) {\n    // Implement the case for each type of access group to instantiate.\n    //\n    // For example:\n    // case \"USER_LIST\":\n    //   return new UserListAccessGroup(group.id);\n    // case \"EMAIL_DOMAIN\":\n    //   return new EmailDomainAccessGroup(group.id);\n    // case \"GROUP_MEMBER\":\n    //   return new GroupMemberAccessGroup(group.id);\n    // case \"SUBSCRIBER\":\n    //   return new SubscriberAccessGroup(group.id);\n    default:\n      throw new Error(`Unknown access group type: ${group.type}`);\n  }\n}\n\n// Sets the ACL policy to the object metadata.\nexport async function setObjectAclPolicy(\n  objectFile: File,\n  aclPolicy: ObjectAclPolicy,\n): Promise<void> {\n  const [exists] = await objectFile.exists();\n  if (!exists) {\n    throw new Error(`Object not found: ${objectFile.name}`);\n  }\n\n  await objectFile.setMetadata({\n    metadata: {\n      [ACL_POLICY_METADATA_KEY]: JSON.stringify(aclPolicy),\n    },\n  });\n}\n\n// Gets the ACL policy from the object metadata.\nexport async function getObjectAclPolicy(\n  objectFile: File,\n): Promise<ObjectAclPolicy | null> {\n  const [metadata] = await objectFile.getMetadata();\n  const aclPolicy = metadata?.metadata?.[ACL_POLICY_METADATA_KEY];\n  if (!aclPolicy) {\n    return null;\n  }\n  return JSON.parse(aclPolicy as string);\n}\n\n// Checks if the user can access the object.\nexport async function canAccessObject({\n  userId,\n  objectFile,\n  requestedPermission,\n}: {\n  userId?: string;\n  objectFile: File;\n  requestedPermission: ObjectPermission;\n}): Promise<boolean> {\n  // When this function is called, the acl policy is required.\n  const aclPolicy = await getObjectAclPolicy(objectFile);\n  if (!aclPolicy) {\n    return false;\n  }\n\n  // Public objects are always accessible for read.\n  if (\n    aclPolicy.visibility === \"public\" &&\n    requestedPermission === ObjectPermission.READ\n  ) {\n    return true;\n  }\n\n  // Access control requires the user id.\n  if (!userId) {\n    return false;\n  }\n\n  // The owner of the object can always access it.\n  if (aclPolicy.owner === userId) {\n    return true;\n  }\n\n  // Go through the ACL rules to check if the user has the required permission.\n  for (const rule of aclPolicy.aclRules || []) {\n    const accessGroup = createObjectAccessGroup(rule.group);\n    if (\n      (await accessGroup.hasMember(userId)) &&\n      isPermissionAllowed(requestedPermission, rule.permission)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","size_bytes":5544},"server/objectStorage.ts":{"content":"import { Storage, File } from \"@google-cloud/storage\";\nimport { Response } from \"express\";\nimport { randomUUID } from \"crypto\";\nimport {\n  ObjectAclPolicy,\n  ObjectPermission,\n  canAccessObject,\n  getObjectAclPolicy,\n  setObjectAclPolicy,\n} from \"./objectAcl\";\n\nconst REPLIT_SIDECAR_ENDPOINT = \"http://127.0.0.1:1106\";\n\n// The object storage client is used to interact with the object storage service.\nexport const objectStorageClient = new Storage({\n  credentials: {\n    audience: \"replit\",\n    subject_token_type: \"access_token\",\n    token_url: `${REPLIT_SIDECAR_ENDPOINT}/token`,\n    type: \"external_account\",\n    credential_source: {\n      url: `${REPLIT_SIDECAR_ENDPOINT}/credential`,\n      format: {\n        type: \"json\",\n        subject_token_field_name: \"access_token\",\n      },\n    },\n    universe_domain: \"googleapis.com\",\n  },\n  projectId: \"\",\n});\n\nexport class ObjectNotFoundError extends Error {\n  constructor() {\n    super(\"Object not found\");\n    this.name = \"ObjectNotFoundError\";\n    Object.setPrototypeOf(this, ObjectNotFoundError.prototype);\n  }\n}\n\n// The object storage service is used to interact with the object storage service.\nexport class ObjectStorageService {\n  constructor() {}\n\n  // Gets the public object search paths.\n  getPublicObjectSearchPaths(): Array<string> {\n    const pathsStr = process.env.PUBLIC_OBJECT_SEARCH_PATHS || \"\";\n    const paths = Array.from(\n      new Set(\n        pathsStr\n          .split(\",\")\n          .map((path) => path.trim())\n          .filter((path) => path.length > 0)\n      )\n    );\n    if (paths.length === 0) {\n      throw new Error(\n        \"PUBLIC_OBJECT_SEARCH_PATHS not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PUBLIC_OBJECT_SEARCH_PATHS env var (comma-separated paths).\"\n      );\n    }\n    return paths;\n  }\n\n  // Gets the private object directory.\n  getPrivateObjectDir(): string {\n    const dir = process.env.PRIVATE_OBJECT_DIR || \"\";\n    if (!dir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n    return dir;\n  }\n\n  // Search for a public object from the search paths.\n  async searchPublicObject(filePath: string): Promise<File | null> {\n    for (const searchPath of this.getPublicObjectSearchPaths()) {\n      const fullPath = `${searchPath}/${filePath}`;\n\n      // Full path format: /<bucket_name>/<object_name>\n      const { bucketName, objectName } = parseObjectPath(fullPath);\n      const bucket = objectStorageClient.bucket(bucketName);\n      const file = bucket.file(objectName);\n\n      // Check if file exists\n      const [exists] = await file.exists();\n      if (exists) {\n        return file;\n      }\n    }\n\n    return null;\n  }\n\n  // Downloads an object to the response.\n  async downloadObject(file: File, res: Response, cacheTtlSec: number = 3600) {\n    try {\n      // Get file metadata\n      const [metadata] = await file.getMetadata();\n      // Get the ACL policy for the object.\n      const aclPolicy = await getObjectAclPolicy(file);\n      const isPublic = aclPolicy?.visibility === \"public\";\n      // Set appropriate headers\n      res.set({\n        \"Content-Type\": metadata.contentType || \"application/octet-stream\",\n        \"Content-Length\": metadata.size,\n        \"Cache-Control\": `${\n          isPublic ? \"public\" : \"private\"\n        }, max-age=${cacheTtlSec}`,\n      });\n\n      // Stream the file to the response\n      const stream = file.createReadStream();\n\n      stream.on(\"error\", (err) => {\n        console.error(\"Stream error:\", err);\n        if (!res.headersSent) {\n          res.status(500).json({ error: \"Error streaming file\" });\n        }\n      });\n\n      stream.pipe(res);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n      if (!res.headersSent) {\n        res.status(500).json({ error: \"Error downloading file\" });\n      }\n    }\n  }\n\n  // Gets the upload URL for an object entity.\n  async getObjectEntityUploadURL(): Promise<string> {\n    const privateObjectDir = this.getPrivateObjectDir();\n    if (!privateObjectDir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n\n    const objectId = randomUUID();\n    const fullPath = `${privateObjectDir}/uploads/${objectId}`;\n\n    const { bucketName, objectName } = parseObjectPath(fullPath);\n\n    // Sign URL for PUT method with TTL\n    return signObjectURL({\n      bucketName,\n      objectName,\n      method: \"PUT\",\n      ttlSec: 900,\n    });\n  }\n\n  // Gets the object entity file from the object path.\n  async getObjectEntityFile(objectPath: string): Promise<File> {\n    if (!objectPath.startsWith(\"/objects/\")) {\n      throw new ObjectNotFoundError();\n    }\n\n    const parts = objectPath.slice(1).split(\"/\");\n    if (parts.length < 2) {\n      throw new ObjectNotFoundError();\n    }\n\n    const entityId = parts.slice(1).join(\"/\");\n    let entityDir = this.getPrivateObjectDir();\n    if (!entityDir.endsWith(\"/\")) {\n      entityDir = `${entityDir}/`;\n    }\n    const objectEntityPath = `${entityDir}${entityId}`;\n    const { bucketName, objectName } = parseObjectPath(objectEntityPath);\n    const bucket = objectStorageClient.bucket(bucketName);\n    const objectFile = bucket.file(objectName);\n    const [exists] = await objectFile.exists();\n    if (!exists) {\n      throw new ObjectNotFoundError();\n    }\n    return objectFile;\n  }\n\n  normalizeObjectEntityPath(\n    rawPath: string,\n  ): string {\n    if (!rawPath.startsWith(\"https://storage.googleapis.com/\")) {\n      return rawPath;\n    }\n  \n    // Extract the path from the URL by removing query parameters and domain\n    const url = new URL(rawPath);\n    const rawObjectPath = url.pathname;\n  \n    let objectEntityDir = this.getPrivateObjectDir();\n    if (!objectEntityDir.endsWith(\"/\")) {\n      objectEntityDir = `${objectEntityDir}/`;\n    }\n  \n    if (!rawObjectPath.startsWith(objectEntityDir)) {\n      return rawObjectPath;\n    }\n  \n    // Extract the entity ID from the path\n    const entityId = rawObjectPath.slice(objectEntityDir.length);\n    return `/objects/${entityId}`;\n  }\n\n  // Tries to set the ACL policy for the object entity and return the normalized path.\n  async trySetObjectEntityAclPolicy(\n    rawPath: string,\n    aclPolicy: ObjectAclPolicy\n  ): Promise<string> {\n    const normalizedPath = this.normalizeObjectEntityPath(rawPath);\n    if (!normalizedPath.startsWith(\"/\")) {\n      return normalizedPath;\n    }\n\n    const objectFile = await this.getObjectEntityFile(normalizedPath);\n    await setObjectAclPolicy(objectFile, aclPolicy);\n    return normalizedPath;\n  }\n\n  // Checks if the user can access the object entity.\n  async canAccessObjectEntity({\n    userId,\n    objectFile,\n    requestedPermission,\n  }: {\n    userId?: string;\n    objectFile: File;\n    requestedPermission?: ObjectPermission;\n  }): Promise<boolean> {\n    return canAccessObject({\n      userId,\n      objectFile,\n      requestedPermission: requestedPermission ?? ObjectPermission.READ,\n    });\n  }\n}\n\nfunction parseObjectPath(path: string): {\n  bucketName: string;\n  objectName: string;\n} {\n  if (!path.startsWith(\"/\")) {\n    path = `/${path}`;\n  }\n  const pathParts = path.split(\"/\");\n  if (pathParts.length < 3) {\n    throw new Error(\"Invalid path: must contain at least a bucket name\");\n  }\n\n  const bucketName = pathParts[1];\n  const objectName = pathParts.slice(2).join(\"/\");\n\n  return {\n    bucketName,\n    objectName,\n  };\n}\n\nasync function signObjectURL({\n  bucketName,\n  objectName,\n  method,\n  ttlSec,\n}: {\n  bucketName: string;\n  objectName: string;\n  method: \"GET\" | \"PUT\" | \"DELETE\" | \"HEAD\";\n  ttlSec: number;\n}): Promise<string> {\n  const request = {\n    bucket_name: bucketName,\n    object_name: objectName,\n    method,\n    expires_at: new Date(Date.now() + ttlSec * 1000).toISOString(),\n  };\n  const response = await fetch(\n    `${REPLIT_SIDECAR_ENDPOINT}/object-storage/signed-object-url`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\n      `Failed to sign object URL, errorcode: ${response.status}, ` +\n        `make sure you're running on Replit`\n    );\n  }\n\n  const { signed_url: signedURL } = await response.json();\n  return signedURL;\n}\n","size_bytes":8408},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, async (err: any, user: any) => {\n      if (err) {\n        return res.redirect(\"/api/login\");\n      }\n      if (!user) {\n        return res.redirect(\"/api/login\");\n      }\n      \n      req.logIn(user, async (err: any) => {\n        if (err) {\n          return res.redirect(\"/api/login\");\n        }\n        \n        try {\n          // Check if user is admin after login\n          const userId = user.claims?.sub;\n          if (userId) {\n            const dbUser = await storage.getUser(userId);\n            if (dbUser?.isAdmin) {\n              // Check for stored redirect path\n              const redirectPath = req.session?.redirectAfterAuth || '/admin';\n              delete req.session?.redirectAfterAuth;\n              return res.redirect(redirectPath);\n            }\n          }\n          \n          // Regular user or no admin found, go to home\n          res.redirect(\"/\");\n        } catch (error) {\n          console.error('Error checking user admin status:', error);\n          res.redirect(\"/\");\n        }\n      });\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n","size_bytes":5166},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n// Use local auth for development, Replit auth for production\nconst authModule = process.env.NODE_ENV === 'development' \n  ? await import(\"./localAuth\")\n  : await import(\"./replitAuth\");\n\nconst { setupAuth, isAuthenticated } = authModule;\nimport { ObjectStorageService, ObjectNotFoundError } from \"./objectStorage\";\nimport { ObjectPermission } from \"./objectAcl\";\nimport {\n  insertServiceSchema,\n  insertCaseStudySchema,\n  insertTeamMemberSchema,\n  insertTestimonialSchema,\n  insertClientSchema,\n  insertTechnologySchema,\n  insertCategorySchema,\n  insertContactSubmissionSchema,\n  insertSiteSettingSchema,\n} from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // Direct Admin Login Route (bypassed in development mode)\n  app.post('/api/admin/login', async (req, res) => {\n    try {\n      // In development mode, automatically login as admin\n      if (process.env.NODE_ENV === 'development') {\n        const mockAdminUser = {\n          id: 'local-admin-user',\n          email: 'admin@pitetris.local',\n          firstName: 'Local',\n          lastName: 'Admin',\n          isAdmin: true,\n          loginType: 'direct'\n        };\n        \n        // Set session for direct login\n        (req.session as any).directAdminUser = mockAdminUser;\n        \n        return res.json({ \n          message: 'Login successful (development mode)', \n          user: mockAdminUser\n        });\n      }\n      \n      // Production logic would go here\n      return res.status(501).json({ message: 'Admin login not implemented for production' });\n    } catch (error) {\n      console.error('Direct admin login error:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Auth routes  \n  app.get('/api/auth/user', async (req: any, res) => {\n    try {\n      // Check for direct admin login first\n      if ((req.session as any).directAdminUser) {\n        return res.json((req.session as any).directAdminUser);\n      }\n      \n      // Then check Replit Auth\n      if (!req.isAuthenticated() || !req.user?.claims?.sub) {\n        return res.status(401).json({ message: \"Unauthorized\" });\n      }\n      \n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n  \n  // Logout route for both direct and Replit auth\n  app.post('/api/auth/logout', (req, res) => {\n    // Clear direct admin session\n    if ((req.session as any).directAdminUser) {\n      delete (req.session as any).directAdminUser;\n      return res.json({ message: 'Logged out successfully' });\n    }\n    \n    // Handle Replit auth logout\n    req.logout(() => {\n      res.json({ message: 'Logged out successfully' });\n    });\n  });\n\n  // Public API routes\n  \n  // Get all services\n  app.get('/api/services', async (req, res) => {\n    try {\n      const services = await storage.getServices();\n      res.json(services);\n    } catch (error) {\n      console.error(\"Error fetching services:\", error);\n      res.status(500).json({ message: \"Failed to fetch services\" });\n    }\n  });\n\n  // Get service by slug\n  app.get('/api/services/:slug', async (req, res) => {\n    try {\n      const service = await storage.getServiceBySlug(req.params.slug);\n      if (!service) {\n        return res.status(404).json({ message: \"Service not found\" });\n      }\n      res.json(service);\n    } catch (error) {\n      console.error(\"Error fetching service:\", error);\n      res.status(500).json({ message: \"Failed to fetch service\" });\n    }\n  });\n\n  // Get all case studies\n  app.get('/api/case-studies', async (req, res) => {\n    try {\n      const caseStudies = await storage.getCaseStudies();\n      res.json(caseStudies);\n    } catch (error) {\n      console.error(\"Error fetching case studies:\", error);\n      res.status(500).json({ message: \"Failed to fetch case studies\" });\n    }\n  });\n\n  // Get featured case studies\n  app.get('/api/case-studies/featured', async (req, res) => {\n    try {\n      const caseStudies = await storage.getFeaturedCaseStudies();\n      res.json(caseStudies);\n    } catch (error) {\n      console.error(\"Error fetching featured case studies:\", error);\n      res.status(500).json({ message: \"Failed to fetch featured case studies\" });\n    }\n  });\n\n  // Get case study by slug\n  app.get('/api/case-studies/:slug', async (req, res) => {\n    try {\n      const caseStudy = await storage.getCaseStudyBySlug(req.params.slug);\n      if (!caseStudy) {\n        return res.status(404).json({ message: \"Case study not found\" });\n      }\n      res.json(caseStudy);\n    } catch (error) {\n      console.error(\"Error fetching case study:\", error);\n      res.status(500).json({ message: \"Failed to fetch case study\" });\n    }\n  });\n\n  // Get team members\n  app.get('/api/team', async (req, res) => {\n    try {\n      const teamMembers = await storage.getTeamMembers();\n      res.json(teamMembers);\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n      res.status(500).json({ message: \"Failed to fetch team members\" });\n    }\n  });\n\n  // Get testimonials\n  app.get('/api/testimonials', async (req, res) => {\n    try {\n      const testimonials = await storage.getTestimonials();\n      res.json(testimonials);\n    } catch (error) {\n      console.error(\"Error fetching testimonials:\", error);\n      res.status(500).json({ message: \"Failed to fetch testimonials\" });\n    }\n  });\n\n  // Get featured testimonials\n  app.get('/api/testimonials/featured', async (req, res) => {\n    try {\n      const testimonials = await storage.getFeaturedTestimonials();\n      res.json(testimonials);\n    } catch (error) {\n      console.error(\"Error fetching featured testimonials:\", error);\n      res.status(500).json({ message: \"Failed to fetch featured testimonials\" });\n    }\n  });\n\n  // Get clients\n  app.get('/api/clients', async (req, res) => {\n    try {\n      const clients = await storage.getClients();\n      res.json(clients);\n    } catch (error) {\n      console.error(\"Error fetching clients:\", error);\n      res.status(500).json({ message: \"Failed to fetch clients\" });\n    }\n  });\n\n  // Get technologies\n  app.get('/api/technologies', async (req, res) => {\n    try {\n      const categoryId = req.query.categoryId as string;\n      const technologies = await storage.getTechnologies(categoryId);\n      res.json(technologies);\n    } catch (error) {\n      console.error(\"Error fetching technologies:\", error);\n      res.status(500).json({ message: \"Failed to fetch technologies\" });\n    }\n  });\n\n  // Get categories\n  app.get('/api/categories', async (req, res) => {\n    try {\n      const type = req.query.type as string;\n      const categories = await storage.getCategories(type);\n      res.json(categories);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n      res.status(500).json({ message: \"Failed to fetch categories\" });\n    }\n  });\n\n  // Submit contact form\n  app.post('/api/contact', async (req, res) => {\n    try {\n      const validatedData = insertContactSubmissionSchema.parse(req.body);\n      const submission = await storage.createContactSubmission(validatedData);\n      res.status(201).json(submission);\n    } catch (error) {\n      console.error(\"Error creating contact submission:\", error);\n      res.status(500).json({ message: \"Failed to submit contact form\" });\n    }\n  });\n\n  // Get site settings\n  app.get('/api/settings/:key', async (req, res) => {\n    try {\n      const setting = await storage.getSiteSetting(req.params.key);\n      if (!setting) {\n        return res.status(404).json({ message: \"Setting not found\" });\n      }\n      res.json(setting);\n    } catch (error) {\n      console.error(\"Error fetching site setting:\", error);\n      res.status(500).json({ message: \"Failed to fetch site setting\" });\n    }\n  });\n\n  // Object storage routes\n  app.get(\"/public-objects/:filePath(*)\", async (req, res) => {\n    const filePath = req.params.filePath;\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const file = await objectStorageService.searchPublicObject(filePath);\n      if (!file) {\n        return res.status(404).json({ error: \"File not found\" });\n      }\n      objectStorageService.downloadObject(file, res);\n    } catch (error) {\n      console.error(\"Error searching for public object:\", error);\n      return res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Admin-only routes (protected)\n\n  // Check if user is admin\n  const isAdmin = async (req: any, res: any, next: any) => {\n    try {\n      const userId = req.user?.claims?.sub;\n      if (!userId) {\n        return res.status(401).json({ message: \"Unauthorized\" });\n      }\n      \n      const user = await storage.getUser(userId);\n      if (!user || !user.isAdmin) {\n        return res.status(403).json({ message: \"Admin access required\" });\n      }\n      \n      next();\n    } catch (error) {\n      console.error(\"Error checking admin status:\", error);\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  };\n\n  // Admin object storage routes\n  app.get(\"/objects/:objectPath(*)\", isAuthenticated, async (req, res) => {\n    const userId = req.user?.claims?.sub;\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const objectFile = await objectStorageService.getObjectEntityFile(req.path);\n      const canAccess = await objectStorageService.canAccessObjectEntity({\n        objectFile,\n        userId: userId,\n        requestedPermission: ObjectPermission.READ,\n      });\n      if (!canAccess) {\n        return res.sendStatus(401);\n      }\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error checking object access:\", error);\n      if (error instanceof ObjectNotFoundError) {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  app.post(\"/api/objects/upload\", isAuthenticated, isAdmin, async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n    res.json({ uploadURL });\n  });\n\n  // Admin CRUD routes\n\n  // Categories\n  app.post('/api/admin/categories', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertCategorySchema.parse(req.body);\n      const category = await storage.createCategory(validatedData);\n      res.status(201).json(category);\n    } catch (error) {\n      console.error(\"Error creating category:\", error);\n      res.status(500).json({ message: \"Failed to create category\" });\n    }\n  });\n\n  app.put('/api/admin/categories/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const category = await storage.updateCategory(req.params.id, req.body);\n      res.json(category);\n    } catch (error) {\n      console.error(\"Error updating category:\", error);\n      res.status(500).json({ message: \"Failed to update category\" });\n    }\n  });\n\n  app.delete('/api/admin/categories/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteCategory(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting category:\", error);\n      res.status(500).json({ message: \"Failed to delete category\" });\n    }\n  });\n\n  // Services\n  app.post('/api/admin/services', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertServiceSchema.parse(req.body);\n      const service = await storage.createService(validatedData);\n      res.status(201).json(service);\n    } catch (error) {\n      console.error(\"Error creating service:\", error);\n      res.status(500).json({ message: \"Failed to create service\" });\n    }\n  });\n\n  app.put('/api/admin/services/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const service = await storage.updateService(req.params.id, req.body);\n      res.json(service);\n    } catch (error) {\n      console.error(\"Error updating service:\", error);\n      res.status(500).json({ message: \"Failed to update service\" });\n    }\n  });\n\n  app.delete('/api/admin/services/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteService(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting service:\", error);\n      res.status(500).json({ message: \"Failed to delete service\" });\n    }\n  });\n\n  // Case Studies\n  app.post('/api/admin/case-studies', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      // Handle empty categoryId\n      const processedData = {\n        ...req.body,\n        categoryId: req.body.categoryId === '' ? null : req.body.categoryId\n      };\n      \n      const validatedData = insertCaseStudySchema.parse(processedData);\n      const caseStudy = await storage.createCaseStudy(validatedData);\n      res.status(201).json(caseStudy);\n    } catch (error) {\n      console.error(\"Error creating case study:\", error);\n      res.status(500).json({ message: \"Failed to create case study\" });\n    }\n  });\n\n  app.put('/api/admin/case-studies/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const caseStudy = await storage.updateCaseStudy(req.params.id, req.body);\n      res.json(caseStudy);\n    } catch (error) {\n      console.error(\"Error updating case study:\", error);\n      res.status(500).json({ message: \"Failed to update case study\" });\n    }\n  });\n\n  app.delete('/api/admin/case-studies/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteCaseStudy(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting case study:\", error);\n      res.status(500).json({ message: \"Failed to delete case study\" });\n    }\n  });\n\n  // Team Members\n  app.post('/api/admin/team', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertTeamMemberSchema.parse(req.body);\n      const teamMember = await storage.createTeamMember(validatedData);\n      res.status(201).json(teamMember);\n    } catch (error) {\n      console.error(\"Error creating team member:\", error);\n      res.status(500).json({ message: \"Failed to create team member\" });\n    }\n  });\n\n  app.put('/api/admin/team/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const teamMember = await storage.updateTeamMember(req.params.id, req.body);\n      res.json(teamMember);\n    } catch (error) {\n      console.error(\"Error updating team member:\", error);\n      res.status(500).json({ message: \"Failed to update team member\" });\n    }\n  });\n\n  app.delete('/api/admin/team/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteTeamMember(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting team member:\", error);\n      res.status(500).json({ message: \"Failed to delete team member\" });\n    }\n  });\n\n  // Testimonials\n  app.post('/api/admin/testimonials', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertTestimonialSchema.parse(req.body);\n      const testimonial = await storage.createTestimonial(validatedData);\n      res.status(201).json(testimonial);\n    } catch (error) {\n      console.error(\"Error creating testimonial:\", error);\n      res.status(500).json({ message: \"Failed to create testimonial\" });\n    }\n  });\n\n  app.put('/api/admin/testimonials/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const testimonial = await storage.updateTestimonial(req.params.id, req.body);\n      res.json(testimonial);\n    } catch (error) {\n      console.error(\"Error updating testimonial:\", error);\n      res.status(500).json({ message: \"Failed to update testimonial\" });\n    }\n  });\n\n  app.delete('/api/admin/testimonials/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteTestimonial(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting testimonial:\", error);\n      res.status(500).json({ message: \"Failed to delete testimonial\" });\n    }\n  });\n\n  // Clients\n  app.post('/api/admin/clients', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertClientSchema.parse(req.body);\n      const client = await storage.createClient(validatedData);\n      res.status(201).json(client);\n    } catch (error) {\n      console.error(\"Error creating client:\", error);\n      res.status(500).json({ message: \"Failed to create client\" });\n    }\n  });\n\n  app.put('/api/admin/clients/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const client = await storage.updateClient(req.params.id, req.body);\n      res.json(client);\n    } catch (error) {\n      console.error(\"Error updating client:\", error);\n      res.status(500).json({ message: \"Failed to update client\" });\n    }\n  });\n\n  app.delete('/api/admin/clients/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteClient(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting client:\", error);\n      res.status(500).json({ message: \"Failed to delete client\" });\n    }\n  });\n\n  // Technologies\n  app.post('/api/admin/technologies', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertTechnologySchema.parse(req.body);\n      const technology = await storage.createTechnology(validatedData);\n      res.status(201).json(technology);\n    } catch (error) {\n      console.error(\"Error creating technology:\", error);\n      res.status(500).json({ message: \"Failed to create technology\" });\n    }\n  });\n\n  app.put('/api/admin/technologies/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const technology = await storage.updateTechnology(req.params.id, req.body);\n      res.json(technology);\n    } catch (error) {\n      console.error(\"Error updating technology:\", error);\n      res.status(500).json({ message: \"Failed to update technology\" });\n    }\n  });\n\n  app.delete('/api/admin/technologies/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteTechnology(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting technology:\", error);\n      res.status(500).json({ message: \"Failed to delete technology\" });\n    }\n  });\n\n  // Contact Submissions\n  app.get('/api/admin/contact-submissions', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const submissions = await storage.getContactSubmissions();\n      res.json(submissions);\n    } catch (error) {\n      console.error(\"Error fetching contact submissions:\", error);\n      res.status(500).json({ message: \"Failed to fetch contact submissions\" });\n    }\n  });\n\n  app.put('/api/admin/contact-submissions/:id/read', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.markContactSubmissionRead(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error marking submission as read:\", error);\n      res.status(500).json({ message: \"Failed to mark submission as read\" });\n    }\n  });\n\n  app.delete('/api/admin/contact-submissions/:id', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      await storage.deleteContactSubmission(req.params.id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting contact submission:\", error);\n      res.status(500).json({ message: \"Failed to delete contact submission\" });\n    }\n  });\n\n  // Site Settings\n  app.get('/api/admin/settings', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const settings = await storage.getSiteSettings();\n      res.json(settings);\n    } catch (error) {\n      console.error(\"Error fetching site settings:\", error);\n      res.status(500).json({ message: \"Failed to fetch site settings\" });\n    }\n  });\n\n  app.put('/api/admin/settings', isAuthenticated, isAdmin, async (req, res) => {\n    try {\n      const validatedData = insertSiteSettingSchema.parse(req.body);\n      const setting = await storage.upsertSiteSetting(validatedData);\n      res.json(setting);\n    } catch (error) {\n      console.error(\"Error updating site setting:\", error);\n      res.status(500).json({ message: \"Failed to update site setting\" });\n    }\n  });\n\n  // Handle image uploads for content management\n  app.put('/api/admin/images', isAuthenticated, isAdmin, async (req, res) => {\n    if (!req.body.imageURL) {\n      return res.status(400).json({ error: \"imageURL is required\" });\n    }\n\n    try {\n      const userId = req.user?.claims?.sub;\n      const objectStorageService = new ObjectStorageService();\n      const objectPath = await objectStorageService.trySetObjectEntityAclPolicy(\n        req.body.imageURL,\n        {\n          owner: userId,\n          visibility: \"public\",\n        }\n      );\n\n      res.status(200).json({\n        objectPath: objectPath,\n      });\n    } catch (error) {\n      console.error(\"Error setting image ACL:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":21490},"server/storage.ts":{"content":"import {\n  users,\n  categories,\n  services,\n  caseStudies,\n  teamMembers,\n  testimonials,\n  clients,\n  technologies,\n  contactSubmissions,\n  siteSettings,\n  type User,\n  type UpsertUser,\n  type Category,\n  type InsertCategory,\n  type Service,\n  type InsertService,\n  type CaseStudy,\n  type InsertCaseStudy,\n  type TeamMember,\n  type InsertTeamMember,\n  type Testimonial,\n  type InsertTestimonial,\n  type Client,\n  type InsertClient,\n  type Technology,\n  type InsertTechnology,\n  type ContactSubmission,\n  type InsertContactSubmission,\n  type SiteSetting,\n  type InsertSiteSetting,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, and, ilike } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations (required for Replit Auth)\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  \n  // Category operations\n  getCategories(type?: string): Promise<Category[]>;\n  getCategoryBySlug(slug: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n  updateCategory(id: string, category: Partial<InsertCategory>): Promise<Category>;\n  deleteCategory(id: string): Promise<void>;\n  \n  // Service operations\n  getServices(): Promise<Service[]>;\n  getServiceBySlug(slug: string): Promise<Service | undefined>;\n  createService(service: InsertService): Promise<Service>;\n  updateService(id: string, service: Partial<InsertService>): Promise<Service>;\n  deleteService(id: string): Promise<void>;\n  initializeDefaultServices(): Promise<void>;\n  \n  // Case study operations\n  getCaseStudies(): Promise<CaseStudy[]>;\n  getFeaturedCaseStudies(): Promise<CaseStudy[]>;\n  getCaseStudyBySlug(slug: string): Promise<CaseStudy | undefined>;\n  createCaseStudy(caseStudy: InsertCaseStudy): Promise<CaseStudy>;\n  updateCaseStudy(id: string, caseStudy: Partial<InsertCaseStudy>): Promise<CaseStudy>;\n  deleteCaseStudy(id: string): Promise<void>;\n  \n  // Team member operations\n  getTeamMembers(): Promise<TeamMember[]>;\n  createTeamMember(teamMember: InsertTeamMember): Promise<TeamMember>;\n  updateTeamMember(id: string, teamMember: Partial<InsertTeamMember>): Promise<TeamMember>;\n  deleteTeamMember(id: string): Promise<void>;\n  \n  // Testimonial operations\n  getTestimonials(): Promise<Testimonial[]>;\n  getFeaturedTestimonials(): Promise<Testimonial[]>;\n  createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial>;\n  updateTestimonial(id: string, testimonial: Partial<InsertTestimonial>): Promise<Testimonial>;\n  deleteTestimonial(id: string): Promise<void>;\n  \n  // Client operations\n  getClients(): Promise<Client[]>;\n  createClient(client: InsertClient): Promise<Client>;\n  updateClient(id: string, client: Partial<InsertClient>): Promise<Client>;\n  deleteClient(id: string): Promise<void>;\n  \n  // Technology operations\n  getTechnologies(categoryId?: string): Promise<Technology[]>;\n  createTechnology(technology: InsertTechnology): Promise<Technology>;\n  updateTechnology(id: string, technology: Partial<InsertTechnology>): Promise<Technology>;\n  deleteTechnology(id: string): Promise<void>;\n  \n  // Contact submission operations\n  getContactSubmissions(): Promise<ContactSubmission[]>;\n  createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission>;\n  markContactSubmissionRead(id: string): Promise<void>;\n  deleteContactSubmission(id: string): Promise<void>;\n  \n  // Site settings operations\n  getSiteSettings(): Promise<SiteSetting[]>;\n  getSiteSetting(key: string): Promise<SiteSetting | undefined>;\n  upsertSiteSetting(setting: InsertSiteSetting): Promise<SiteSetting>;\n  deleteSiteSetting(key: string): Promise<void>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n  \n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Category operations\n  async getCategories(type?: string): Promise<Category[]> {\n    const query = db\n      .select()\n      .from(categories)\n      .where(and(\n        eq(categories.isActive, true),\n        type ? eq(categories.type, type) : undefined\n      ))\n      .orderBy(categories.sortOrder, categories.name);\n    return await query;\n  }\n\n  async getCategoryBySlug(slug: string): Promise<Category | undefined> {\n    const [category] = await db\n      .select()\n      .from(categories)\n      .where(and(eq(categories.slug, slug), eq(categories.isActive, true)));\n    return category;\n  }\n\n  async createCategory(category: InsertCategory): Promise<Category> {\n    const [newCategory] = await db\n      .insert(categories)\n      .values(category)\n      .returning();\n    return newCategory;\n  }\n\n  async updateCategory(id: string, category: Partial<InsertCategory>): Promise<Category> {\n    const [updatedCategory] = await db\n      .update(categories)\n      .set({ ...category, updatedAt: new Date() })\n      .where(eq(categories.id, id))\n      .returning();\n    return updatedCategory;\n  }\n\n  async deleteCategory(id: string): Promise<void> {\n    await db.delete(categories).where(eq(categories.id, id));\n  }\n\n  // Service operations\n  async getServices(): Promise<Service[]> {\n    return await db\n      .select()\n      .from(services)\n      .where(eq(services.isActive, true))\n      .orderBy(services.sortOrder, services.title);\n  }\n\n  async getServiceBySlug(slug: string): Promise<Service | undefined> {\n    const [service] = await db\n      .select()\n      .from(services)\n      .where(and(eq(services.slug, slug), eq(services.isActive, true)));\n    return service;\n  }\n\n  async createService(service: InsertService): Promise<Service> {\n    const [newService] = await db\n      .insert(services)\n      .values(service)\n      .returning();\n    return newService;\n  }\n\n  // Initialize default services if they don't exist\n  async initializeDefaultServices(): Promise<void> {\n    try {\n      console.log('Initializing default services...');\n      const existingServices = await this.getServices();\n      console.log('Existing services count:', existingServices.length);\n      \n      const defaultServices = [\n        {\n          title: \"Web Application Development\",\n          slug: \"web-application-development\",\n          shortDescription: \"Custom web applications built with modern technologies for scalable, secure, and user-friendly digital solutions.\",\n          longDescription: \"Our web application development services focus on creating robust, scalable, and secure web solutions tailored to your business needs. We leverage cutting-edge technologies and best practices to deliver high-performance applications that drive business growth and enhance user experience.\",\n          features: [\n            \"Custom Web Applications\",\n            \"Progressive Web Apps (PWA)\",\n            \"Single Page Applications (SPA)\",\n            \"Enterprise Web Portals\",\n            \"E-commerce Platforms\",\n            \"Content Management Systems\",\n            \"API Development & Integration\",\n            \"Database Design & Optimization\",\n            \"Cloud Deployment & Scaling\",\n            \"Security Implementation\"\n          ],\n          technologies: [\n            \"React\", \"Vue.js\", \"Angular\", \"Node.js\", \"Python\", \"Django\", \"Flask\", \n            \"PHP\", \"Laravel\", \"Ruby on Rails\", \"PostgreSQL\", \"MongoDB\", \"AWS\", \"Docker\"\n          ],\n          isActive: true,\n          sortOrder: 1\n        },\n        {\n          title: \"Mobile App Development\",\n          slug: \"mobile-app-development\",\n          shortDescription: \"Native and cross-platform mobile applications that deliver exceptional user experiences across iOS and Android devices.\",\n          longDescription: \"We specialize in developing high-quality mobile applications that engage users and drive business success. Our mobile app development services cover the entire development lifecycle, from concept and design to deployment and maintenance, ensuring your app stands out in the competitive mobile marketplace.\",\n          features: [\n            \"Native iOS Development\",\n            \"Native Android Development\",\n            \"Cross-Platform Development\",\n            \"React Native Applications\",\n            \"Flutter Applications\",\n            \"Mobile UI/UX Design\",\n            \"App Store Optimization\",\n            \"Push Notifications\",\n            \"Offline Functionality\",\n            \"Mobile App Analytics\"\n          ],\n          technologies: [\n            \"React Native\", \"Flutter\", \"Swift\", \"Kotlin\", \"Java\", \"Dart\", \n            \"Xamarin\", \"Ionic\", \"Firebase\", \"SQLite\", \"Core Data\", \"Room\"\n          ],\n          isActive: true,\n          sortOrder: 2\n        }\n      ];\n\n      for (const service of defaultServices) {\n        const exists = existingServices.find(s => s.slug === service.slug);\n        if (!exists) {\n          console.log(`Creating service: ${service.title}`);\n          await this.createService(service);\n          console.log(`Created default service: ${service.title}`);\n        } else {\n          console.log(`Service already exists: ${service.title}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error initializing default services:', error);\n    }\n  }\n\n  async updateService(id: string, service: Partial<InsertService>): Promise<Service> {\n    const [updatedService] = await db\n      .update(services)\n      .set({ ...service, updatedAt: new Date() })\n      .where(eq(services.id, id))\n      .returning();\n    return updatedService;\n  }\n\n  async deleteService(id: string): Promise<void> {\n    await db.delete(services).where(eq(services.id, id));\n  }\n\n  // Case study operations\n  async getCaseStudies(): Promise<CaseStudy[]> {\n    return await db\n      .select()\n      .from(caseStudies)\n      .where(eq(caseStudies.isActive, true))\n      .orderBy(desc(caseStudies.isFeatured), caseStudies.sortOrder, desc(caseStudies.createdAt));\n  }\n\n  async getFeaturedCaseStudies(): Promise<CaseStudy[]> {\n    return await db\n      .select()\n      .from(caseStudies)\n      .where(and(eq(caseStudies.isActive, true), eq(caseStudies.isFeatured, true)))\n      .orderBy(caseStudies.sortOrder, desc(caseStudies.createdAt))\n      .limit(6);\n  }\n\n  async getCaseStudyBySlug(slug: string): Promise<CaseStudy | undefined> {\n    const [caseStudy] = await db\n      .select()\n      .from(caseStudies)\n      .where(and(eq(caseStudies.slug, slug), eq(caseStudies.isActive, true)));\n    return caseStudy;\n  }\n\n  async createCaseStudy(caseStudy: InsertCaseStudy): Promise<CaseStudy> {\n    const [newCaseStudy] = await db\n      .insert(caseStudies)\n      .values(caseStudy)\n      .returning();\n    return newCaseStudy;\n  }\n\n  async updateCaseStudy(id: string, caseStudy: Partial<InsertCaseStudy>): Promise<CaseStudy> {\n    const [updatedCaseStudy] = await db\n      .update(caseStudies)\n      .set({ ...caseStudy, updatedAt: new Date() })\n      .where(eq(caseStudies.id, id))\n      .returning();\n    return updatedCaseStudy;\n  }\n\n  async deleteCaseStudy(id: string): Promise<void> {\n    await db.delete(caseStudies).where(eq(caseStudies.id, id));\n  }\n\n  // Team member operations\n  async getTeamMembers(): Promise<TeamMember[]> {\n    return await db\n      .select()\n      .from(teamMembers)\n      .where(eq(teamMembers.isActive, true))\n      .orderBy(teamMembers.sortOrder, teamMembers.name);\n  }\n\n  async createTeamMember(teamMember: InsertTeamMember): Promise<TeamMember> {\n    const [newTeamMember] = await db\n      .insert(teamMembers)\n      .values(teamMember)\n      .returning();\n    return newTeamMember;\n  }\n\n  async updateTeamMember(id: string, teamMember: Partial<InsertTeamMember>): Promise<TeamMember> {\n    const [updatedTeamMember] = await db\n      .update(teamMembers)\n      .set({ ...teamMember, updatedAt: new Date() })\n      .where(eq(teamMembers.id, id))\n      .returning();\n    return updatedTeamMember;\n  }\n\n  async deleteTeamMember(id: string): Promise<void> {\n    await db.delete(teamMembers).where(eq(teamMembers.id, id));\n  }\n\n  // Testimonial operations\n  async getTestimonials(): Promise<Testimonial[]> {\n    return await db\n      .select()\n      .from(testimonials)\n      .where(eq(testimonials.isActive, true))\n      .orderBy(desc(testimonials.isFeatured), testimonials.sortOrder, desc(testimonials.createdAt));\n  }\n\n  async getFeaturedTestimonials(): Promise<Testimonial[]> {\n    return await db\n      .select()\n      .from(testimonials)\n      .where(and(eq(testimonials.isActive, true), eq(testimonials.isFeatured, true)))\n      .orderBy(testimonials.sortOrder, desc(testimonials.createdAt))\n      .limit(3);\n  }\n\n  async createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial> {\n    const [newTestimonial] = await db\n      .insert(testimonials)\n      .values(testimonial)\n      .returning();\n    return newTestimonial;\n  }\n\n  async updateTestimonial(id: string, testimonial: Partial<InsertTestimonial>): Promise<Testimonial> {\n    const [updatedTestimonial] = await db\n      .update(testimonials)\n      .set({ ...testimonial, updatedAt: new Date() })\n      .where(eq(testimonials.id, id))\n      .returning();\n    return updatedTestimonial;\n  }\n\n  async deleteTestimonial(id: string): Promise<void> {\n    await db.delete(testimonials).where(eq(testimonials.id, id));\n  }\n\n  // Client operations\n  async getClients(): Promise<Client[]> {\n    return await db\n      .select()\n      .from(clients)\n      .where(eq(clients.isActive, true))\n      .orderBy(clients.sortOrder, clients.name);\n  }\n\n  async createClient(client: InsertClient): Promise<Client> {\n    const [newClient] = await db\n      .insert(clients)\n      .values(client)\n      .returning();\n    return newClient;\n  }\n\n  async updateClient(id: string, client: Partial<InsertClient>): Promise<Client> {\n    const [updatedClient] = await db\n      .update(clients)\n      .set({ ...client, updatedAt: new Date() })\n      .where(eq(clients.id, id))\n      .returning();\n    return updatedClient;\n  }\n\n  async deleteClient(id: string): Promise<void> {\n    await db.delete(clients).where(eq(clients.id, id));\n  }\n\n  // Technology operations\n  async getTechnologies(categoryId?: string): Promise<Technology[]> {\n    return await db\n      .select()\n      .from(technologies)\n      .where(and(\n        eq(technologies.isActive, true),\n        categoryId ? eq(technologies.categoryId, categoryId) : undefined\n      ))\n      .orderBy(technologies.sortOrder, technologies.name);\n  }\n\n  async createTechnology(technology: InsertTechnology): Promise<Technology> {\n    const [newTechnology] = await db\n      .insert(technologies)\n      .values(technology)\n      .returning();\n    return newTechnology;\n  }\n\n  async updateTechnology(id: string, technology: Partial<InsertTechnology>): Promise<Technology> {\n    const [updatedTechnology] = await db\n      .update(technologies)\n      .set({ ...technology, updatedAt: new Date() })\n      .where(eq(technologies.id, id))\n      .returning();\n    return updatedTechnology;\n  }\n\n  async deleteTechnology(id: string): Promise<void> {\n    await db.delete(technologies).where(eq(technologies.id, id));\n  }\n\n  // Contact submission operations\n  async getContactSubmissions(): Promise<ContactSubmission[]> {\n    return await db\n      .select()\n      .from(contactSubmissions)\n      .orderBy(desc(contactSubmissions.createdAt));\n  }\n\n  async createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission> {\n    const [newSubmission] = await db\n      .insert(contactSubmissions)\n      .values(submission)\n      .returning();\n    return newSubmission;\n  }\n\n  async markContactSubmissionRead(id: string): Promise<void> {\n    await db\n      .update(contactSubmissions)\n      .set({ isRead: true })\n      .where(eq(contactSubmissions.id, id));\n  }\n\n  async deleteContactSubmission(id: string): Promise<void> {\n    await db.delete(contactSubmissions).where(eq(contactSubmissions.id, id));\n  }\n\n  // Site settings operations\n  async getSiteSettings(): Promise<SiteSetting[]> {\n    return await db\n      .select()\n      .from(siteSettings)\n      .orderBy(siteSettings.key);\n  }\n\n  async getSiteSetting(key: string): Promise<SiteSetting | undefined> {\n    const [setting] = await db\n      .select()\n      .from(siteSettings)\n      .where(eq(siteSettings.key, key));\n    return setting;\n  }\n\n  async upsertSiteSetting(setting: InsertSiteSetting): Promise<SiteSetting> {\n    const [upsertedSetting] = await db\n      .insert(siteSettings)\n      .values(setting)\n      .onConflictDoUpdate({\n        target: siteSettings.key,\n        set: {\n          value: setting.value,\n          type: setting.type,\n          description: setting.description,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return upsertedSetting;\n  }\n\n  async deleteSiteSetting(key: string): Promise<void> {\n    await db.delete(siteSettings).where(eq(siteSettings.key, key));\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":17411},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  text,\n  boolean,\n  integer,\n  uuid,\n} from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table (required for Replit Auth)\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)]\n);\n\n// User storage table (required for Replit Auth)\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  isAdmin: boolean(\"is_admin\").default(false),\n  adminPassword: varchar(\"admin_password\"), // For direct admin login\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Categories for organizing content\nexport const categories = pgTable(\"categories\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  slug: varchar(\"slug\", { length: 255 }).unique().notNull(),\n  description: text(\"description\"),\n  type: varchar(\"type\", { length: 50 }).notNull(), // 'service', 'case-study', 'technology', etc.\n  sortOrder: integer(\"sort_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Services offered by the company\nexport const services = pgTable(\"services\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  slug: varchar(\"slug\", { length: 255 }).unique().notNull(),\n  shortDescription: text(\"short_description\"),\n  longDescription: text(\"long_description\"),\n  iconUrl: varchar(\"icon_url\"),\n  categoryId: uuid(\"category_id\").references(() => categories.id),\n  features: jsonb(\"features\").$type<string[]>(),\n  technologies: jsonb(\"technologies\").$type<string[]>(),\n  sortOrder: integer(\"sort_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Case studies and portfolio items\nexport const caseStudies = pgTable(\"case_studies\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  slug: varchar(\"slug\", { length: 255 }).unique().notNull(),\n  clientName: varchar(\"client_name\", { length: 255 }),\n  shortDescription: text(\"short_description\"),\n  longDescription: text(\"long_description\"),\n  challenge: text(\"challenge\"),\n  solution: text(\"solution\"),\n  results: text(\"results\"),\n  imageUrl: varchar(\"image_url\"),\n  categoryId: uuid(\"category_id\").references(() => categories.id),\n  technologies: jsonb(\"technologies\").$type<string[]>(),\n  tags: jsonb(\"tags\").$type<string[]>(),\n  projectDuration: varchar(\"project_duration\"),\n  teamSize: integer(\"team_size\"),\n  sortOrder: integer(\"sort_order\").default(0),\n  isFeatured: boolean(\"is_featured\").default(false),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Team members\nexport const teamMembers = pgTable(\"team_members\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  role: varchar(\"role\", { length: 255 }).notNull(),\n  bio: text(\"bio\"),\n  expertise: jsonb(\"expertise\").$type<string[]>(),\n  imageUrl: varchar(\"image_url\"),\n  linkedinUrl: varchar(\"linkedin_url\"),\n  githubUrl: varchar(\"github_url\"),\n  twitterUrl: varchar(\"twitter_url\"),\n  sortOrder: integer(\"sort_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Client testimonials\nexport const testimonials = pgTable(\"testimonials\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  content: text(\"content\").notNull(),\n  authorName: varchar(\"author_name\", { length: 255 }).notNull(),\n  authorTitle: varchar(\"author_title\", { length: 255 }),\n  authorCompany: varchar(\"author_company\", { length: 255 }),\n  authorImageUrl: varchar(\"author_image_url\"),\n  rating: integer(\"rating\").default(5),\n  sortOrder: integer(\"sort_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  isFeatured: boolean(\"is_featured\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Client logos\nexport const clients = pgTable(\"clients\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  logoUrl: varchar(\"logo_url\").notNull(),\n  websiteUrl: varchar(\"website_url\"),\n  description: text(\"description\"),\n  sortOrder: integer(\"sort_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Technologies and tools\nexport const technologies = pgTable(\"technologies\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  slug: varchar(\"slug\", { length: 255 }).unique().notNull(),\n  description: text(\"description\"),\n  logoUrl: varchar(\"logo_url\"),\n  websiteUrl: varchar(\"website_url\"),\n  categoryId: uuid(\"category_id\").references(() => categories.id),\n  sortOrder: integer(\"sort_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Contact form submissions\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: varchar(\"first_name\", { length: 255 }).notNull(),\n  lastName: varchar(\"last_name\", { length: 255 }).notNull(),\n  email: varchar(\"email\", { length: 255 }).notNull(),\n  company: varchar(\"company\", { length: 255 }),\n  projectType: varchar(\"project_type\", { length: 100 }),\n  message: text(\"message\").notNull(),\n  isRead: boolean(\"is_read\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Site settings and configuration\nexport const siteSettings = pgTable(\"site_settings\", {\n  id: uuid(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  key: varchar(\"key\", { length: 255 }).unique().notNull(),\n  value: text(\"value\"),\n  type: varchar(\"type\", { length: 50 }).default(\"text\"), // 'text', 'json', 'image', 'boolean'\n  description: text(\"description\"),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Relations\nexport const servicesRelations = relations(services, ({ one }) => ({\n  category: one(categories, {\n    fields: [services.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const caseStudiesRelations = relations(caseStudies, ({ one }) => ({\n  category: one(categories, {\n    fields: [caseStudies.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const technologiesRelations = relations(technologies, ({ one }) => ({\n  category: one(categories, {\n    fields: [technologies.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const categoriesRelations = relations(categories, ({ many }) => ({\n  services: many(services),\n  caseStudies: many(caseStudies),\n  technologies: many(technologies),\n}));\n\n// Insert schemas\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertServiceSchema = createInsertSchema(services).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertCaseStudySchema = createInsertSchema(caseStudies).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  categoryId: z.string().uuid().optional().nullable(),\n});\n\nexport const insertTeamMemberSchema = createInsertSchema(teamMembers).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertTestimonialSchema = createInsertSchema(testimonials).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertClientSchema = createInsertSchema(clients).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertTechnologySchema = createInsertSchema(technologies).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertSiteSettingSchema = createInsertSchema(siteSettings).omit({\n  id: true,\n  updatedAt: true,\n});\n\n// Types\nexport type UpsertUser = typeof users.$inferInsert;\nexport type User = typeof users.$inferSelect;\nexport type Category = typeof categories.$inferSelect;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Service = typeof services.$inferSelect;\nexport type InsertService = z.infer<typeof insertServiceSchema>;\nexport type CaseStudy = typeof caseStudies.$inferSelect;\nexport type InsertCaseStudy = z.infer<typeof insertCaseStudySchema>;\nexport type TeamMember = typeof teamMembers.$inferSelect;\nexport type InsertTeamMember = z.infer<typeof insertTeamMemberSchema>;\nexport type Testimonial = typeof testimonials.$inferSelect;\nexport type InsertTestimonial = z.infer<typeof insertTestimonialSchema>;\nexport type Client = typeof clients.$inferSelect;\nexport type InsertClient = z.infer<typeof insertClientSchema>;\nexport type Technology = typeof technologies.$inferSelect;\nexport type InsertTechnology = z.infer<typeof insertTechnologySchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type SiteSetting = typeof siteSettings.$inferSelect;\nexport type InsertSiteSetting = z.infer<typeof insertSiteSettingSchema>;\n","size_bytes":10240},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/Home\";\nimport Services from \"@/pages/Services\";\nimport ServiceDetail from \"@/pages/ServiceDetail\";\nimport Portfolio from \"@/pages/Portfolio\";\nimport CaseStudyDetail from \"@/pages/CaseStudyDetail\";\nimport About from \"@/pages/About\";\nimport Contact from \"@/pages/Contact\";\nimport Technologies from \"@/pages/Technologies\";\nimport AdminLogin from \"@/pages/admin/AdminLogin\";\nimport AdminHome from \"@/pages/admin/AdminHome\";\nimport ContentManager from \"@/pages/admin/ContentManager\";\nimport CaseStudyManager from \"@/pages/admin/CaseStudyManager\";\nimport TeamManager from \"@/pages/admin/TeamManager\";\nimport TestimonialManager from \"@/pages/admin/TestimonialManager\";\nimport CategoryManager from \"@/pages/admin/CategoryManager\";\nimport Layout from \"@/components/Layout\";\nimport AdminLayout from \"@/components/AdminLayout\";\n\n// Service Pages\nimport DedicatedTeam from \"@/pages/services/DedicatedTeam\";\nimport StaffAugmentation from \"@/pages/services/StaffAugmentation\";\nimport AIMLDevelopment from \"@/pages/services/AIMLDevelopment\";\nimport ERPCRMCMSDevelopment from \"@/pages/services/ERPCRMCMSDevelopment\";\nimport CustomSoftwareDevelopment from \"@/pages/services/CustomSoftwareDevelopment\";\nimport DataEngineering from \"@/pages/services/DataEngineering\";\nimport MobileAppDevelopment from \"@/pages/services/MobileAppDevelopment\";\nimport DevOpsCloud from \"@/pages/services/DevOpsCloud\";\nimport ChatbotDevelopment from \"@/pages/services/ChatbotDevelopment\";\nimport ProjectDelivery from \"@/pages/services/ProjectDelivery\";\nimport VirtualCTO from \"@/pages/services/VirtualCTO\";\nimport EnterpriseSearch from \"@/pages/services/EnterpriseSearch\";\n\nfunction PublicRoutes() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/services\" component={Services} />\n        \n        {/* Dedicated Service Pages */}\n        <Route path=\"/services/dedicated-team\" component={DedicatedTeam} />\n        <Route path=\"/services/staff-augmentation\" component={StaffAugmentation} />\n        <Route path=\"/services/ai-ml-development\" component={AIMLDevelopment} />\n        <Route path=\"/services/ai-ml\" component={AIMLDevelopment} />\n        <Route path=\"/services/erp-crm-cms-development\" component={ERPCRMCMSDevelopment} />\n        <Route path=\"/services/erp-crm\" component={ERPCRMCMSDevelopment} />\n        <Route path=\"/services/custom-software-development\" component={CustomSoftwareDevelopment} />\n        <Route path=\"/services/custom-software\" component={CustomSoftwareDevelopment} />\n        <Route path=\"/services/data-engineering\" component={DataEngineering} />\n        <Route path=\"/services/mobile-app-development\" component={MobileAppDevelopment} />\n        <Route path=\"/services/mobile-app\" component={MobileAppDevelopment} />\n        <Route path=\"/services/devops-cloud\" component={DevOpsCloud} />\n        <Route path=\"/services/chatbot-development\" component={ChatbotDevelopment} />\n        <Route path=\"/services/chatbots\" component={ChatbotDevelopment} />\n        <Route path=\"/services/project-delivery\" component={ProjectDelivery} />\n        <Route path=\"/services/virtual-cto\" component={VirtualCTO} />\n        <Route path=\"/services/enterprise-search\" component={EnterpriseSearch} />\n        \n        <Route path=\"/services/:slug\" component={ServiceDetail} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n        <Route path=\"/case-studies/:slug\" component={CaseStudyDetail} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/technologies\" component={Technologies} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nfunction AdminRoutes() {\n  const { isAuthenticated, isLoading, user } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated || !user?.isAdmin) {\n    return <AdminLogin />;\n  }\n\n  return (\n    <AdminLayout>\n      <Switch>\n        <Route path=\"/admin\" component={AdminHome} />\n        <Route path=\"/admin/content\" component={ContentManager} />\n        <Route path=\"/admin/case-studies\" component={CaseStudyManager} />\n        <Route path=\"/admin/team\" component={TeamManager} />\n        <Route path=\"/admin/testimonials\" component={TestimonialManager} />\n        <Route path=\"/admin/categories\" component={CategoryManager} />\n        <Route component={NotFound} />\n      </Switch>\n    </AdminLayout>\n  );\n}\n\nfunction Router() {\n  return (\n    <Switch>\n      {/* Admin routes - hidden from public navigation */}\n      <Route path=\"/admin\" nest>\n        <AdminRoutes />\n      </Route>\n      \n      {/* Public routes */}\n      <Route>\n        <PublicRoutes />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":5469},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222.2 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222.2 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222.2 84% 4.9%);\n  --primary: hsl(222.2 47.4% 11.2%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(210 40% 96%);\n  --secondary-foreground: hsl(222.2 84% 4.9%);\n  --muted: hsl(210 40% 96%);\n  --muted-foreground: hsl(215.4 16.3% 46.9%);\n  --accent: hsl(210 40% 96%);\n  --accent-foreground: hsl(222.2 84% 4.9%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(214.3 31.8% 91.4%);\n  --input: hsl(214.3 31.8% 91.4%);\n  --ring: hsl(222.2 84% 4.9%);\n  --chart-1: hsl(12 76% 61%);\n  --chart-2: hsl(173 58% 39%);\n  --chart-3: hsl(197 37% 24%);\n  --chart-4: hsl(43 74% 66%);\n  --chart-5: hsl(27 87% 67%);\n  --radius: 0.5rem;\n  \n  /* Pi Tetris Brand Colors */\n  --pi-blue: hsl(224 71% 36%);\n  --pi-blue-light: hsl(224 71% 46%);\n  --pi-blue-lighter: hsl(224 71% 56%);\n  --pi-gray: hsl(215 16% 47%);\n  --pi-gray-light: hsl(215 16% 57%);\n  --pi-gray-dark: hsl(215 25% 27%);\n}\n\n.dark {\n  --background: hsl(222.2 84% 4.9%);\n  --foreground: hsl(210 40% 98%);\n  --card: hsl(222.2 84% 4.9%);\n  --card-foreground: hsl(210 40% 98%);\n  --popover: hsl(222.2 84% 4.9%);\n  --popover-foreground: hsl(210 40% 98%);\n  --primary: hsl(210 40% 98%);\n  --primary-foreground: hsl(222.2 47.4% 11.2%);\n  --secondary: hsl(217.2 32.6% 17.5%);\n  --secondary-foreground: hsl(210 40% 98%);\n  --muted: hsl(217.2 32.6% 17.5%);\n  --muted-foreground: hsl(215 20.2% 65.1%);\n  --accent: hsl(217.2 32.6% 17.5%);\n  --accent-foreground: hsl(210 40% 98%);\n  --destructive: hsl(0 62.8% 30.6%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(217.2 32.6% 17.5%);\n  --input: hsl(217.2 32.6% 17.5%);\n  --ring: hsl(212.7 26.8% 83.9%);\n  --chart-1: hsl(220 70% 50%);\n  --chart-2: hsl(160 60% 45%);\n  --chart-3: hsl(30 80% 55%);\n  --chart-4: hsl(280 65% 60%);\n  --chart-5: hsl(340 75% 55%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n  \n  /* Custom scrollbar */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    @apply bg-gray-100;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    @apply bg-gray-300 rounded-full;\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    @apply bg-gray-400;\n  }\n}\n\n@layer components {\n  /* Custom utility classes for Pi Tetris brand */\n  .text-pi-blue {\n    color: var(--pi-blue);\n  }\n  \n  .text-pi-blue-light {\n    color: var(--pi-blue-light);\n  }\n  \n  .text-pi-gray {\n    color: var(--pi-gray);\n  }\n  \n  .text-pi-gray-dark {\n    color: var(--pi-gray-dark);\n  }\n  \n  .bg-pi-blue {\n    background-color: var(--pi-blue);\n  }\n  \n  .bg-pi-blue-light {\n    background-color: var(--pi-blue-light);\n  }\n  \n  .border-pi-blue {\n    border-color: var(--pi-blue);\n  }\n  \n  /* Line clamp utilities */\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  \n  .line-clamp-3 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;\n  }\n  \n  /* Smooth animations */\n  .animate-fade-in {\n    animation: fadeIn 0.6s ease-in-out;\n  }\n  \n  .animate-slide-up {\n    animation: slideUp 0.6s ease-out;\n  }\n  \n  /* Custom gradient backgrounds */\n  .bg-gradient-pi {\n    background: linear-gradient(135deg, var(--pi-blue) 0%, var(--pi-blue-light) 100%);\n  }\n  \n  /* Focus ring for accessibility */\n  .focus-ring {\n    @apply focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2;\n  }\n}\n\n@layer utilities {\n  /* Custom animations */\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  /* Glass morphism effect */\n  .glass {\n    backdrop-filter: blur(16px) saturate(180%);\n    background-color: rgba(255, 255, 255, 0.75);\n    border: 1px solid rgba(255, 255, 255, 0.125);\n  }\n  \n  .glass-dark {\n    backdrop-filter: blur(16px) saturate(180%);\n    background-color: rgba(17, 25, 40, 0.75);\n    border: 1px solid rgba(255, 255, 255, 0.125);\n  }\n  \n  /* Professional shadows */\n  .shadow-professional {\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  }\n  \n  .shadow-professional-lg {\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  }\n}\n\n/* Typography improvements */\n.prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {\n  @apply text-gray-900 font-semibold;\n}\n\n.prose p {\n  @apply text-gray-600 leading-relaxed;\n}\n\n.prose a {\n  @apply text-blue-600 hover:text-blue-700 transition-colors;\n}\n\n.prose strong {\n  @apply text-gray-900 font-semibold;\n}\n\n.prose ul {\n  @apply space-y-2;\n}\n\n.prose li {\n  @apply text-gray-600;\n}\n\n/* Button hover effects */\n.btn-hover-lift {\n  @apply transition-all duration-200 hover:shadow-lg hover:-translate-y-0.5;\n}\n\n/* Loading spinner */\n.spinner {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Professional input styling */\n.input-professional {\n  @apply transition-all duration-200 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50;\n}\n\n/* Card hover effects */\n.card-hover {\n  @apply transition-all duration-300 hover:shadow-lg hover:-translate-y-1;\n}\n\n/* Text gradient */\n.text-gradient {\n  background: linear-gradient(135deg, var(--pi-blue), var(--pi-blue-light));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n","size_bytes":5874},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/AdminLayout.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { \n  LayoutDashboard, \n  FileText, \n  Users, \n  Star, \n  Building, \n  Settings, \n  LogOut,\n  MessageSquare,\n  Folder\n} from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\n\ninterface AdminLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function AdminLayout({ children }: AdminLayoutProps) {\n  const { user } = useAuth();\n  const [location] = useLocation();\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/auth/logout', { method: 'POST' });\n      window.location.href = '/';\n    } catch (error) {\n      console.error('Logout error:', error);\n      window.location.href = '/';\n    }\n  };\n\n  const navigation = [\n    { name: \"Dashboard\", href: \"/admin\", icon: LayoutDashboard },\n    { name: \"Content\", href: \"/admin/content\", icon: FileText },\n    { name: \"Case Studies\", href: \"/admin/case-studies\", icon: FileText },\n    { name: \"Team\", href: \"/admin/team\", icon: Users },\n    { name: \"Testimonials\", href: \"/admin/testimonials\", icon: Star },\n    { name: \"Categories\", href: \"/admin/categories\", icon: Folder },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Sidebar */}\n      <div className=\"w-64 bg-white shadow-sm border-r\">\n        <div className=\"p-6\">\n          <h1 className=\"text-xl font-bold text-blue-600\">Pi Tetris Admin</h1>\n          <p className=\"text-sm text-gray-600 mt-1\">Content Management</p>\n        </div>\n        \n        <nav className=\"mt-6\">\n          <div className=\"px-3\">\n            {navigation.map((item) => {\n              const isActive = location === item.href;\n              return (\n                <Link key={item.name} href={item.href}>\n                  <a \n                    className={`group flex items-center px-3 py-2 text-sm font-medium rounded-md mb-1 transition-colors ${\n                      isActive\n                        ? \"bg-blue-100 text-blue-900\"\n                        : \"text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                    }`}\n                    data-testid={`nav-${item.name.toLowerCase().replace(' ', '-')}`}\n                  >\n                    <item.icon className={`mr-3 h-5 w-5 ${isActive ? \"text-blue-500\" : \"text-gray-400\"}`} />\n                    {item.name}\n                  </a>\n                </Link>\n              );\n            })}\n          </div>\n        </nav>\n\n        {/* User Info & Logout */}\n        <div className=\"absolute bottom-0 w-64 p-4 border-t\">\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">\n                    {user?.firstName || user?.email}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">Administrator</p>\n                </div>\n                <Button\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  onClick={handleLogout}\n                  data-testid=\"button-admin-logout\"\n                >\n                  <LogOut className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Header */}\n        <header className=\"bg-white shadow-sm border-b\">\n          <div className=\"px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-2xl font-semibold text-gray-900\">\n                  {navigation.find(item => item.href === location)?.name || \"Admin\"}\n                </h2>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <Link href=\"/\">\n                  <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-website\">\n                    View Website\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Page Content */}\n        <main className=\"flex-1 overflow-auto\">\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4313},"client/src/components/CaseStudies.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport default function CaseStudies() {\n  const { data: caseStudies, isLoading } = useQuery({\n    queryKey: ['/api/case-studies', { featured: 'true' }],\n  });\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center min-h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  // Default case studies if none loaded\n  const defaultCaseStudies = [\n    {\n      id: 1,\n      title: 'Transforming Healthcare with AI-Powered Diagnostics',\n      shortDescription: 'Built an AI-driven diagnostic platform that reduced diagnosis time by 70% and improved accuracy by 45% for a leading healthcare provider.',\n      slug: 'ai-healthcare-platform',\n      categoryId: 'ai',\n      imageUrl: null\n    },\n    {\n      id: 2,\n      title: 'E-commerce Platform Modernization',\n      shortDescription: 'Modernized legacy e-commerce platform resulting in 300% performance improvement and 50% increase in conversion rates.',\n      slug: 'ecommerce-modernization',\n      categoryId: 'web',\n      imageUrl: null\n    },\n    {\n      id: 3,\n      title: 'Real-Time Data Pipeline Optimization',\n      shortDescription: 'Built scalable data infrastructure processing 10TB+ daily, reducing data processing time from hours to minutes.',\n      slug: 'data-pipeline-optimization',\n      categoryId: 'data',\n      imageUrl: null\n    }\n  ];\n\n  const displayCaseStudies = caseStudies || defaultCaseStudies;\n\n  const getCategoryColor = (categoryId: string) => {\n    const colors: Record<string, string> = {\n      'ai': 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-200',\n      'web': 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-200',\n      'data': 'bg-purple-100 text-purple-700 dark:bg-purple-900 dark:text-purple-200',\n      'mobile': 'bg-orange-100 text-orange-700 dark:bg-orange-900 dark:text-orange-200',\n    };\n    return colors[categoryId] || 'bg-gray-100 text-gray-700 dark:bg-gray-900 dark:text-gray-200';\n  };\n\n  const getCategoryLabel = (categoryId: string) => {\n    const labels: Record<string, string> = {\n      'ai': 'AI',\n      'web': 'Web',\n      'data': 'Data',\n      'mobile': 'Mobile',\n    };\n    return labels[categoryId] || 'Case Study';\n  };\n\n  return (\n    <section className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-case-studies-title\">\n            Featured Case Studies\n          </h2>\n          <p className=\"text-xl text-pi-gray\" data-testid=\"text-case-studies-description\">\n            See how we've helped our clients achieve their goals through innovative technology solutions.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {displayCaseStudies.map((caseStudy: any) => (\n            <div key={caseStudy.id} className=\"bg-white dark:bg-gray-900 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg transition-shadow group\" data-testid={`case-study-${caseStudy.slug}`}>\n              {caseStudy.imageUrl ? (\n                <div className=\"h-48\">\n                  <img \n                    src={caseStudy.imageUrl} \n                    alt={caseStudy.title}\n                    className=\"w-full h-full object-cover\"\n                    data-testid={`img-case-study-${caseStudy.slug}`}\n                  />\n                </div>\n              ) : (\n                <div className=\"h-48 bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center\">\n                  <div className=\"text-white text-center\">\n                    <svg className=\"w-16 h-16 mx-auto mb-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <p className=\"text-sm font-medium\">Case Study</p>\n                  </div>\n                </div>\n              )}\n              <div className=\"p-6\">\n                <div className=\"flex items-center mb-2\">\n                  <span className={`text-xs font-medium px-2 py-1 rounded ${getCategoryColor(caseStudy.categoryId || 'ai')}`} data-testid={`badge-category-${caseStudy.slug}`}>\n                    {getCategoryLabel(caseStudy.categoryId || 'ai')}\n                  </span>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2 group-hover:text-pi-blue transition-colors\" data-testid={`text-case-study-title-${caseStudy.slug}`}>\n                  {caseStudy.title}\n                </h3>\n                <p className=\"text-pi-gray text-sm mb-4\" data-testid={`text-case-study-description-${caseStudy.slug}`}>\n                  {caseStudy.shortDescription}\n                </p>\n                <a \n                  href={`/case-studies/${caseStudy.slug}`}\n                  className=\"text-pi-blue font-medium hover:text-pi-blue-dark transition-colors\"\n                  data-testid={`link-case-study-${caseStudy.slug}`}\n                >\n                  Learn More →\n                </a>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5730},"client/src/components/CaseStudyCard.tsx":{"content":"import { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Star } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\ninterface CaseStudyCardProps {\n  caseStudy: {\n    id: string;\n    title: string;\n    slug: string;\n    clientName?: string;\n    shortDescription?: string;\n    imageUrl?: string;\n    technologies?: string[];\n    tags?: string[];\n    isFeatured: boolean;\n    isActive: boolean;\n  };\n}\n\nexport default function CaseStudyCard({ caseStudy }: CaseStudyCardProps) {\n  const getCategoryColor = (technology: string) => {\n    const tech = technology.toLowerCase();\n    if (tech.includes('ai') || tech.includes('ml') || tech.includes('machine learning')) {\n      return 'bg-purple-100 text-purple-800';\n    }\n    if (tech.includes('react') || tech.includes('web') || tech.includes('frontend')) {\n      return 'bg-blue-100 text-blue-800';\n    }\n    if (tech.includes('data') || tech.includes('analytics')) {\n      return 'bg-green-100 text-green-800';\n    }\n    return 'bg-gray-100 text-gray-800';\n  };\n\n  const getGradientFromTech = (technologies: string[]) => {\n    if (!technologies || technologies.length === 0) return 'from-blue-500 to-purple-600';\n    \n    const firstTech = technologies[0].toLowerCase();\n    if (firstTech.includes('ai') || firstTech.includes('ml')) {\n      return 'from-purple-500 to-pink-600';\n    }\n    if (firstTech.includes('web') || firstTech.includes('react')) {\n      return 'from-blue-500 to-cyan-600';\n    }\n    if (firstTech.includes('data')) {\n      return 'from-green-500 to-teal-600';\n    }\n    return 'from-blue-500 to-purple-600';\n  };\n\n  return (\n    <Card className=\"hover:shadow-lg transition-shadow group overflow-hidden\">\n      {/* Image or Gradient Header */}\n      <div className=\"relative\">\n        {caseStudy.imageUrl ? (\n          <div className=\"aspect-video bg-gray-200 overflow-hidden\">\n            <img \n              src={caseStudy.imageUrl} \n              alt={caseStudy.title}\n              className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n            />\n          </div>\n        ) : (\n          <div className={`aspect-video bg-gradient-to-br ${getGradientFromTech(caseStudy.technologies || [])} flex items-center justify-center relative overflow-hidden`}>\n            {/* Abstract pattern overlay */}\n            <div className=\"absolute inset-0 opacity-20\">\n              <div className=\"absolute top-4 left-4 w-8 h-8 border-2 border-white rounded-full\"></div>\n              <div className=\"absolute bottom-4 right-4 w-6 h-6 border-2 border-white rounded-full\"></div>\n              <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-16 h-16 border-2 border-white rounded-lg rotate-45\"></div>\n            </div>\n            <div className=\"text-white text-center z-10\">\n              <div className=\"text-4xl mb-2\">💼</div>\n              <p className=\"text-sm font-medium opacity-90\">Case Study</p>\n            </div>\n          </div>\n        )}\n        \n        {/* Featured badge */}\n        {caseStudy.isFeatured && (\n          <div className=\"absolute top-3 right-3\">\n            <Badge className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">\n              <Star className=\"w-3 h-3 mr-1 fill-current\" />\n              Featured\n            </Badge>\n          </div>\n        )}\n      </div>\n\n      <CardHeader className=\"pb-3\">\n        {/* Tags */}\n        {caseStudy.tags && caseStudy.tags.length > 0 && (\n          <div className=\"flex flex-wrap gap-1 mb-3\">\n            {caseStudy.tags.slice(0, 2).map((tag, index) => (\n              <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                {tag}\n              </Badge>\n            ))}\n          </div>\n        )}\n        \n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors\">\n          {caseStudy.title}\n        </h3>\n        \n        {caseStudy.clientName && (\n          <p className=\"text-sm text-blue-600 font-medium mb-2\">\n            Client: {caseStudy.clientName}\n          </p>\n        )}\n      </CardHeader>\n\n      <CardContent className=\"pt-0\">\n        <p className=\"text-gray-600 mb-4 line-clamp-3\">{caseStudy.shortDescription}</p>\n        \n        {/* Technologies */}\n        {caseStudy.technologies && caseStudy.technologies.length > 0 && (\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-1\">\n              {caseStudy.technologies.slice(0, 3).map((tech, index) => (\n                <Badge \n                  key={index} \n                  className={`text-xs ${getCategoryColor(tech)}`}\n                >\n                  {tech}\n                </Badge>\n              ))}\n              {caseStudy.technologies.length > 3 && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  +{caseStudy.technologies.length - 3}\n                </Badge>\n              )}\n            </div>\n          </div>\n        )}\n        \n        <Link href={`/case-studies/${caseStudy.slug}`}>\n          <Button variant=\"outline\" size=\"sm\" className=\"w-full group\" data-testid={`button-view-case-study-${caseStudy.slug}`}>\n            View Case Study\n            <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n          </Button>\n        </Link>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5488},"client/src/components/ClientPortfolio.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport default function ClientPortfolio() {\n  const { data: clients, isLoading } = useQuery({\n    queryKey: ['/api/clients', { featured: 'true' }],\n  });\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center min-h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  // Default client data if none loaded\n  const defaultClients = [\n    { id: 1, name: 'TechFlow Solutions', description: 'Web Application Development. Designed and developed backend tooling.' },\n    { id: 2, name: 'Global Media Corp', description: 'Developed Generative AI Voice Assistant for Gaming. Built Standalone AI model (NLP)' },\n    { id: 3, name: 'DataVantage Inc', description: 'Designed, Developed, and Deployed Automated Knowledge Discovery Engine' },\n    { id: 4, name: 'FinanceFirst', description: 'Backend Architectural Design. Data Engineering and Application Development' },\n    { id: 5, name: 'HealthTech Plus', description: 'Application Development and Design. Deployment and Management.' },\n    { id: 6, name: 'EduSmart Systems', description: 'Data Engineering. Custom Development. Computer Vision: Super Resolution' }\n  ];\n\n  const displayClients = clients || defaultClients;\n\n  return (\n    <section id=\"portfolio\" className=\"py-20 bg-white dark:bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-client-portfolio-title\">\n            A Few of Our Clients\n          </h2>\n          <p className=\"text-xl text-pi-gray\" data-testid=\"text-client-portfolio-description\">\n            A selection of our custom software development services customers.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {displayClients.map((client: any) => (\n            <div key={client.id} className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl p-6 hover:shadow-lg transition-shadow\" data-testid={`client-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n              <div className=\"h-16 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center mb-4\">\n                {client.logoUrl ? (\n                  <img \n                    src={client.logoUrl} \n                    alt={client.name}\n                    className=\"h-12 w-auto object-contain\"\n                    data-testid={`img-client-logo-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                  />\n                ) : (\n                  <span className=\"text-gray-600 dark:text-gray-400 font-semibold\" data-testid={`text-client-name-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                    {client.name}\n                  </span>\n                )}\n              </div>\n              <p className=\"text-pi-gray text-sm\" data-testid={`text-client-description-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                {client.description}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3438},"client/src/components/ContactForm.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { ArrowRight, CheckCircle } from \"lucide-react\";\n\nconst contactSchema = z.object({\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  company: z.string().optional(),\n  projectType: z.string().optional(),\n  message: z.string().min(10, \"Message must be at least 10 characters long\"),\n});\n\ntype ContactFormData = z.infer<typeof contactSchema>;\n\nexport default function ContactForm() {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n    reset,\n  } = useForm<ContactFormData>({\n    resolver: zodResolver(contactSchema),\n  });\n\n  const projectType = watch(\"projectType\");\n\n  const submitMutation = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      return apiRequest(\"POST\", \"/api/contact\", data);\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      reset();\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"We'll get back to you within 24 hours.\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error sending message\",\n        description: error.message || \"Please try again later.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ContactFormData) => {\n    submitMutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <Card className=\"bg-green-50 border-green-200\">\n        <CardContent className=\"p-8 text-center\">\n          <CheckCircle className=\"w-16 h-16 text-green-600 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-semibold text-green-900 mb-2\">Thank you for your message!</h3>\n          <p className=\"text-green-700 mb-6\">\n            We've received your inquiry and will get back to you within 24 hours during business days.\n          </p>\n          <Button \n            variant=\"outline\" \n            onClick={() => setIsSubmitted(false)}\n            className=\"border-green-600 text-green-600 hover:bg-green-600 hover:text-white\"\n            data-testid=\"button-send-another-message\"\n          >\n            Send Another Message\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200\">\n      <CardHeader>\n        <CardTitle>Send us a message</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"firstName\">First Name *</Label>\n              <Input\n                id=\"firstName\"\n                {...register(\"firstName\")}\n                className={errors.firstName ? \"border-red-500\" : \"\"}\n                data-testid=\"input-first-name\"\n              />\n              {errors.firstName && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.firstName.message}</p>\n              )}\n            </div>\n            <div>\n              <Label htmlFor=\"lastName\">Last Name *</Label>\n              <Input\n                id=\"lastName\"\n                {...register(\"lastName\")}\n                className={errors.lastName ? \"border-red-500\" : \"\"}\n                data-testid=\"input-last-name\"\n              />\n              {errors.lastName && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.lastName.message}</p>\n              )}\n            </div>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"email\">Email *</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              {...register(\"email\")}\n              className={errors.email ? \"border-red-500\" : \"\"}\n              data-testid=\"input-email\"\n            />\n            {errors.email && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>\n            )}\n          </div>\n          \n          <div>\n            <Label htmlFor=\"company\">Company</Label>\n            <Input\n              id=\"company\"\n              {...register(\"company\")}\n              data-testid=\"input-company\"\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"projectType\">Project Type</Label>\n            <Select value={projectType} onValueChange={(value) => setValue(\"projectType\", value)}>\n              <SelectTrigger data-testid=\"select-project-type\">\n                <SelectValue placeholder=\"Select a service\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"ai-ml\">AI & Machine Learning</SelectItem>\n                <SelectItem value=\"custom-software\">Custom Software Development</SelectItem>\n                <SelectItem value=\"mobile-app\">Mobile App Development</SelectItem>\n                <SelectItem value=\"data-engineering\">Data Engineering</SelectItem>\n                <SelectItem value=\"erp-crm\">ERP/CRM/CMS Development</SelectItem>\n                <SelectItem value=\"staff-augmentation\">Staff Augmentation</SelectItem>\n                <SelectItem value=\"consulting\">Consulting</SelectItem>\n                <SelectItem value=\"other\">Other</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"message\">Project Description *</Label>\n            <Textarea\n              id=\"message\"\n              rows={4}\n              {...register(\"message\")}\n              className={errors.message ? \"border-red-500\" : \"\"}\n              placeholder=\"Tell us about your project requirements, timeline, and goals...\"\n              data-testid=\"textarea-message\"\n            />\n            {errors.message && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.message.message}</p>\n            )}\n          </div>\n          \n          <Button \n            type=\"submit\" \n            className=\"w-full\" \n            disabled={submitMutation.isPending}\n            data-testid=\"button-send-message\"\n          >\n            {submitMutation.isPending ? (\n              \"Sending...\"\n            ) : (\n              <>\n                Send Message\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </>\n            )}\n          </Button>\n          \n          <p className=\"text-sm text-gray-600 text-center\">\n            We typically respond within 24 hours during business days.\n          </p>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":7316},"client/src/components/ContactSection.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertContactSubmissionSchema } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { MapPin, Mail, Phone } from \"lucide-react\";\n\ntype ContactFormData = {\n  firstName: string;\n  lastName: string;\n  email: string;\n  company?: string;\n  projectType?: string;\n  message: string;\n};\n\nexport default function ContactSection() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    watch,\n    reset,\n    formState: { errors }\n  } = useForm<ContactFormData>({\n    resolver: zodResolver(insertContactSubmissionSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      company: \"\",\n      projectType: \"\",\n      message: \"\"\n    }\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      await apiRequest(\"POST\", \"/api/contact\", data);\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      reset();\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"We'll get back to you within 24 hours.\",\n      });\n    },\n    onError: (error) => {\n      console.error(\"Contact form error:\", error);\n      toast({\n        title: \"Error sending message\",\n        description: \"Please try again or contact us directly.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ContactFormData) => {\n    mutation.mutate(data);\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Contact Information */}\n          <div>\n            <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-6\" data-testid=\"text-contact-title\">\n              Get in Touch\n            </h2>\n            <p className=\"text-xl text-pi-gray mb-8\" data-testid=\"text-contact-description\">\n              Ready to transform your business with AI-driven solutions? Let's discuss your project and how we can help you achieve your goals.\n            </p>\n            \n            <div className=\"space-y-6\">\n              <div className=\"flex items-start\" data-testid=\"contact-address\">\n                <div className=\"flex-shrink-0\">\n                  <MapPin className=\"w-6 h-6 text-pi-blue mt-1\" />\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Our Office</h3>\n                  <p className=\"text-pi-gray\">\n                    123 Technology Drive<br />\n                    San Francisco, CA 94105\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\" data-testid=\"contact-email\">\n                <div className=\"flex-shrink-0\">\n                  <Mail className=\"w-6 h-6 text-pi-blue mt-1\" />\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Email Us</h3>\n                  <p className=\"text-pi-gray\">hello@pitetris.com</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\" data-testid=\"contact-phone\">\n                <div className=\"flex-shrink-0\">\n                  <Phone className=\"w-6 h-6 text-pi-blue mt-1\" />\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Call Us</h3>\n                  <p className=\"text-pi-gray\">+1 (555) 123-4567</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Contact Form */}\n          <Card className=\"shadow-lg\" data-testid=\"card-contact-form\">\n            <CardContent className=\"p-8\">\n              {isSubmitted ? (\n                <div className=\"text-center py-8\" data-testid=\"success-message\">\n                  <div className=\"w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <svg className=\"w-8 h-8 text-green-600 dark:text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">Message Sent!</h3>\n                  <p className=\"text-pi-gray mb-6\">Thank you for reaching out. We'll get back to you within 24 hours.</p>\n                  <Button \n                    onClick={() => setIsSubmitted(false)}\n                    variant=\"outline\"\n                    data-testid=\"button-send-another\"\n                  >\n                    Send Another Message\n                  </Button>\n                </div>\n              ) : (\n                <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <Label htmlFor=\"firstName\">First Name *</Label>\n                      <Input\n                        id=\"firstName\"\n                        {...register(\"firstName\")}\n                        className=\"mt-1\"\n                        data-testid=\"input-firstName\"\n                      />\n                      {errors.firstName && (\n                        <p className=\"text-red-500 text-sm mt-1\" data-testid=\"error-firstName\">\n                          {errors.firstName.message}\n                        </p>\n                      )}\n                    </div>\n                    <div>\n                      <Label htmlFor=\"lastName\">Last Name *</Label>\n                      <Input\n                        id=\"lastName\"\n                        {...register(\"lastName\")}\n                        className=\"mt-1\"\n                        data-testid=\"input-lastName\"\n                      />\n                      {errors.lastName && (\n                        <p className=\"text-red-500 text-sm mt-1\" data-testid=\"error-lastName\">\n                          {errors.lastName.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"email\">Email *</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      {...register(\"email\")}\n                      className=\"mt-1\"\n                      data-testid=\"input-email\"\n                    />\n                    {errors.email && (\n                      <p className=\"text-red-500 text-sm mt-1\" data-testid=\"error-email\">\n                        {errors.email.message}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"company\">Company</Label>\n                    <Input\n                      id=\"company\"\n                      {...register(\"company\")}\n                      className=\"mt-1\"\n                      data-testid=\"input-company\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"projectType\">Project Type</Label>\n                    <Select onValueChange={(value) => setValue(\"projectType\", value)} value={watch(\"projectType\")}>\n                      <SelectTrigger className=\"mt-1\" data-testid=\"select-projectType\">\n                        <SelectValue placeholder=\"Select a service\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"ai-ml\">AI & Machine Learning</SelectItem>\n                        <SelectItem value=\"custom-software\">Custom Software Development</SelectItem>\n                        <SelectItem value=\"mobile-app\">Mobile App Development</SelectItem>\n                        <SelectItem value=\"data-engineering\">Data Engineering</SelectItem>\n                        <SelectItem value=\"erp-crm\">ERP/CRM/CMS Development</SelectItem>\n                        <SelectItem value=\"staff-augmentation\">Staff Augmentation</SelectItem>\n                        <SelectItem value=\"consulting\">Consulting</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"message\">Project Description *</Label>\n                    <Textarea\n                      id=\"message\"\n                      {...register(\"message\")}\n                      rows={4}\n                      className=\"mt-1\"\n                      placeholder=\"Tell us about your project...\"\n                      data-testid=\"textarea-message\"\n                    />\n                    {errors.message && (\n                      <p className=\"text-red-500 text-sm mt-1\" data-testid=\"error-message\">\n                        {errors.message.message}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <Button \n                    type=\"submit\" \n                    className=\"w-full bg-pi-blue hover:bg-pi-blue-dark\"\n                    disabled={mutation.isPending}\n                    data-testid=\"button-submit\"\n                  >\n                    {mutation.isPending ? \"Sending...\" : \"Send Message\"}\n                  </Button>\n                </form>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":10338},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Twitter, Linkedin, Github } from \"lucide-react\";\nimport logoWhite from \"../assets/logo-white.svg\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div className=\"md:col-span-2\">\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <img \n                src={logoWhite} \n                alt=\"Pi Tetris Logo\" \n                className=\"h-10 w-10 object-contain\"\n              />\n              <h3 className=\"text-2xl font-bold\">Pi Tetris</h3>\n            </div>\n            <p className=\"text-gray-300 mb-6 max-w-md\">\n              We design, build, and staff AI driven web, mobile and data solutions. \n              Your trusted partner for digital transformation.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"#\" \n                className=\"text-gray-400 hover:text-white transition-colors\"\n                data-testid=\"link-twitter\"\n              >\n                <Twitter className=\"w-6 h-6\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-gray-400 hover:text-white transition-colors\"\n                data-testid=\"link-linkedin\"\n              >\n                <Linkedin className=\"w-6 h-6\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-gray-400 hover:text-white transition-colors\"\n                data-testid=\"link-github\"\n              >\n                <Github className=\"w-6 h-6\" />\n              </a>\n            </div>\n          </div>\n          \n          {/* Services */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Services</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li>\n                <Link href=\"/services\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-ai-ml\">\n                    AI & Machine Learning\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-custom-software\">\n                    Custom Software\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-mobile\">\n                    Mobile Development\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-data\">\n                    Data Engineering\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/services\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-staff\">\n                    Staff Augmentation\n                  </span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n          \n          {/* Company */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Company</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li>\n                <Link href=\"/about\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-about\">\n                    About Us\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/portfolio\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-portfolio\">\n                    Portfolio\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-white transition-colors\" data-testid=\"footer-link-careers\">\n                  Careers\n                </a>\n              </li>\n              <li>\n                <Link href=\"/contact\">\n                  <span className=\"hover:text-white transition-colors cursor-pointer\" data-testid=\"footer-link-contact\">\n                    Contact\n                  </span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 mt-12 pt-8 text-center text-gray-400\">\n          <p>&copy; 2024 Pi Tetris. All rights reserved. | SOC 2 Compliant</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4923},"client/src/components/Hero.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Star, Sparkles, Rocket, Code, Zap } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport heroImage from \"@assets/generated_images/Professional_homepage_hero_illustration_8e0bc7ca.png\";\n\nexport default function Hero() {\n  return (\n    <section className=\"relative bg-gradient-to-br from-blue-900 via-blue-800 to-indigo-900 text-white py-24 overflow-hidden\">\n      {/* Animated background elements */}\n      <div className=\"absolute inset-0\">\n        <motion.div \n          className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-blue-400 rounded-full mix-blend-multiply filter blur-xl opacity-20\"\n          animate={{\n            x: [0, 100, 0],\n            y: [0, -100, 0],\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            repeatType: \"reverse\",\n          }}\n        />\n        <motion.div \n          className=\"absolute top-3/4 right-1/4 w-64 h-64 bg-indigo-400 rounded-full mix-blend-multiply filter blur-xl opacity-20\"\n          animate={{\n            x: [0, -100, 0],\n            y: [0, 100, 0],\n          }}\n          transition={{\n            duration: 25,\n            repeat: Infinity,\n            repeatType: \"reverse\",\n          }}\n        />\n      </div>\n      \n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <motion.div \n              className=\"inline-flex items-center px-4 py-2 rounded-full bg-blue-500/20 text-blue-200 text-sm font-medium mb-6\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 0.2, duration: 0.5 }}\n            >\n              <Sparkles className=\"w-4 h-4 mr-2\" />\n              AI-Powered Solutions\n            </motion.div>\n            \n            <motion.h1 \n              className=\"text-4xl lg:text-6xl font-bold leading-tight mb-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3, duration: 0.8 }}\n            >\n              The Software Development Company for{\" \"}\n              <span className=\"bg-gradient-to-r from-blue-300 to-indigo-300 bg-clip-text text-transparent\">\n                AI\n              </span>\n            </motion.h1>\n            \n            <motion.p \n              className=\"text-xl lg:text-2xl text-blue-100 mb-4 leading-relaxed\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4, duration: 0.8 }}\n            >\n              More velocity. More value. More sleep.\n            </motion.p>\n            \n            <motion.p \n              className=\"text-lg text-blue-100 mb-8\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5, duration: 0.8 }}\n            >\n              We design, build, and staff AI driven web, mobile and data solutions. SOC 2 compliant. Global time zone aligned.\n            </motion.p>\n            \n            <motion.div \n              className=\"flex flex-col sm:flex-row gap-4\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.6, duration: 0.8 }}\n            >\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-white text-blue-900 hover:bg-blue-50 font-semibold\" data-testid=\"button-schedule-call\">\n                  <Rocket className=\"w-5 h-5 mr-2\" />\n                  Schedule a Call\n                </Button>\n              </Link>\n              <Link href=\"/contact\">\n                <Button \n                  size=\"lg\" \n                  variant=\"outline\" \n                  className=\"border-2 border-white text-white hover:bg-white hover:text-blue-900 bg-transparent font-semibold\"\n                  data-testid=\"button-price-project\"\n                >\n                  Price Your Project\n                  <ArrowRight className=\"w-5 h-5 ml-2\" />\n                </Button>\n              </Link>\n            </motion.div>\n            \n            <motion.div \n              className=\"mt-8 flex items-center space-x-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.7, duration: 0.8 }}\n            >\n              <div className=\"flex items-center\">\n                <div className=\"flex text-yellow-400\">\n                  {[...Array(5)].map((_, i) => (\n                    <motion.div\n                      key={i}\n                      initial={{ opacity: 0, scale: 0 }}\n                      animate={{ opacity: 1, scale: 1 }}\n                      transition={{ delay: 0.8 + i * 0.1, duration: 0.3 }}\n                    >\n                      <Star className=\"w-5 h-5 fill-current\" />\n                    </motion.div>\n                  ))}\n                </div>\n                <span className=\"ml-2 text-lg font-semibold\">4.9 stars</span>\n              </div>\n              <div className=\"text-blue-100\">|</div>\n              <div className=\"text-sm text-blue-100\">Verified rating on Clutch.co</div>\n            </motion.div>\n          </motion.div>\n          \n          <motion.div \n            className=\"relative\"\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            {/* Professional Hero Image */}\n            <motion.div\n              className=\"relative\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 1, delay: 0.4 }}\n            >\n              <img \n                src={heroImage} \n                alt=\"Professional AI and software development illustration\" \n                className=\"w-full h-auto rounded-2xl shadow-2xl\"\n                data-testid=\"img-hero\"\n              />\n              \n              {/* Floating elements */}\n              <motion.div\n                className=\"absolute -top-4 -right-4 w-16 h-16 bg-blue-400 rounded-full opacity-30\"\n                animate={{ y: [-10, 10, -10] }}\n                transition={{ duration: 3, repeat: Infinity }}\n              />\n              <motion.div\n                className=\"absolute -bottom-4 -left-4 w-12 h-12 bg-indigo-400 rounded-full opacity-40\"\n                animate={{ y: [10, -10, 10] }}\n                transition={{ duration: 4, repeat: Infinity }}\n              />\n              \n              {/* Tech stack indicators */}\n              <motion.div\n                className=\"absolute top-4 left-4 bg-white/90 backdrop-blur-sm rounded-lg p-3 shadow-lg\"\n                initial={{ opacity: 0, scale: 0 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: 1.2, duration: 0.5 }}\n              >\n                <Code className=\"w-6 h-6 text-blue-600\" />\n              </motion.div>\n              \n              <motion.div\n                className=\"absolute bottom-4 right-4 bg-white/90 backdrop-blur-sm rounded-lg p-3 shadow-lg\"\n                initial={{ opacity: 0, scale: 0 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: 1.4, duration: 0.5 }}\n              >\n                <Zap className=\"w-6 h-6 text-yellow-500\" />\n              </motion.div>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7808},"client/src/components/Layout.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navigation />\n      <main className=\"flex-1\">\n        {children}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":390},"client/src/components/Navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\nimport logoImage from \"../assets/logo.svg\";\nimport ServicesMegaMenu from \"@/components/ServicesMegaMenu\";\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isServicesOpen, setIsServicesOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navigation = [\n    { name: \"Technologies\", href: \"/technologies\" },\n    { name: \"Portfolio\", href: \"/portfolio\" },\n    { name: \"About\", href: \"/about\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href.startsWith(\"#\")) {\n      return false; // Hash links are handled differently\n    }\n    return location === href;\n  };\n\n  const handleNavClick = (href: string) => {\n    setIsOpen(false);\n    setIsServicesOpen(false);\n    if (href.startsWith(\"#\")) {\n      // Smooth scroll for hash links\n      const element = document.querySelector(href);\n      if (element) {\n        element.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  };\n\n  const handleServicesToggle = () => {\n    setIsServicesOpen(!isServicesOpen);\n  };\n\n  const handleCloseServices = () => {\n    setIsServicesOpen(false);\n  };\n\n  const handleMouseEnterServices = () => {\n    setIsServicesOpen(true);\n  };\n\n  const handleMouseLeaveServices = () => {\n    setIsServicesOpen(false);\n  };\n\n  return (\n    <>\n    <nav className=\"bg-white shadow-sm border-b border-gray-100 sticky top-0 z-50 relative\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <Link href=\"/\">\n              <div className=\"flex items-center space-x-2\" data-testid=\"link-home\">\n                <img \n                  src={logoImage} \n                  alt=\"Pi Tetris Logo\" \n                  className=\"h-10 w-10 object-contain\"\n                />\n                <span className=\"text-xl font-bold text-blue-600\">Pi Tetris</span>\n              </div>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-8\">\n              {/* Services Dropdown */}\n              <div className=\"relative group\">\n                <button\n                  onClick={handleServicesToggle}\n                  onMouseEnter={handleMouseEnterServices}\n                  className={`flex items-center px-3 py-2 text-sm font-medium transition-colors ${\n                    location.startsWith('/services') \n                      ? \"text-blue-600\"\n                      : \"text-gray-600 hover:text-blue-600\"\n                  }`}\n                  data-testid=\"nav-services\"\n                >\n                  Services\n                  <ChevronDown className={`ml-1 h-4 w-4 transform transition-transform ${\n                    isServicesOpen ? 'rotate-180' : ''\n                  }`} />\n                </button>\n              </div>\n\n              {/* Other Navigation Items */}\n              {navigation.map((item) => (\n                item.href.startsWith(\"#\") ? (\n                  <button\n                    key={item.name}\n                    onClick={() => handleNavClick(item.href)}\n                    className=\"text-gray-600 hover:text-blue-600 px-3 py-2 text-sm font-medium transition-colors\"\n                    data-testid={`nav-${item.name.toLowerCase()}`}\n                  >\n                    {item.name}\n                  </button>\n                ) : (\n                  <Link key={item.name} href={item.href}>\n                    <span\n                      className={`px-3 py-2 text-sm font-medium transition-colors cursor-pointer ${\n                        isActive(item.href)\n                          ? \"text-blue-600\"\n                          : \"text-gray-600 hover:text-blue-600\"\n                      }`}\n                      data-testid={`nav-${item.name.toLowerCase()}`}\n                    >\n                      {item.name}\n                    </span>\n                  </Link>\n                )\n              ))}\n              <Link href=\"/contact\">\n                <Button data-testid=\"button-get-started\">\n                  Get Started\n                </Button>\n              </Link>\n            </div>\n          </div>\n\n          {/* Mobile Navigation */}\n          <div className=\"md:hidden\">\n            <Sheet open={isOpen} onOpenChange={setIsOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-mobile-menu\">\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-80\">\n                <div className=\"flex items-center justify-between mb-8\">\n                  <div className=\"flex items-center space-x-2\">\n                    <img \n                      src={logoImage} \n                      alt=\"Pi Tetris Logo\" \n                      className=\"h-8 w-8 object-contain\"\n                    />\n                    <span className=\"text-lg font-semibold\">Pi Tetris</span>\n                  </div>\n                  <Button variant=\"ghost\" size=\"sm\" onClick={() => setIsOpen(false)}>\n                    <X className=\"h-5 w-5\" />\n                  </Button>\n                </div>\n                <nav className=\"space-y-4\">\n                  {/* Mobile Services Link */}\n                  <Link href=\"/services\">\n                    <span\n                      onClick={() => setIsOpen(false)}\n                      className={`block py-2 text-base font-medium transition-colors cursor-pointer ${\n                        location.startsWith('/services')\n                          ? \"text-blue-600\"\n                          : \"text-gray-600 hover:text-blue-600\"\n                      }`}\n                      data-testid=\"mobile-nav-services\"\n                    >\n                      Services\n                    </span>\n                  </Link>\n                  \n                  {/* Other Navigation Items */}\n                  {navigation.map((item) => (\n                    item.href.startsWith(\"#\") ? (\n                      <button\n                        key={item.name}\n                        onClick={() => handleNavClick(item.href)}\n                        className=\"block w-full text-left text-gray-600 hover:text-blue-600 py-2 text-base font-medium transition-colors\"\n                        data-testid={`mobile-nav-${item.name.toLowerCase()}`}\n                      >\n                        {item.name}\n                      </button>\n                    ) : (\n                      <Link key={item.name} href={item.href}>\n                        <span\n                          onClick={() => setIsOpen(false)}\n                          className={`block py-2 text-base font-medium transition-colors cursor-pointer ${\n                            isActive(item.href)\n                              ? \"text-blue-600\"\n                              : \"text-gray-600 hover:text-blue-600\"\n                          }`}\n                          data-testid={`mobile-nav-${item.name.toLowerCase()}`}\n                        >\n                          {item.name}\n                        </span>\n                      </Link>\n                    )\n                  ))}\n                  <div className=\"pt-4\">\n                    <Link href=\"/contact\">\n                      <Button className=\"w-full\" onClick={() => setIsOpen(false)} data-testid=\"mobile-button-get-started\">\n                        Get Started\n                      </Button>\n                    </Link>\n                  </div>\n                </nav>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </nav>\n    \n    {/* Services Mega Menu - Positioned outside nav for full width */}\n    <div \n      onMouseLeave={handleMouseLeaveServices}\n      className={isServicesOpen ? \"block\" : \"hidden\"}\n    >\n      <ServicesMegaMenu isOpen={isServicesOpen} onClose={handleCloseServices} />\n    </div>\n    \n    {/* Backdrop for mega menu */}\n    {isServicesOpen && (\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-10 z-40\" \n        onClick={handleCloseServices}\n      />\n    )}\n    </>\n  );\n}\n","size_bytes":8555},"client/src/components/ObjectUploader.tsx":{"content":"import { useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DashboardModal } from \"@uppy/react\";\nimport AwsS3 from \"@uppy/aws-s3\";\nimport type { UploadResult } from \"@uppy/core\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ObjectUploaderProps {\n  maxNumberOfFiles?: number;\n  maxFileSize?: number;\n  onGetUploadParameters: () => Promise<{\n    method: \"PUT\";\n    url: string;\n  }>;\n  onComplete?: (\n    result: UploadResult<Record<string, unknown>, Record<string, unknown>>\n  ) => void;\n  buttonClassName?: string;\n  children: ReactNode;\n}\n\nexport function ObjectUploader({\n  maxNumberOfFiles = 1,\n  maxFileSize = 10485760, // 10MB default\n  onGetUploadParameters,\n  onComplete,\n  buttonClassName,\n  children,\n}: ObjectUploaderProps) {\n  const [showModal, setShowModal] = useState(false);\n  const [uppy] = useState(() =>\n    new Uppy({\n      restrictions: {\n        maxNumberOfFiles,\n        maxFileSize,\n      },\n      autoProceed: false,\n    })\n      .use(AwsS3, {\n        shouldUseMultipart: false,\n        getUploadParameters: onGetUploadParameters,\n      })\n      .on(\"complete\", (result) => {\n        onComplete?.(result);\n      })\n  );\n\n  // Only allow mouse clicks, block all keyboard interaction\n  const handleButtonClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShowModal(true);\n  };\n\n  return (\n    <div \n      style={{ isolation: 'isolate' }}\n      onKeyDown={(e) => {\n        // Block all keyboard events from reaching the button\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n    >\n      <div \n        role=\"button\"\n        onClick={handleButtonClick}\n        className={`inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 cursor-pointer ${buttonClassName || \"\"}`}\n        style={{ \n          userSelect: 'none',\n          WebkitUserSelect: 'none',\n          pointerEvents: 'auto'\n        }}\n        onKeyDown={(e) => {\n          // Completely block keyboard events\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        onKeyUp={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        onFocus={(e) => {\n          e.preventDefault();\n          (e.target as HTMLElement).blur();\n        }}\n        tabIndex={-1}\n      >\n        {children}\n      </div>\n\n      <DashboardModal\n        uppy={uppy}\n        open={showModal}\n        onRequestClose={() => setShowModal(false)}\n        proudlyDisplayPoweredByUppy={false}\n      />\n    </div>\n  );\n}","size_bytes":2842},"client/src/components/RichTextEditor.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Bold, \n  Italic, \n  Underline, \n  List, \n  ListOrdered, \n  Link, \n  Eye,\n  Edit3\n} from \"lucide-react\";\n\ninterface RichTextEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n}\n\nexport default function RichTextEditor({ value, onChange, placeholder }: RichTextEditorProps) {\n  const [activeTab, setActiveTab] = useState<\"edit\" | \"preview\">(\"edit\");\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const insertText = (before: string, after: string = \"\") => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = value.substring(start, end);\n    \n    const newText = value.substring(0, start) + before + selectedText + after + value.substring(end);\n    onChange(newText);\n    \n    // Reset cursor position\n    setTimeout(() => {\n      textarea.focus();\n      textarea.setSelectionRange(start + before.length, end + before.length);\n    }, 0);\n  };\n\n  const formatButtons = [\n    { icon: Bold, action: () => insertText(\"**\", \"**\"), label: \"Bold\" },\n    { icon: Italic, action: () => insertText(\"*\", \"*\"), label: \"Italic\" },\n    { icon: List, action: () => insertText(\"\\n- \", \"\"), label: \"Bullet List\" },\n    { icon: ListOrdered, action: () => insertText(\"\\n1. \", \"\"), label: \"Numbered List\" },\n    { icon: Link, action: () => insertText(\"[\", \"](url)\"), label: \"Link\" },\n  ];\n\n  // Simple markdown to HTML converter for preview\n  const markdownToHtml = (markdown: string) => {\n    let html = markdown\n      // Headers\n      .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mb-2\">$1</h3>')\n      .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mb-3\">$1</h2>')\n      .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mb-4\">$1</h1>')\n      // Bold\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-semibold\">$1</strong>')\n      // Italic\n      .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\n      // Links\n      .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" class=\"text-blue-600 hover:underline\">$1</a>')\n      // Line breaks\n      .replace(/\\n/g, '<br>');\n\n    // Lists\n    html = html.replace(/^- (.+)$/gm, '<li class=\"ml-4\">• $1</li>');\n    html = html.replace(/^(\\d+)\\. (.+)$/gm, '<li class=\"ml-4\">$1. $2</li>');\n    \n    return html;\n  };\n\n  return (\n    <Card>\n      <CardContent className=\"p-0\">\n        <Tabs value={activeTab} onValueChange={(v) => setActiveTab(v as \"edit\" | \"preview\")}>\n          <div className=\"border-b px-4 py-2\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex space-x-1\">\n                {formatButtons.map((button, index) => (\n                  <Button\n                    key={index}\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={button.action}\n                    title={button.label}\n                    className=\"h-8 w-8 p-0\"\n                  >\n                    <button.icon className=\"h-4 w-4\" />\n                  </Button>\n                ))}\n              </div>\n              <TabsList className=\"grid w-fit grid-cols-2\">\n                <TabsTrigger value=\"edit\" className=\"text-xs\">\n                  <Edit3 className=\"h-3 w-3 mr-1\" />\n                  Edit\n                </TabsTrigger>\n                <TabsTrigger value=\"preview\" className=\"text-xs\">\n                  <Eye className=\"h-3 w-3 mr-1\" />\n                  Preview\n                </TabsTrigger>\n              </TabsList>\n            </div>\n          </div>\n\n          <TabsContent value=\"edit\" className=\"m-0\">\n            <Textarea\n              ref={textareaRef}\n              value={value}\n              onChange={(e) => onChange(e.target.value)}\n              placeholder={placeholder || \"Enter your content here... You can use markdown formatting.\"}\n              className=\"min-h-[200px] border-0 focus-visible:ring-0 resize-none rounded-none\"\n              style={{ fieldSizing: \"content\" }}\n            />\n          </TabsContent>\n\n          <TabsContent value=\"preview\" className=\"m-0\">\n            <div className=\"p-4 min-h-[200px] prose prose-sm max-w-none\">\n              {value ? (\n                <div dangerouslySetInnerHTML={{ __html: markdownToHtml(value) }} />\n              ) : (\n                <p className=\"text-gray-500 italic\">Nothing to preview yet...</p>\n              )}\n            </div>\n          </TabsContent>\n        </Tabs>\n        \n        <div className=\"px-4 py-2 bg-gray-50 border-t text-xs text-gray-600\">\n          <p>Tip: Use **bold**, *italic*, # headers, - lists, and [links](url) for formatting</p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5067},"client/src/components/ServiceCard.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\ninterface ServiceCardProps {\n  service: {\n    id: string;\n    title: string;\n    slug: string;\n    shortDescription?: string;\n    longDescription?: string;\n    iconUrl?: string;\n    features?: string[];\n    technologies?: string[];\n    isActive: boolean;\n  };\n  showFullDescription?: boolean;\n}\n\nexport default function ServiceCard({ service, showFullDescription = false }: ServiceCardProps) {\n  const ServiceIcon = () => {\n    if (service.iconUrl) {\n      return <img src={service.iconUrl} alt=\"\" className=\"w-6 h-6\" />;\n    }\n    \n    // Default icons based on service title\n    const iconColor = \"text-white\";\n    if (service.title.toLowerCase().includes(\"ai\") || service.title.toLowerCase().includes(\"ml\")) {\n      return (\n        <svg className={`w-6 h-6 ${iconColor}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n        </svg>\n      );\n    }\n    if (service.title.toLowerCase().includes(\"mobile\")) {\n      return (\n        <svg className={`w-6 h-6 ${iconColor}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 18h.01M8 21h8a1 1 0 001-1V4a1 1 0 00-1-1H8a1 1 0 00-1 1v16a1 1 0 001 1z\" />\n        </svg>\n      );\n    }\n    if (service.title.toLowerCase().includes(\"data\")) {\n      return (\n        <svg className={`w-6 h-6 ${iconColor}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\" />\n        </svg>\n      );\n    }\n    if (service.title.toLowerCase().includes(\"cloud\") || service.title.toLowerCase().includes(\"devops\")) {\n      return (\n        <svg className={`w-6 h-6 ${iconColor}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\n        </svg>\n      );\n    }\n    // Default code icon\n    return (\n      <svg className={`w-6 h-6 ${iconColor}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n      </svg>\n    );\n  };\n\n  return (\n    <Card className=\"hover:shadow-lg transition-shadow group\">\n      <CardContent className=\"p-6\">\n        <div className=\"w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4 group-hover:bg-blue-700 transition-colors\">\n          <ServiceIcon />\n        </div>\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{service.title}</h3>\n        <p className=\"text-gray-600 mb-4\">\n          {showFullDescription && service.longDescription \n            ? service.longDescription.replace(/<[^>]*>/g, '').substring(0, 150) + '...'\n            : service.shortDescription\n          }\n        </p>\n        \n        {service.features && service.features.length > 0 && showFullDescription && (\n          <div className=\"mb-4\">\n            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Key Features:</h4>\n            <ul className=\"text-sm text-gray-600 space-y-1\">\n              {service.features.slice(0, 3).map((feature, index) => (\n                <li key={index} className=\"flex items-start\">\n                  <span className=\"w-1 h-1 bg-blue-600 rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                  {feature}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {service.technologies && service.technologies.length > 0 && showFullDescription && (\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-1\">\n              {service.technologies.slice(0, 4).map((tech, index) => (\n                <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                  {tech}\n                </Badge>\n              ))}\n              {service.technologies.length > 4 && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  +{service.technologies.length - 4} more\n                </Badge>\n              )}\n            </div>\n          </div>\n        )}\n        \n        <Link href={`/services/${service.slug}`}>\n          <span \n            className=\"text-blue-600 font-medium hover:text-blue-700 transition-colors inline-flex items-center group cursor-pointer\"\n            data-testid={`link-service-${service.slug}`}\n          >\n            Learn More\n            <ArrowRight className=\"ml-1 h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n          </span>\n        </Link>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5217},"client/src/components/ServiceModels.tsx":{"content":"export default function ServiceModels() {\n  const serviceModels = [\n    {\n      id: 'staff-augmentation',\n      title: 'Software Staff Augmentation',\n      description: 'We scale your team with the essential personnel your development team needs.',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" /></svg>',\n      link: '/services/staff-augmentation'\n    },\n    {\n      id: 'dedicated-team',\n      title: 'Dedicated Development Team',\n      description: 'We build dedicated outsourced development teams.',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" /></svg>',\n      link: '/services/dedicated-team'\n    },\n    {\n      id: 'project-delivery',\n      title: 'Project Delivery & Management',\n      description: 'We write requirements, manage tasks, and deliver your software solution.',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>',\n      link: '/services/project-delivery'\n    },\n    {\n      id: 'virtual-cto',\n      title: 'Virtual CTO Consulting Services',\n      description: 'We advise and architect scaleable and secure technology solutions for AI, Data, and Web.',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" /></svg>',\n      link: '/services/virtual-cto'\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-service-models-title\">\n            Our Software Service Models\n          </h2>\n          <p className=\"text-xl text-pi-gray max-w-4xl mx-auto\" data-testid=\"text-service-models-description\">\n            We are here to accommodate you. From a single pair of hands to entire teams and expert technical advice, we are flexible enough to support you in the ways you need.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {serviceModels.map((model) => (\n            <div key={model.id} className=\"bg-white dark:bg-gray-900 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-shadow\" data-testid={`service-model-${model.id}`}>\n              <div className=\"w-12 h-12 bg-pi-blue rounded-lg flex items-center justify-center mb-4\">\n                <div dangerouslySetInnerHTML={{ __html: model.icon }} className=\"text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\" data-testid={`text-model-title-${model.id}`}>\n                {model.title}\n              </h3>\n              <p className=\"text-pi-gray mb-4\" data-testid={`text-model-description-${model.id}`}>\n                {model.description}\n              </p>\n              <a \n                href={model.link} \n                className=\"text-pi-blue font-medium hover:text-pi-blue-dark transition-colors\"\n                data-testid={`link-model-${model.id}`}\n              >\n                Learn More →\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4213},"client/src/components/Services.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport default function Services() {\n  const { data: services, isLoading } = useQuery({\n    queryKey: ['/api/services'],\n  });\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center min-h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  // Default services if none are loaded\n  const defaultServices = [\n    {\n      id: 'ai-ml',\n      title: 'AI and ML Development',\n      shortDescription: 'Build custom AI solutions',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" /></svg>',\n      slug: 'ai-ml'\n    },\n    {\n      id: 'custom-software',\n      title: 'Custom Software Development',\n      shortDescription: 'Build Custom Software',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" /></svg>',\n      slug: 'custom-software'\n    },\n    {\n      id: 'mobile-app',\n      title: 'Mobile App Development',\n      shortDescription: 'Build for iOS and Android',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 18h.01M8 21h8a1 1 0 001-1V4a1 1 0 00-1-1H8a1 1 0 00-1 1v16a1 1 0 001 1z\" /></svg>',\n      slug: 'mobile-app'\n    },\n    {\n      id: 'data-engineering',\n      title: 'Data Engineering',\n      shortDescription: 'Modern Data Infrastructure & Analytics',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\" /></svg>',\n      slug: 'data-engineering'\n    },\n    {\n      id: 'erp-crm',\n      title: 'ERP/CRM/CMS Development',\n      shortDescription: 'Enterprise Solutions',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" /></svg>',\n      slug: 'erp-crm'\n    },\n    {\n      id: 'devops-cloud',\n      title: 'DevOps and Cloud',\n      shortDescription: 'Experts for AWS, Azure, GCP',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" /></svg>',\n      slug: 'devops-cloud'\n    },\n    {\n      id: 'chatbots',\n      title: 'Chatbot Development',\n      shortDescription: 'Create Conversational Apps',\n      icon: '<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" /></svg>',\n      slug: 'chatbots'\n    }\n  ];\n\n  const displayServices = services || defaultServices;\n\n  return (\n    <section id=\"services\" className=\"py-20 bg-white dark:bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-services-title\">\n            Our Custom Software Development Solutions Expertise\n          </h2>\n          <p className=\"text-xl text-pi-gray max-w-4xl mx-auto\" data-testid=\"text-services-description\">\n            At Pi Tetris, we master the frameworks and technologies that power modern solutions. With our deep domain expertise, we help you modernize, innovate, and maintain your critical software applications.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {displayServices.slice(0, 7).map((service: any) => (\n            <div key={service.id} className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl p-6 hover:shadow-lg transition-shadow group\" data-testid={`service-${service.slug}`}>\n              <div className=\"w-12 h-12 bg-pi-blue rounded-lg flex items-center justify-center mb-4 group-hover:bg-pi-blue-dark transition-colors\">\n                {service.icon ? (\n                  <div dangerouslySetInnerHTML={{ __html: service.icon }} className=\"text-white\" />\n                ) : (\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                )}\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\" data-testid={`text-service-title-${service.slug}`}>\n                {service.title}\n              </h3>\n              <p className=\"text-pi-gray mb-4\" data-testid={`text-service-description-${service.slug}`}>\n                {service.shortDescription}\n              </p>\n              <a \n                href={`/services/${service.slug}`} \n                className=\"text-pi-blue font-medium hover:text-pi-blue-dark transition-colors\"\n                data-testid={`link-service-${service.slug}`}\n              >\n                Learn More →\n              </a>\n            </div>\n          ))}\n\n          {/* Build Intelligent Apps CTA */}\n          <div className=\"bg-gradient-to-br from-pi-blue to-blue-700 text-white rounded-xl p-6 hover:shadow-lg transition-shadow\">\n            <div className=\"w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold mb-2\" data-testid=\"text-cta-title\">Build Intelligent Apps</h3>\n            <p className=\"text-blue-100 mb-4\" data-testid=\"text-cta-subtitle\">Start Today</p>\n            <a \n              href=\"/contact\" \n              className=\"text-white font-medium hover:text-blue-100 transition-colors\"\n              data-testid=\"link-cta-contact\"\n            >\n              Contact Us →\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7286},"client/src/components/Stats.tsx":{"content":"export default function Stats() {\n  return (\n    <section className=\"py-20 bg-pi-blue text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold mb-4\" data-testid=\"text-stats-title\">\n            We Are A Top-Rated Software Development Company for a Reason\n          </h2>\n          <p className=\"text-xl text-blue-100 max-w-4xl mx-auto\" data-testid=\"text-stats-description\">\n            We deliver highly skilled software engineers, data science professionals, and cloud specialists who consistently solve problems, complete tasks and work to power your projects forward.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 text-center\">\n          <div data-testid=\"stat-rating\">\n            <div className=\"text-4xl font-bold mb-2\" data-testid=\"text-stat-rating-value\">4.9</div>\n            <div className=\"text-blue-100\" data-testid=\"text-stat-rating-label\">stars</div>\n            <div className=\"text-sm text-blue-200 mt-1\" data-testid=\"text-stat-rating-description\">Verified Client Rating</div>\n          </div>\n          <div data-testid=\"stat-promoter\">\n            <div className=\"text-4xl font-bold mb-2\" data-testid=\"text-stat-promoter-value\">93%</div>\n            <div className=\"text-blue-100\" data-testid=\"text-stat-promoter-label\">Promoter Score</div>\n            <div className=\"text-sm text-blue-200 mt-1\" data-testid=\"text-stat-promoter-description\">Client's willing to refer us</div>\n          </div>\n          <div data-testid=\"stat-retention\">\n            <div className=\"text-4xl font-bold mb-2\" data-testid=\"text-stat-retention-value\">200%</div>\n            <div className=\"text-blue-100\" data-testid=\"text-stat-retention-label\">Retention Rate</div>\n            <div className=\"text-sm text-blue-200 mt-1\" data-testid=\"text-stat-retention-description\">Annual growth in renewals</div>\n          </div>\n          <div data-testid=\"stat-projects\">\n            <div className=\"text-4xl font-bold mb-2\" data-testid=\"text-stat-projects-value\">350+</div>\n            <div className=\"text-blue-100\" data-testid=\"text-stat-projects-label\">Projects</div>\n            <div className=\"text-sm text-blue-200 mt-1\" data-testid=\"text-stat-projects-description\">Successfully delivered</div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2418},"client/src/components/Team.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport default function Team() {\n  const { data: team, isLoading } = useQuery({\n    queryKey: ['/api/team'],\n  });\n\n  // Default team if none loaded\n  const defaultTeam = [\n    {\n      id: 1,\n      name: 'Sarah Chen',\n      role: 'Chief Technology Officer',\n      expertise: '15+ years in AI/ML and enterprise software architecture',\n      imageUrl: null\n    },\n    {\n      id: 2,\n      name: 'Michael Rodriguez',\n      role: 'VP of Engineering',\n      expertise: 'Expert in cloud infrastructure and scalable system design',\n      imageUrl: null\n    },\n    {\n      id: 3,\n      name: 'Dr. Emily Watson',\n      role: 'Lead Data Scientist',\n      expertise: 'PhD in Machine Learning, specialist in NLP and computer vision',\n      imageUrl: null\n    },\n    {\n      id: 4,\n      name: 'David Kim',\n      role: 'Senior Solutions Architect',\n      expertise: 'Full-stack development and enterprise system integration',\n      imageUrl: null\n    }\n  ];\n\n  const displayTeam = team || defaultTeam;\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center min-h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"about\" className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-team-title\">\n            Meet Our Expert Team\n          </h2>\n          <p className=\"text-xl text-pi-gray max-w-4xl mx-auto\" data-testid=\"text-team-description\">\n            Our experienced professionals bring deep expertise across diverse technologies and industries to deliver exceptional results for your projects.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {displayTeam.map((member: any) => (\n            <div key={member.id} className=\"bg-white dark:bg-gray-900 rounded-xl p-6 text-center shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-shadow\" data-testid={`team-member-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n              <div className=\"w-24 h-24 mx-auto mb-4\">\n                {member.imageUrl ? (\n                  <img \n                    src={member.imageUrl} \n                    alt={member.name}\n                    className=\"w-24 h-24 rounded-full object-cover\"\n                    data-testid={`img-member-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                  />\n                ) : (\n                  <div className=\"w-24 h-24 bg-gray-300 dark:bg-gray-700 rounded-full\"></div>\n                )}\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-1\" data-testid={`text-member-name-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                {member.name}\n              </h3>\n              <p className=\"text-pi-blue font-medium mb-2\" data-testid={`text-member-role-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                {member.role}\n              </p>\n              <p className=\"text-sm text-pi-gray\" data-testid={`text-member-expertise-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                {member.expertise}\n              </p>\n              {(member.linkedinUrl || member.twitterUrl || member.githubUrl) && (\n                <div className=\"flex justify-center space-x-3 mt-4\">\n                  {member.linkedinUrl && (\n                    <a \n                      href={member.linkedinUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-pi-gray hover:text-pi-blue transition-colors\"\n                      data-testid={`link-linkedin-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.338 16.338H13.67V12.16c0-.995-.017-2.277-1.387-2.277-1.39 0-1.601 1.086-1.601 2.207v4.248H8.014v-8.59h2.559v1.174h.037c.356-.675 1.227-1.387 2.526-1.387 2.703 0 3.203 1.778 3.203 4.092v4.711zM5.005 6.575a1.548 1.548 0 11-.003-3.096 1.548 1.548 0 01.003 3.096zm-1.337 9.763H6.34v-8.59H3.667v8.59zM17.668 1H2.328C1.595 1 1 1.581 1 2.298v15.403C1 18.418 1.595 19 2.328 19h15.34c.734 0 1.332-.582 1.332-1.299V2.298C19 1.581 18.402 1 17.668 1z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </a>\n                  )}\n                  {member.twitterUrl && (\n                    <a \n                      href={member.twitterUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-pi-gray hover:text-pi-blue transition-colors\"\n                      data-testid={`link-twitter-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\n                      </svg>\n                    </a>\n                  )}\n                  {member.githubUrl && (\n                    <a \n                      href={member.githubUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-pi-gray hover:text-pi-blue transition-colors\"\n                      data-testid={`link-github-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </a>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7364},"client/src/components/TeamMemberCard.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Linkedin, Github, Twitter } from \"lucide-react\";\n\ninterface TeamMemberCardProps {\n  member: {\n    id: string;\n    name: string;\n    role: string;\n    bio?: string;\n    expertise?: string[];\n    imageUrl?: string;\n    linkedinUrl?: string;\n    githubUrl?: string;\n    twitterUrl?: string;\n    isActive: boolean;\n  };\n}\n\nexport default function TeamMemberCard({ member }: TeamMemberCardProps) {\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n\n  return (\n    <Card className=\"text-center hover:shadow-lg transition-shadow group\">\n      <CardContent className=\"p-6\">\n        {/* Profile Image */}\n        <div className=\"mb-4\">\n          {member.imageUrl ? (\n            <img\n              src={member.imageUrl}\n              alt={member.name}\n              className=\"w-24 h-24 rounded-full mx-auto object-cover\"\n            />\n          ) : (\n            <div className=\"w-24 h-24 rounded-full mx-auto bg-blue-600 flex items-center justify-center\">\n              <span className=\"text-white font-semibold text-lg\">\n                {getInitials(member.name)}\n              </span>\n            </div>\n          )}\n        </div>\n        \n        {/* Name and Role */}\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-1 group-hover:text-blue-600 transition-colors\">\n          {member.name}\n        </h3>\n        <p className=\"text-blue-600 font-medium mb-3\">{member.role}</p>\n        \n        {/* Bio */}\n        {member.bio && (\n          <p className=\"text-sm text-gray-600 mb-4 leading-relaxed\">\n            {member.bio}\n          </p>\n        )}\n        \n        {/* Expertise Tags */}\n        {member.expertise && member.expertise.length > 0 && (\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-1 justify-center\">\n              {member.expertise.slice(0, 3).map((skill, index) => (\n                <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                  {skill}\n                </Badge>\n              ))}\n              {member.expertise.length > 3 && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  +{member.expertise.length - 3} more\n                </Badge>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Social Links */}\n        <div className=\"flex justify-center space-x-3\">\n          {member.linkedinUrl && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0 hover:bg-blue-50 hover:text-blue-600\"\n              asChild\n            >\n              <a \n                href={member.linkedinUrl} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                data-testid={`link-linkedin-${member.id}`}\n              >\n                <Linkedin className=\"h-4 w-4\" />\n              </a>\n            </Button>\n          )}\n          {member.githubUrl && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0 hover:bg-gray-50 hover:text-gray-800\"\n              asChild\n            >\n              <a \n                href={member.githubUrl} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                data-testid={`link-github-${member.id}`}\n              >\n                <Github className=\"h-4 w-4\" />\n              </a>\n            </Button>\n          )}\n          {member.twitterUrl && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0 hover:bg-blue-50 hover:text-blue-400\"\n              asChild\n            >\n              <a \n                href={member.twitterUrl} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                data-testid={`link-twitter-${member.id}`}\n              >\n                <Twitter className=\"h-4 w-4\" />\n              </a>\n            </Button>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4242},"client/src/components/TechnologyStack.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport default function TechnologyStack() {\n  const { data: technologies, isLoading } = useQuery({\n    queryKey: ['/api/technologies'],\n  });\n\n  // Default technologies if none loaded\n  const defaultTechnologies = {\n    'backend': [\n      { name: 'C#', url: '#' },\n      { name: '.Net', url: '#' },\n      { name: 'Java', url: '#' },\n      { name: 'NEXT.js', url: '#' },\n      { name: 'Node.js', url: '#' },\n      { name: 'PHP', url: '#' },\n      { name: 'Python', url: '#' },\n      { name: 'Unity', url: '#' }\n    ],\n    'frontend': [\n      { name: 'Angular', url: '#' },\n      { name: 'React', url: '#' },\n      { name: 'Vue.js', url: '#' },\n      { name: 'Svelte', url: '#' },\n      { name: 'TypeScript', url: '#' },\n      { name: 'JavaScript', url: '#' }\n    ],\n    'ai-ml': [\n      { name: 'OpenAI', url: '#' },\n      { name: 'Anthropic', url: '#' },\n      { name: 'TensorFlow', url: '#' },\n      { name: 'PyTorch', url: '#' },\n      { name: 'Keras', url: '#' },\n      { name: 'LLaMA', url: '#' },\n      { name: 'Databricks', url: '#' }\n    ],\n    'devops': [\n      { name: 'AWS', url: '#' },\n      { name: 'Azure', url: '#' },\n      { name: 'Google Cloud', url: '#' },\n      { name: 'Docker', url: '#' },\n      { name: 'Kubernetes', url: '#' },\n      { name: 'Terraform', url: '#' }\n    ]\n  };\n\n  const getTechnologiesByCategory = (category: string) => {\n    if (technologies) {\n      return technologies.filter((tech: any) => tech.category === category);\n    }\n    return (defaultTechnologies as any)[category] || [];\n  };\n\n  const categories = [\n    { key: 'backend', label: 'BACK-END' },\n    { key: 'frontend', label: 'FRONT-END' },\n    { key: 'ai-ml', label: 'AI/ML' },\n    { key: 'devops', label: 'DEVOPS' }\n  ];\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center min-h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"technologies\" className=\"py-20 bg-white dark:bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-tech-stack-title\">\n            We are a Full Stack Software Development Company\n          </h2>\n          <p className=\"text-xl text-pi-gray max-w-4xl mx-auto\" data-testid=\"text-tech-stack-description\">\n            We have built a business focused on assembling talented developers who have mastered the frameworks and technologies that power modern solutions.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {categories.map(category => {\n            const categoryTechs = getTechnologiesByCategory(category.key);\n            \n            return (\n              <div key={category.key} data-testid={`tech-category-${category.key}`}>\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\" data-testid={`text-category-${category.key}`}>\n                  {category.label}\n                </h3>\n                <div className=\"space-y-2\">\n                  {categoryTechs.length === 0 ? (\n                    <p className=\"text-pi-gray text-sm\">No technologies available</p>\n                  ) : (\n                    categoryTechs.map((tech: any, index: number) => (\n                      <div key={index}>\n                        {tech.url ? (\n                          <a \n                            href={tech.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"block text-pi-blue hover:text-pi-blue-dark transition-colors\"\n                            data-testid={`link-tech-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            {tech.name}\n                          </a>\n                        ) : (\n                          <span \n                            className=\"block text-pi-blue\"\n                            data-testid={`text-tech-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            {tech.name}\n                          </span>\n                        )}\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <a \n            href=\"/technologies\"\n            className=\"bg-pi-blue text-white px-8 py-3 rounded-lg font-semibold hover:bg-pi-blue-dark transition-colors\"\n            data-testid=\"button-view-all-technologies\"\n          >\n            View All Technologies\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5063},"client/src/components/TestimonialCard.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Star } from \"lucide-react\";\n\ninterface TestimonialCardProps {\n  testimonial: {\n    id: string;\n    content: string;\n    authorName: string;\n    authorTitle?: string;\n    authorCompany?: string;\n    authorImageUrl?: string;\n    rating: number;\n    isActive: boolean;\n    isFeatured: boolean;\n  };\n}\n\nexport default function TestimonialCard({ testimonial }: TestimonialCardProps) {\n  const renderStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star\n        key={i}\n        className={`w-4 h-4 ${\n          i < rating ? \"text-yellow-400 fill-current\" : \"text-gray-300\"\n        }`}\n      />\n    ));\n  };\n\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n\n  return (\n    <Card className=\"bg-gray-50 hover:shadow-lg transition-shadow\">\n      <CardContent className=\"p-6\">\n        {/* Rating Stars */}\n        <div className=\"flex items-center mb-4\">\n          <div className=\"flex\">\n            {renderStars(testimonial.rating)}\n          </div>\n          <span className=\"ml-2 text-sm text-gray-600\">({testimonial.rating}/5)</span>\n        </div>\n        \n        {/* Testimonial Content */}\n        <blockquote className=\"text-gray-900 mb-6 leading-relaxed\">\n          \"{testimonial.content}\"\n        </blockquote>\n        \n        {/* Author Info */}\n        <div className=\"flex items-center\">\n          {/* Author Avatar */}\n          <div className=\"flex-shrink-0 mr-4\">\n            {testimonial.authorImageUrl ? (\n              <img\n                src={testimonial.authorImageUrl}\n                alt={testimonial.authorName}\n                className=\"w-12 h-12 rounded-full object-cover\"\n              />\n            ) : (\n              <div className=\"w-12 h-12 rounded-full bg-blue-600 flex items-center justify-center\">\n                <span className=\"text-white font-medium text-sm\">\n                  {getInitials(testimonial.authorName)}\n                </span>\n              </div>\n            )}\n          </div>\n          \n          {/* Author Details */}\n          <div>\n            <cite className=\"not-italic\">\n              <div className=\"font-semibold text-gray-900\">{testimonial.authorName}</div>\n              {(testimonial.authorTitle || testimonial.authorCompany) && (\n                <div className=\"text-sm text-gray-600\">\n                  {testimonial.authorTitle}\n                  {testimonial.authorTitle && testimonial.authorCompany && ', '}\n                  {testimonial.authorCompany}\n                </div>\n              )}\n            </cite>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":2772},"client/src/components/Testimonials.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport default function Testimonials() {\n  const { data: testimonials, isLoading } = useQuery({\n    queryKey: ['/api/testimonials', { featured: 'true' }],\n  });\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center min-h-96\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  // Default testimonials if none loaded\n  const defaultTestimonials = [\n    {\n      id: 1,\n      quote: \"Pi Tetris has been great to work with. Their team has impressed us with their professionalism and capacity. We have a mature and sophisticated tech stack, and they were able to jump in and rapidly make valuable contributions.\",\n      authorName: \"Mark Thompson\",\n      authorTitle: \"Director of Engineering\",\n      authorCompany: \"TechFlow Solutions\",\n      rating: 5\n    },\n    {\n      id: 2,\n      quote: \"The work was highly complicated and required a lot of planning, engineering, and customization. Their development knowledge is impressive and they delivered exactly what we needed.\",\n      authorName: \"Jennifer Walsh\",\n      authorTitle: \"Senior Product Manager\",\n      authorCompany: \"DataVantage Inc\",\n      rating: 5\n    },\n    {\n      id: 3,\n      quote: \"Pi Tetris came in with a dedicated team that quickly grasped our problem and designed and built our data integration solution. They delivered a clearer picture for our business in a timeframe I didn't think was possible.\",\n      authorName: \"Robert Martinez\",\n      authorTitle: \"Chief Operating Officer\",\n      authorCompany: \"FinanceFirst\",\n      rating: 5\n    }\n  ];\n\n  const displayTestimonials = testimonials || defaultTestimonials;\n\n  return (\n    <section className=\"py-20 bg-white dark:bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-testimonials-title\">\n            What Our Clients Say\n          </h2>\n          <p className=\"text-xl text-pi-gray\" data-testid=\"text-testimonials-description\">\n            Real feedback from real clients who have transformed their businesses with our solutions.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {displayTestimonials.map((testimonial: any) => (\n            <div key={testimonial.id} className=\"bg-gray-50 dark:bg-gray-800 rounded-xl p-6\" data-testid={`testimonial-${testimonial.id}`}>\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex text-yellow-400\">\n                  {Array.from({ length: testimonial.rating || 5 }).map((_, i) => (\n                    <svg key={i} className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" data-testid={`star-${testimonial.id}-${i}`}>\n                      <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\n                    </svg>\n                  ))}\n                </div>\n              </div>\n              <blockquote className=\"text-gray-900 dark:text-white mb-4\" data-testid={`text-testimonial-quote-${testimonial.id}`}>\n                \"{testimonial.quote}\"\n              </blockquote>\n              <cite className=\"text-sm not-italic\">\n                <span className=\"font-semibold text-gray-900 dark:text-white\" data-testid={`text-testimonial-author-${testimonial.id}`}>\n                  {testimonial.authorName}\n                </span>\n                {testimonial.authorTitle && (\n                  <>\n                    <br />\n                    <span className=\"text-pi-gray\" data-testid={`text-testimonial-title-${testimonial.id}`}>\n                      {testimonial.authorTitle}\n                      {testimonial.authorCompany && `, ${testimonial.authorCompany}`}\n                    </span>\n                  </>\n                )}\n              </cite>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4524},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}\n","size_bytes":257},"client/src/lib/api.ts":{"content":"import { apiRequest } from \"./queryClient\";\n\n// Contact form submission\nexport const submitContactForm = async (data: {\n  firstName: string;\n  lastName: string;\n  email: string;\n  company?: string;\n  projectType?: string;\n  message: string;\n}) => {\n  return apiRequest(\"POST\", \"/api/contact\", data);\n};\n\n// Public API calls\nexport const getServices = async () => {\n  return apiRequest(\"GET\", \"/api/services\");\n};\n\nexport const getService = async (slug: string) => {\n  return apiRequest(\"GET\", `/api/services/${slug}`);\n};\n\nexport const getTechnologies = async (category?: string) => {\n  const params = category ? `?category=${category}` : '';\n  return apiRequest(\"GET\", `/api/technologies${params}`);\n};\n\nexport const getTeamMembers = async () => {\n  return apiRequest(\"GET\", \"/api/team\");\n};\n\nexport const getTestimonials = async (featured?: boolean) => {\n  const params = featured ? '?featured=true' : '';\n  return apiRequest(\"GET\", `/api/testimonials${params}`);\n};\n\nexport const getClients = async (featured?: boolean) => {\n  const params = featured ? '?featured=true' : '';\n  return apiRequest(\"GET\", `/api/clients${params}`);\n};\n\nexport const getCaseStudies = async (featured?: boolean) => {\n  const params = featured ? '?featured=true' : '';\n  return apiRequest(\"GET\", `/api/case-studies${params}`);\n};\n\nexport const getCaseStudy = async (slug: string) => {\n  return apiRequest(\"GET\", `/api/case-studies/${slug}`);\n};\n\nexport const getSiteSetting = async (key: string) => {\n  return apiRequest(\"GET\", `/api/settings/${key}`);\n};\n\n// Admin API calls (require authentication)\nexport const getDashboardStats = async () => {\n  return apiRequest(\"GET\", \"/api/admin/stats\");\n};\n\nexport const getCategories = async (type?: string) => {\n  const params = type ? `?type=${type}` : '';\n  return apiRequest(\"GET\", `/api/admin/categories${params}`);\n};\n\nexport const createCategory = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/categories\", data);\n};\n\nexport const updateCategory = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/categories/${id}`, data);\n};\n\nexport const deleteCategory = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/categories/${id}`);\n};\n\n// Services admin\nexport const getServicesAdmin = async () => {\n  return apiRequest(\"GET\", \"/api/admin/services\");\n};\n\nexport const createService = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/services\", data);\n};\n\nexport const updateService = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/services/${id}`, data);\n};\n\nexport const deleteService = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/services/${id}`);\n};\n\n// Technologies admin\nexport const getTechnologiesAdmin = async () => {\n  return apiRequest(\"GET\", \"/api/admin/technologies\");\n};\n\nexport const createTechnology = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/technologies\", data);\n};\n\nexport const updateTechnology = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/technologies/${id}`, data);\n};\n\nexport const deleteTechnology = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/technologies/${id}`);\n};\n\n// Team admin\nexport const getTeamAdmin = async () => {\n  return apiRequest(\"GET\", \"/api/admin/team\");\n};\n\nexport const createTeamMember = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/team\", data);\n};\n\nexport const updateTeamMember = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/team/${id}`, data);\n};\n\nexport const deleteTeamMember = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/team/${id}`);\n};\n\n// Testimonials admin\nexport const getTestimonialsAdmin = async () => {\n  return apiRequest(\"GET\", \"/api/admin/testimonials\");\n};\n\nexport const createTestimonial = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/testimonials\", data);\n};\n\nexport const updateTestimonial = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/testimonials/${id}`, data);\n};\n\nexport const deleteTestimonial = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/testimonials/${id}`);\n};\n\n// Clients admin\nexport const getClientsAdmin = async () => {\n  return apiRequest(\"GET\", \"/api/admin/clients\");\n};\n\nexport const createClient = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/clients\", data);\n};\n\nexport const updateClient = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/clients/${id}`, data);\n};\n\nexport const deleteClient = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/clients/${id}`);\n};\n\n// Case studies admin\nexport const getCaseStudiesAdmin = async () => {\n  return apiRequest(\"GET\", \"/api/admin/case-studies\");\n};\n\nexport const createCaseStudy = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/case-studies\", data);\n};\n\nexport const updateCaseStudy = async (id: string, data: any) => {\n  return apiRequest(\"PUT\", `/api/admin/case-studies/${id}`, data);\n};\n\nexport const deleteCaseStudy = async (id: string) => {\n  return apiRequest(\"DELETE\", `/api/admin/case-studies/${id}`);\n};\n\n// Contact submissions admin\nexport const getContactSubmissions = async (status?: string) => {\n  const params = status ? `?status=${status}` : '';\n  return apiRequest(\"GET\", `/api/admin/contact-submissions${params}`);\n};\n\nexport const markContactSubmissionAsRead = async (id: string) => {\n  return apiRequest(\"PUT\", `/api/admin/contact-submissions/${id}/read`);\n};\n\nexport const updateContactSubmissionStatus = async (id: string, status: string) => {\n  return apiRequest(\"PUT\", `/api/admin/contact-submissions/${id}`, { status });\n};\n\n// Site settings admin\nexport const getSiteSettings = async () => {\n  return apiRequest(\"GET\", \"/api/admin/settings\");\n};\n\nexport const upsertSiteSetting = async (data: any) => {\n  return apiRequest(\"POST\", \"/api/admin/settings\", data);\n};\n\n// Object storage\nexport const getUploadURL = async () => {\n  return apiRequest(\"POST\", \"/api/objects/upload\");\n};\n\nexport const setObjectACL = async (objectURL: string, visibility: 'public' | 'private') => {\n  return apiRequest(\"PUT\", \"/api/objects/set-acl\", { objectURL, visibility });\n};\n","size_bytes":6246},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/About.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport TeamMemberCard from \"@/components/TeamMemberCard\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Target, Users, Award, TrendingUp } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function About() {\n  const { data: teamMembers = [], isLoading } = useQuery({\n    queryKey: [\"/api/team\"],\n  });\n\n  const { data: technologies = [] } = useQuery({\n    queryKey: [\"/api/technologies\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-20\">\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">About Pi Tetris</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            We are a leading software development company specializing in AI-driven solutions. \n            Our mission is to help businesses transform through innovative technology, delivering \n            more velocity, more value, and more peace of mind.\n          </p>\n        </div>\n\n        {/* Company Values */}\n        <section className=\"mb-20\">\n          <h2 className=\"text-3xl font-bold text-gray-900 text-center mb-12\">Our Core Values</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Target className=\"w-8 h-8 text-blue-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Excellence</h3>\n                <p className=\"text-gray-600\">We strive for perfection in every project, delivering solutions that exceed expectations.</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Users className=\"w-8 h-8 text-green-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Collaboration</h3>\n                <p className=\"text-gray-600\">We work closely with our clients as true partners in their digital transformation journey.</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <TrendingUp className=\"w-8 h-8 text-purple-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Innovation</h3>\n                <p className=\"text-gray-600\">We stay at the forefront of technology, continuously learning and adopting new solutions.</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Award className=\"w-8 h-8 text-yellow-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Quality</h3>\n                <p className=\"text-gray-600\">Every line of code, every design decision is made with quality and reliability in mind.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n\n        {/* Company Story */}\n        <section className=\"mb-20\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Our Story</h2>\n              <div className=\"space-y-4 text-gray-600\">\n                <p>\n                  Founded with a vision to bridge the gap between cutting-edge technology and practical business solutions, \n                  Pi Tetris has grown from a small team of passionate developers to a globally recognized software development company.\n                </p>\n                <p>\n                  Our journey began with a simple belief: that artificial intelligence and modern software development practices \n                  could dramatically improve how businesses operate. Today, we've helped hundreds of companies across various \n                  industries transform their operations through innovative technology solutions.\n                </p>\n                <p>\n                  We're proud to be SOC 2 compliant and work with clients ranging from innovative startups to Fortune 500 companies, \n                  always maintaining our commitment to excellence, transparency, and delivering results that matter.\n                </p>\n              </div>\n            </div>\n            <div className=\"bg-gradient-to-br from-blue-50 to-indigo-100 rounded-2xl p-8\">\n              <div className=\"grid grid-cols-2 gap-6 text-center\">\n                <div>\n                  <div className=\"text-3xl font-bold text-blue-600 mb-2\">350+</div>\n                  <div className=\"text-gray-700\">Projects Delivered</div>\n                </div>\n                <div>\n                  <div className=\"text-3xl font-bold text-blue-600 mb-2\">100+</div>\n                  <div className=\"text-gray-700\">Happy Clients</div>\n                </div>\n                <div>\n                  <div className=\"text-3xl font-bold text-blue-600 mb-2\">5+</div>\n                  <div className=\"text-gray-700\">Years Experience</div>\n                </div>\n                <div>\n                  <div className=\"text-3xl font-bold text-blue-600 mb-2\">24/7</div>\n                  <div className=\"text-gray-700\">Support</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Team Section */}\n        {teamMembers.length > 0 && (\n          <section className=\"mb-20\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Meet Our Expert Team</h2>\n              <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n                Our experienced professionals bring deep expertise across diverse technologies and industries \n                to deliver exceptional results for your projects.\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              {teamMembers.map((member: any) => (\n                <TeamMemberCard key={member.id} member={member} />\n              ))}\n            </div>\n          </section>\n        )}\n\n        {/* Technologies */}\n        {technologies.length > 0 && (\n          <section className=\"mb-20\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Our Technology Expertise</h2>\n              <p className=\"text-xl text-gray-600\">\n                We work with cutting-edge technologies to deliver modern, scalable solutions.\n              </p>\n            </div>\n            \n            <div className=\"flex flex-wrap gap-3 justify-center\">\n              {technologies.map((tech: any) => (\n                <Badge \n                  key={tech.id} \n                  variant=\"outline\" \n                  className=\"text-sm py-2 px-4 hover:bg-blue-50 hover:border-blue-300 transition-colors cursor-pointer\"\n                  data-testid={`badge-technology-${tech.slug}`}\n                >\n                  {tech.name}\n                </Badge>\n              ))}\n            </div>\n          </section>\n        )}\n\n        {/* Awards & Recognition */}\n        <section className=\"mb-20\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Awards & Recognition</h2>\n            <p className=\"text-xl text-gray-600\">Recognition from industry leaders and clients worldwide.</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Award className=\"w-8 h-8 text-blue-600\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Top AI Developer 2024</h3>\n                <p className=\"text-gray-600\">Clutch</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Award className=\"w-8 h-8 text-green-600\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Best Software Developer</h3>\n                <p className=\"text-gray-600\">TechBehemoths</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Award className=\"w-8 h-8 text-purple-600\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">SOC 2 Compliant</h3>\n                <p className=\"text-gray-600\">Security & Compliance</p>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n\n        {/* Call to Action */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 rounded-2xl p-12 text-center text-white\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Work Together?</h2>\n          <p className=\"text-xl text-blue-100 mb-8 max-w-2xl mx-auto\">\n            Let's discuss your project and see how our expertise can help you achieve your goals.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" variant=\"secondary\" data-testid=\"button-get-started\">\n                Get Started\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/portfolio\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-blue-600\" data-testid=\"button-view-our-work\">\n                View Our Work\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":11401},"client/src/pages/CaseStudy.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Layout from \"@/components/Layout\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport default function CaseStudy() {\n  const params = useParams();\n  const slug = params.slug;\n\n  const { data: caseStudy, isLoading, error } = useQuery({\n    queryKey: ['/api/case-studies', slug],\n    enabled: !!slug,\n  });\n\n  if (isLoading) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue mx-auto mb-4\"></div>\n            <p className=\"text-pi-gray\" data-testid=\"text-loading\">Loading case study...</p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (error || !caseStudy) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-error-title\">Case Study Not Found</h1>\n            <p className=\"text-pi-gray mb-8\" data-testid=\"text-error-description\">\n              The case study you're looking for doesn't exist or has been moved.\n            </p>\n            <a \n              href=\"/portfolio\" \n              className=\"bg-pi-blue text-white px-6 py-2 rounded-lg hover:bg-pi-blue-dark transition-colors\"\n              data-testid=\"link-back-portfolio\"\n            >\n              Back to Portfolio\n            </a>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  const technologies = caseStudy.technologies ? JSON.parse(caseStudy.technologies) : [];\n  const results = caseStudy.results ? JSON.parse(caseStudy.results) : [];\n\n  return (\n    <Layout>\n      {/* Hero Section */}\n      <div className=\"pt-20 pb-20 bg-gradient-pi-hero text-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <div className=\"flex justify-center mb-4\">\n              <Badge variant=\"secondary\" className=\"mb-4\" data-testid=\"badge-case-study\">\n                Case Study\n              </Badge>\n            </div>\n            <h1 className=\"text-4xl lg:text-6xl font-bold leading-tight mb-6\" data-testid=\"text-case-study-title\">\n              {caseStudy.title}\n            </h1>\n            {caseStudy.shortDescription && (\n              <p className=\"text-xl lg:text-2xl text-blue-100 mb-8\" data-testid=\"text-case-study-description\">\n                {caseStudy.shortDescription}\n              </p>\n            )}\n            {caseStudy.publishedAt && (\n              <p className=\"text-blue-200\" data-testid=\"text-case-study-date\">\n                Published on {new Date(caseStudy.publishedAt).toLocaleDateString()}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Case Study Image */}\n      {caseStudy.imageUrl && (\n        <div className=\"py-12 bg-gray-50 dark:bg-gray-800\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <img \n              src={caseStudy.imageUrl}\n              alt={caseStudy.title}\n              className=\"w-full h-96 object-cover rounded-xl shadow-lg\"\n              data-testid=\"img-case-study-hero\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Case Study Content */}\n      <div className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"prose prose-lg max-w-none dark:prose-invert\" data-testid=\"content-case-study\">\n            <div dangerouslySetInnerHTML={{ __html: caseStudy.content }} />\n          </div>\n\n          {/* Technologies Used */}\n          {technologies.length > 0 && (\n            <div className=\"mt-12 pt-8 border-t border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-technologies-title\">\n                Technologies Used\n              </h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {technologies.map((tech: string, index: number) => (\n                  <Badge key={index} variant=\"outline\" data-testid={`badge-technology-${index}`}>\n                    {tech}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Key Results */}\n          {results.length > 0 && (\n            <div className=\"mt-12 pt-8 border-t border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-results-title\">\n                Key Results\n              </h3>\n              <ul className=\"space-y-2\">\n                {results.map((result: string, index: number) => (\n                  <li key={index} className=\"flex items-start\" data-testid={`result-item-${index}`}>\n                    <svg className=\"w-6 h-6 text-green-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span className=\"text-gray-700 dark:text-gray-300\">{result}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Call to Action */}\n          <div className=\"mt-12 pt-8 border-t border-gray-200 dark:border-gray-700 text-center\">\n            <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\" data-testid=\"text-cta-title\">\n              Ready to Start Your Project?\n            </h3>\n            <p className=\"text-pi-gray mb-6\" data-testid=\"text-cta-description\">\n              Let's discuss how we can help you achieve similar results.\n            </p>\n            <a \n              href=\"/contact\"\n              className=\"bg-pi-blue text-white px-8 py-3 rounded-lg font-semibold hover:bg-pi-blue-dark transition-colors\"\n              data-testid=\"button-contact\"\n            >\n              Get In Touch\n            </a>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":6227},"client/src/pages/CaseStudyDetail.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useParams, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowLeft, ArrowRight, Clock, Users, Target, CheckCircle } from \"lucide-react\";\nimport NotFound from \"@/pages/not-found\";\n\nexport default function CaseStudyDetail() {\n  const { slug } = useParams();\n  \n  const { data: caseStudy, isLoading } = useQuery({\n    queryKey: [`/api/case-studies/${slug}`],\n    enabled: !!slug,\n  });\n\n  const { data: relatedCaseStudies = [] } = useQuery({\n    queryKey: [\"/api/case-studies\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!caseStudy) {\n    return <NotFound />;\n  }\n\n  // Filter related case studies (exclude current one and limit to 3)\n  const related = relatedCaseStudies\n    .filter((cs: any) => cs.id !== caseStudy.id)\n    .slice(0, 3);\n\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Breadcrumb */}\n        <nav className=\"mb-8\">\n          <Link href=\"/portfolio\">\n            <span className=\"inline-flex items-center text-blue-600 hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-back-portfolio\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Portfolio\n            </span>\n          </Link>\n        </nav>\n\n        {/* Hero Image */}\n        {caseStudy.imageUrl && (\n          <div className=\"mb-12 rounded-2xl overflow-hidden\">\n            <img \n              src={caseStudy.imageUrl} \n              alt={caseStudy.title}\n              className=\"w-full h-64 md:h-96 object-cover\"\n            />\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"mb-16\">\n          <div className=\"flex flex-wrap items-center gap-2 mb-4\">\n            {caseStudy.isFeatured && (\n              <Badge className=\"bg-yellow-100 text-yellow-800\">Featured</Badge>\n            )}\n            {caseStudy.tags && caseStudy.tags.map((tag: string, index: number) => (\n              <Badge key={index} variant=\"outline\">{tag}</Badge>\n            ))}\n          </div>\n          \n          <h1 className=\"text-5xl font-bold text-gray-900 mb-4\">{caseStudy.title}</h1>\n          \n          {caseStudy.clientName && (\n            <p className=\"text-xl text-gray-600 mb-6\">Client: {caseStudy.clientName}</p>\n          )}\n          \n          <p className=\"text-xl text-gray-600 max-w-4xl\">{caseStudy.shortDescription}</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2 space-y-12\">\n            {/* Project Overview */}\n            <section>\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Project Overview</h2>\n              <div className=\"prose prose-lg max-w-none text-gray-600\">\n                {caseStudy.longDescription ? (\n                  <div dangerouslySetInnerHTML={{ __html: caseStudy.longDescription }} />\n                ) : (\n                  <p>{caseStudy.shortDescription}</p>\n                )}\n              </div>\n            </section>\n\n            {/* Challenge */}\n            {caseStudy.challenge && (\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">The Challenge</h2>\n                <div className=\"bg-red-50 border-l-4 border-red-400 p-6 rounded-r-lg\">\n                  <div className=\"prose prose-lg max-w-none text-gray-700\">\n                    <div dangerouslySetInnerHTML={{ __html: caseStudy.challenge }} />\n                  </div>\n                </div>\n              </section>\n            )}\n\n            {/* Solution */}\n            {caseStudy.solution && (\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Our Solution</h2>\n                <div className=\"bg-blue-50 border-l-4 border-blue-400 p-6 rounded-r-lg\">\n                  <div className=\"prose prose-lg max-w-none text-gray-700\">\n                    <div dangerouslySetInnerHTML={{ __html: caseStudy.solution }} />\n                  </div>\n                </div>\n              </section>\n            )}\n\n            {/* Results */}\n            {caseStudy.results && (\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Results & Impact</h2>\n                <div className=\"bg-green-50 border-l-4 border-green-400 p-6 rounded-r-lg\">\n                  <div className=\"prose prose-lg max-w-none text-gray-700\">\n                    <div dangerouslySetInnerHTML={{ __html: caseStudy.results }} />\n                  </div>\n                </div>\n              </section>\n            )}\n\n            {/* Technologies */}\n            {caseStudy.technologies && caseStudy.technologies.length > 0 && (\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Technologies Used</h2>\n                <div className=\"flex flex-wrap gap-2\">\n                  {caseStudy.technologies.map((tech: string, index: number) => (\n                    <Badge key={index} variant=\"secondary\" className=\"text-sm py-2 px-3\">\n                      {tech}\n                    </Badge>\n                  ))}\n                </div>\n              </section>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Project Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Project Details</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {caseStudy.projectDuration && (\n                  <div className=\"flex items-center\">\n                    <Clock className=\"w-5 h-5 text-gray-400 mr-3\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Duration</div>\n                      <div className=\"font-medium\">{caseStudy.projectDuration}</div>\n                    </div>\n                  </div>\n                )}\n                \n                {caseStudy.teamSize && (\n                  <div className=\"flex items-center\">\n                    <Users className=\"w-5 h-5 text-gray-400 mr-3\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Team Size</div>\n                      <div className=\"font-medium\">{caseStudy.teamSize} developers</div>\n                    </div>\n                  </div>\n                )}\n                \n                {caseStudy.clientName && (\n                  <div className=\"flex items-center\">\n                    <Target className=\"w-5 h-5 text-gray-400 mr-3\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Client</div>\n                      <div className=\"font-medium\">{caseStudy.clientName}</div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Call to Action */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Interested in Similar Results?</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <p className=\"text-gray-600\">\n                  Let's discuss how we can help you achieve similar success with your project.\n                </p>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full\" data-testid=\"button-start-project\">\n                    Start Your Project\n                    <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </Link>\n                <Link href=\"/services\">\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-explore-services\">\n                    Explore Our Services\n                  </Button>\n                </Link>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Related Case Studies */}\n        {related.length > 0 && (\n          <section className=\"mt-20\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-8\">Related Case Studies</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              {related.map((relatedCase: any) => (\n                <Card key={relatedCase.id} className=\"hover:shadow-lg transition-shadow\">\n                  {relatedCase.imageUrl && (\n                    <div className=\"aspect-video bg-gray-200 rounded-t-lg overflow-hidden\">\n                      <img \n                        src={relatedCase.imageUrl} \n                        alt={relatedCase.title}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  )}\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">{relatedCase.title}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-600 mb-4\">{relatedCase.shortDescription}</p>\n                    <Link href={`/case-studies/${relatedCase.slug}`}>\n                      <Button variant=\"outline\" size=\"sm\" data-testid={`button-view-related-case-${relatedCase.slug}`}>\n                        View Case Study\n                        <ArrowRight className=\"ml-2 h-4 w-4\" />\n                      </Button>\n                    </Link>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":9813},"client/src/pages/Contact.tsx":{"content":"import ContactForm from \"@/components/ContactForm\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { MapPin, Mail, Phone, Clock } from \"lucide-react\";\n\nexport default function Contact() {\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">Get in Touch</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            Ready to transform your business with AI-driven solutions? Let's discuss your project \n            and how we can help you achieve your goals. Our team is here to answer your questions \n            and provide expert guidance.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Contact Information */}\n          <div className=\"space-y-8\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Contact Information</h2>\n              <p className=\"text-lg text-gray-600 mb-8\">\n                We're here to help you succeed. Reach out to us through any of the channels below, \n                and we'll get back to you promptly.\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start\">\n                    <div className=\"flex-shrink-0\">\n                      <MapPin className=\"w-6 h-6 text-blue-600 mt-1\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Our Office</h3>\n                      <p className=\"text-gray-600\">\n                        123 Technology Drive<br />\n                        San Francisco, CA 94105<br />\n                        United States\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start\">\n                    <div className=\"flex-shrink-0\">\n                      <Mail className=\"w-6 h-6 text-blue-600 mt-1\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Email Us</h3>\n                      <p className=\"text-gray-600\">\n                        <a href=\"mailto:hello@pitetris.com\" className=\"hover:text-blue-600 transition-colors\">\n                          hello@pitetris.com\n                        </a>\n                      </p>\n                      <p className=\"text-gray-600 mt-1\">\n                        <a href=\"mailto:careers@pitetris.com\" className=\"hover:text-blue-600 transition-colors\">\n                          careers@pitetris.com\n                        </a>\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start\">\n                    <div className=\"flex-shrink-0\">\n                      <Phone className=\"w-6 h-6 text-blue-600 mt-1\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Call Us</h3>\n                      <p className=\"text-gray-600\">\n                        <a href=\"tel:+15551234567\" className=\"hover:text-blue-600 transition-colors\">\n                          +1 (555) 123-4567\n                        </a>\n                      </p>\n                      <p className=\"text-gray-600 text-sm mt-1\">Monday - Friday, 9AM - 6PM PST</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start\">\n                    <div className=\"flex-shrink-0\">\n                      <Clock className=\"w-6 h-6 text-blue-600 mt-1\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Business Hours</h3>\n                      <div className=\"text-gray-600 space-y-1\">\n                        <p>Monday - Friday: 9:00 AM - 6:00 PM</p>\n                        <p>Saturday: 10:00 AM - 4:00 PM</p>\n                        <p>Sunday: Closed</p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Response Time */}\n            <Card className=\"bg-blue-50 border-blue-200\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Response Time</h3>\n                <p className=\"text-gray-600\">\n                  We typically respond to all inquiries within 24 hours during business days. \n                  For urgent matters, please call us directly.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          {/* Contact Form */}\n          <div>\n            <ContactForm />\n          </div>\n        </div>\n\n        {/* FAQ Section */}\n        <section className=\"mt-20\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Frequently Asked Questions</h2>\n            <p className=\"text-xl text-gray-600\">Quick answers to common questions about our services.</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">How long does a typical project take?</h3>\n                <p className=\"text-gray-600\">\n                  Project timelines vary based on complexity and scope. Simple applications typically take 2-4 months, \n                  while complex AI solutions may take 6-12 months. We'll provide a detailed timeline during our initial consultation.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Do you work with startups and small businesses?</h3>\n                <p className=\"text-gray-600\">\n                  Absolutely! We work with companies of all sizes, from early-stage startups to Fortune 500 companies. \n                  We offer flexible engagement models to fit your budget and requirements.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">What technologies do you specialize in?</h3>\n                <p className=\"text-gray-600\">\n                  We specialize in AI/ML, web development, mobile apps, and cloud solutions. Our tech stack includes \n                  React, Node.js, Python, TensorFlow, AWS, and many other modern technologies.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Do you provide ongoing support and maintenance?</h3>\n                <p className=\"text-gray-600\">\n                  Yes, we offer comprehensive support and maintenance packages to ensure your applications continue \n                  to perform optimally. We also provide updates and enhancements as your business grows.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8230},"client/src/pages/Home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Hero from \"@/components/Hero\";\nimport ServiceCard from \"@/components/ServiceCard\";\nimport CaseStudyCard from \"@/components/CaseStudyCard\";\nimport TestimonialCard from \"@/components/TestimonialCard\";\nimport TeamMemberCard from \"@/components/TeamMemberCard\";\nimport ContactForm from \"@/components/ContactForm\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Star, TrendingUp, Users, Award } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function Home() {\n  const { data: services = [] } = useQuery({\n    queryKey: [\"/api/services\"],\n  });\n\n  const { data: featuredCaseStudies = [] } = useQuery({\n    queryKey: [\"/api/case-studies/featured\"],\n  });\n\n  const { data: featuredTestimonials = [] } = useQuery({\n    queryKey: [\"/api/testimonials/featured\"],\n  });\n\n  const { data: teamMembers = [] } = useQuery({\n    queryKey: [\"/api/team\"],\n  });\n\n  const { data: clients = [] } = useQuery({\n    queryKey: [\"/api/clients\"],\n  });\n\n  const { data: technologies = [] } = useQuery({\n    queryKey: [\"/api/technologies\"],\n  });\n\n  // Group technologies by category for display\n  const techCategories = technologies.reduce((acc: any, tech: any) => {\n    const categoryName = tech.categoryId || 'other';\n    if (!acc[categoryName]) acc[categoryName] = [];\n    acc[categoryName].push(tech);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <Hero />\n\n      {/* Client Logos */}\n      <motion.section \n        className=\"py-16 bg-gradient-to-r from-gray-50 to-blue-50\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        transition={{ duration: 0.8 }}\n        viewport={{ once: true }}\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <p className=\"text-gray-600 text-sm font-medium uppercase tracking-wide mb-2\">Trusted by</p>\n            <h3 className=\"text-2xl font-bold text-gray-900\">From startups to Fortune 500</h3>\n            <div className=\"w-24 h-1 bg-gradient-to-r from-blue-500 to-blue-600 mx-auto mt-4 rounded-full\"></div>\n          </motion.div>\n          \n          {clients.length > 0 ? (\n            <motion.div \n              className=\"grid grid-cols-2 md:grid-cols-6 gap-8 items-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              {clients.slice(0, 6).map((client: any, index: number) => (\n                <motion.div \n                  key={client.id} \n                  className=\"text-center group\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  {client.logoUrl ? (\n                    <img \n                      src={client.logoUrl} \n                      alt={client.name}\n                      className=\"h-16 mx-auto object-contain opacity-60 group-hover:opacity-100 transition-all duration-300 filter grayscale group-hover:grayscale-0\"\n                    />\n                  ) : (\n                    <div className=\"h-16 bg-white rounded-xl shadow-lg flex items-center justify-center group-hover:shadow-xl transition-all duration-300\">\n                      <span className=\"text-gray-700 font-bold text-sm px-4\">{client.name}</span>\n                    </div>\n                  )}\n                </motion.div>\n              ))}\n            </motion.div>\n          ) : (\n            <motion.div \n              className=\"grid grid-cols-2 md:grid-cols-6 gap-8 items-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              {['Meta', 'Google', 'Microsoft', 'Amazon', 'Netflix', 'Tesla'].map((name, index) => (\n                <motion.div \n                  key={name}\n                  className=\"text-center group\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <div className=\"h-16 bg-white rounded-xl shadow-lg flex items-center justify-center group-hover:shadow-xl transition-all duration-300\">\n                    <span className=\"text-gray-700 font-bold text-sm px-4\">{name}</span>\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n          )}\n        </div>\n      </motion.section>\n\n      {/* Services Section */}\n      <section id=\"services\" className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">Our Custom Software Development Solutions Expertise</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n              At Pi Tetris, we master the frameworks and technologies that power modern solutions. With our deep domain expertise, we help you modernize, innovate, and maintain your critical software applications. We deliver consistent results regardless of the software development challenge.\n            </p>\n          </motion.div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            {services.slice(0, 7).map((service: any, index: number) => (\n              <motion.div\n                key={service.id}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <ServiceCard service={service} />\n              </motion.div>\n            ))}\n            \n            {/* Call to Action Card */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.7 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-gradient-to-br from-blue-600 via-blue-700 to-blue-800 text-white hover:shadow-2xl transition-all duration-300 overflow-hidden relative\">\n                <div className=\"absolute top-0 right-0 w-32 h-32 bg-white/10 rounded-full -translate-y-16 translate-x-16\"></div>\n                <CardContent className=\"p-8 relative z-10\">\n                  <div className=\"w-16 h-16 bg-white/20 rounded-xl flex items-center justify-center mb-6 backdrop-blur-sm\">\n                    <ArrowRight className=\"w-8 h-8\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold mb-3\">Build Intelligent Apps</h3>\n                  <p className=\"text-blue-100 mb-6 text-lg\">Start Today</p>\n                  <Link href=\"/contact\">\n                    <Button className=\"bg-white text-blue-700 hover:bg-gray-100 font-bold px-6 py-3 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-contact-cta\">\n                      Contact Us <ArrowRight className=\"ml-2 w-4 h-4\" />\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Service Models */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">Our Software Service Models</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n              We are here to accommodate you. From a single pair of hands to entire teams and expert technical advice, we are flexible enough to support you in the ways you need.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4\">\n                  <Users className=\"w-6 h-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Software Staff Augmentation</h3>\n                <p className=\"text-gray-600 mb-4\">We scale your team with the essential personnel your development team needs.</p>\n                <Link href=\"/services/staff-augmentation\">\n                  <span className=\"text-blue-600 font-medium hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-staff-augmentation\">\n                    Staff augmentation →\n                  </span>\n                </Link>\n              </CardContent>\n            </Card>\n\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4\">\n                  <Users className=\"w-6 h-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Dedicated Development Team</h3>\n                <p className=\"text-gray-600 mb-4\">We build dedicated outsourced development teams.</p>\n                <Link href=\"/services/dedicated-team\">\n                  <span className=\"text-blue-600 font-medium hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-dedicated-team\">\n                    Dedicated Team →\n                  </span>\n                </Link>\n              </CardContent>\n            </Card>\n\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4\">\n                  <Award className=\"w-6 h-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Project Delivery & Management</h3>\n                <p className=\"text-gray-600 mb-4\">We write requirements, manage tasks, and deliver your software solution.</p>\n                <Link href=\"/services/project-delivery\">\n                  <span className=\"text-blue-600 font-medium hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-project-delivery\">\n                    Project Delivery →\n                  </span>\n                </Link>\n              </CardContent>\n            </Card>\n\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4\">\n                  <TrendingUp className=\"w-6 h-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Virtual CTO Consulting</h3>\n                <p className=\"text-gray-600 mb-4\">We advise and architect scaleable and secure technology solutions.</p>\n                <Link href=\"/services/virtual-cto\">\n                  <span className=\"text-blue-600 font-medium hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-virtual-cto\">\n                    Virtual CTO →\n                  </span>\n                </Link>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Case Studies */}\n      {featuredCaseStudies.length > 0 && (\n        <section className=\"py-20 bg-white\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">Featured Case Studies</h2>\n              <p className=\"text-xl text-gray-600\">See how we've helped our clients achieve their goals through innovative technology solutions.</p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {featuredCaseStudies.map((caseStudy: any) => (\n                <CaseStudyCard key={caseStudy.id} caseStudy={caseStudy} />\n              ))}\n            </div>\n\n            <motion.div \n              className=\"text-center mt-12\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Link href=\"/portfolio\">\n                <Button className=\"bg-blue-600 text-white hover:bg-blue-700 font-semibold\" data-testid=\"button-view-all-case-studies\">\n                  View All Case Studies\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </motion.div>\n          </div>\n        </section>\n      )}\n\n      {/* Stats Section */}\n      <section className=\"py-20 bg-blue-600 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">We Are A Top-Rated Software Development Company for a Reason</h2>\n            <p className=\"text-xl text-blue-100 max-w-4xl mx-auto\">\n              We deliver highly skilled software engineers, data science professionals, and cloud specialists who consistently solve problems, complete tasks and work to power your projects forward.\n            </p>\n          </motion.div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-4 gap-8 text-center\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"flex items-center justify-center mb-2\">\n                <Star className=\"w-6 h-6 text-yellow-400 mr-2\" />\n                <div className=\"text-4xl font-bold\">4.9</div>\n              </div>\n              <div className=\"text-blue-100\">stars</div>\n              <div className=\"text-sm text-blue-200 mt-1\">Verified Client Rating</div>\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"text-4xl font-bold mb-2\">93%</div>\n              <div className=\"text-blue-100\">Promoter Score</div>\n              <div className=\"text-sm text-blue-200 mt-1\">Client's willing to refer us</div>\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"text-4xl font-bold mb-2\">200%</div>\n              <div className=\"text-blue-100\">Retention Rate</div>\n              <div className=\"text-sm text-blue-200 mt-1\">Annual growth in renewals</div>\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"text-4xl font-bold mb-2\">350+</div>\n              <div className=\"text-blue-100\">Projects</div>\n              <div className=\"text-sm text-blue-200 mt-1\">Successfully delivered</div>\n            </motion.div>\n          </motion.div>\n          \n          {/* Awards and Recognition */}\n          <motion.div \n            className=\"mt-20 bg-gradient-to-r from-blue-50 to-indigo-100 rounded-2xl p-12 shadow-lg\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"text-center mb-12\">\n              <h3 className=\"text-3xl font-bold text-gray-900 mb-4\">Awards and Recognition</h3>\n              <p className=\"text-xl text-gray-700 mb-8\">Industry recognition for our exceptional software development expertise</p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              <motion.div\n                className=\"text-center p-6 bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-16 h-16 bg-gradient-to-br from-yellow-400 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg\">\n                  <Award className=\"w-8 h-8 text-white\" />\n                </div>\n                <h4 className=\"font-bold text-gray-900 mb-2\">Top AI Developer 2024</h4>\n                <p className=\"text-gray-600 font-medium\">Clutch</p>\n              </motion.div>\n              \n              <motion.div\n                className=\"text-center p-6 bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: 0.2 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg\">\n                  <Star className=\"w-8 h-8 text-white\" />\n                </div>\n                <h4 className=\"font-bold text-gray-900 mb-2\">Top Software Developer 2024</h4>\n                <p className=\"text-gray-600 font-medium\">DesignRush</p>\n              </motion.div>\n              \n              <motion.div\n                className=\"text-center p-6 bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: 0.3 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg\">\n                  <TrendingUp className=\"w-8 h-8 text-white\" />\n                </div>\n                <h4 className=\"font-bold text-gray-900 mb-2\">Innovation Company of 2024</h4>\n                <p className=\"text-gray-600 font-medium\">TechBehemoths</p>\n              </motion.div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n      \n      {/* A Few of Our Clients */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">A Few of Our Clients</h2>\n            <p className=\"text-xl text-gray-600\">A selection of our custom software development services customers.</p>\n          </motion.div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            <motion.div\n              className=\"bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border-l-4 border-blue-500\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"w-20 h-20 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-6 shadow-lg\">\n                <span className=\"text-white font-bold text-xl\">AI</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 mb-3 text-lg\">Fortune 500 Tech Company</h3>\n              <p className=\"text-gray-600 mb-6 leading-relaxed\">Developed Generative AI Voice Assistant for Gaming. Built Standalone AI model (NLP) with advanced conversational capabilities.</p>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"px-3 py-1 bg-blue-100 text-blue-700 text-sm font-semibold rounded-full\">AI/ML Development</span>\n                <ArrowRight className=\"w-5 h-5 text-blue-500\" />\n              </div>\n            </motion.div>\n            \n            <motion.div\n              className=\"bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border-l-4 border-green-500\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"w-20 h-20 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-6 shadow-lg\">\n                <span className=\"text-white font-bold text-xl\">WEB</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 mb-3 text-lg\">Healthcare Technology Leader</h3>\n              <p className=\"text-gray-600 mb-6 leading-relaxed\">Designed, Developed, and Deployed Automated Knowledge Discovery Engine with advanced analytics and reporting capabilities.</p>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"px-3 py-1 bg-green-100 text-green-700 text-sm font-semibold rounded-full\">Web Development</span>\n                <ArrowRight className=\"w-5 h-5 text-green-500\" />\n              </div>\n            </motion.div>\n            \n            <motion.div\n              className=\"bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border-l-4 border-purple-500\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"w-20 h-20 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-6 shadow-lg\">\n                <span className=\"text-white font-bold text-xl\">DATA</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 mb-3 text-lg\">Global Media Company</h3>\n              <p className=\"text-gray-600 mb-6 leading-relaxed\">Built scalable real-time data pipelines processing millions of events daily with advanced analytics and machine learning integration for content personalization and recommendation systems.</p>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"px-3 py-1 bg-purple-100 text-purple-700 text-sm font-semibold rounded-full\">Data Engineering</span>\n                <ArrowRight className=\"w-5 h-5 text-purple-500\" />\n              </div>\n            </motion.div>\n            \n            <motion.div\n              className=\"bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"w-16 h-16 bg-orange-100 rounded-lg flex items-center justify-center mb-4\">\n                <span className=\"text-orange-600 font-bold text-lg\">OPS</span>\n              </div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Gaming Industry Pioneer</h3>\n              <p className=\"text-gray-600 text-sm mb-4\">Designed and Developed LiveOps and Customer Care Solution</p>\n              <span className=\"text-orange-600 text-sm font-medium\">DevOps & Cloud</span>\n            </motion.div>\n            \n            <motion.div\n              className=\"bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"w-16 h-16 bg-red-100 rounded-lg flex items-center justify-center mb-4\">\n                <span className=\"text-red-600 font-bold text-lg\">AI</span>\n              </div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Energy Sector Leader</h3>\n              <p className=\"text-gray-600 text-sm mb-4\">Designed Developed AI Based Operational Management Platform</p>\n              <span className=\"text-red-600 text-sm font-medium\">AI/ML Development</span>\n            </motion.div>\n            \n            <motion.div\n              className=\"bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow\"\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"w-16 h-16 bg-indigo-100 rounded-lg flex items-center justify-center mb-4\">\n                <span className=\"text-indigo-600 font-bold text-lg\">CV</span>\n              </div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Manufacturing Giant</h3>\n              <p className=\"text-gray-600 text-sm mb-4\">Data Engineering. Custom Development. Computer Vision: Super Resolution</p>\n              <span className=\"text-indigo-600 text-sm font-medium\">Computer Vision</span>\n            </motion.div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Technology Stack */}\n      {Object.keys(techCategories).length > 0 && (\n        <section id=\"technologies\" className=\"py-20 bg-gradient-to-br from-gray-50 to-blue-50\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div \n              className=\"text-center mb-16\"\n              initial={{ opacity: 0, y: 50 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">We are a Full Stack Software Development Company</h2>\n              <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n                We have built a business focused on assembling talented developers who have mastered the frameworks and technologies that power modern solutions.\n              </p>\n              <div className=\"mt-8\">\n                <Link href=\"/contact\">\n                  <Button className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-start-today\">\n                    Start Today <ArrowRight className=\"ml-2 w-5 h-5\" />\n                  </Button>\n                </Link>\n              </div>\n            </motion.div>\n            \n            <motion.div \n              className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\"\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              {Object.entries(techCategories).map(([categoryName, techs]: [string, any], categoryIndex: number) => (\n                <motion.div \n                  key={categoryName}\n                  className=\"bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\"\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: categoryIndex * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-6 uppercase tracking-wide border-b-2 border-blue-100 pb-3\">{categoryName.replace('-', ' ')}</h3>\n                  <div className=\"space-y-3\">\n                    {(techs as any[]).map((tech: any) => (\n                      <a key={tech.id} href={tech.websiteUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"flex items-center text-gray-700 hover:text-blue-600 transition-all duration-200 group\" data-testid={`link-technology-${tech.slug}`}>\n                        <ArrowRight className=\"w-4 h-4 mr-2 text-gray-400 group-hover:text-blue-500 group-hover:translate-x-1 transition-all\" />\n                        <span className=\"font-medium\">{tech.name}</span>\n                      </a>\n                    ))}\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </div>\n        </section>\n      )}\n\n      {/* Team Section */}\n      {teamMembers.length > 0 && (\n        <section id=\"about\" className=\"py-20 bg-gray-50\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">Meet Our Expert Team</h2>\n              <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n                Our experienced professionals bring deep expertise across diverse technologies and industries to deliver exceptional results for your projects.\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              {teamMembers.slice(0, 4).map((member: any) => (\n                <TeamMemberCard key={member.id} member={member} />\n              ))}\n            </div>\n\n            <motion.div \n              className=\"text-center mt-12\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Link href=\"/about\">\n                <Button variant=\"outline\" className=\"border-2 border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white font-semibold\" data-testid=\"button-meet-full-team\">\n                  Meet the Full Team\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </motion.div>\n          </div>\n        </section>\n      )}\n\n      {/* Testimonials */}\n      {featuredTestimonials.length > 0 && (\n        <section className=\"py-20 bg-white\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">What Our Clients Say</h2>\n              <p className=\"text-xl text-gray-600\">Real feedback from real clients who have transformed their businesses with our solutions.</p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              {featuredTestimonials.map((testimonial: any) => (\n                <TestimonialCard key={testimonial.id} testimonial={testimonial} />\n              ))}\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Contact Section */}\n      <section id=\"contact\" className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Get in Touch</h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Ready to transform your business with AI-driven solutions? Let's discuss your project and how we can help you achieve your goals.\n              </p>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"w-6 h-6 text-blue-600 mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Our Office</h3>\n                    <p className=\"text-gray-600\">123 Technology Drive<br />San Francisco, CA 94105</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"w-6 h-6 text-blue-600 mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Email Us</h3>\n                    <p className=\"text-gray-600\">hello@pitetris.com</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"w-6 h-6 text-blue-600 mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Call Us</h3>\n                    <p className=\"text-gray-600\">+1 (555) 123-4567</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <ContactForm />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":36422},"client/src/pages/Portfolio.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport CaseStudyCard from \"@/components/CaseStudyCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Search } from \"lucide-react\";\n\nexport default function Portfolio() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [selectedTechnology, setSelectedTechnology] = useState<string>(\"\");\n\n  const { data: caseStudies = [], isLoading } = useQuery({\n    queryKey: [\"/api/case-studies\"],\n  });\n\n  const { data: categories = [] } = useQuery({\n    queryKey: [\"/api/categories\", { type: \"case-study\" }],\n  });\n\n  // Extract unique technologies from case studies\n  const allTechnologies = Array.from(\n    new Set(\n      caseStudies.flatMap((cs: any) => cs.technologies || [])\n    )\n  ).sort();\n\n  // Filter case studies\n  const filteredCaseStudies = caseStudies.filter((caseStudy: any) => {\n    const matchesSearch = caseStudy.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         caseStudy.shortDescription?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         caseStudy.clientName?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory = !selectedCategory || selectedCategory === \"all\" || caseStudy.categoryId === selectedCategory;\n    \n    const matchesTechnology = !selectedTechnology || selectedTechnology === \"all\" || \n                             (caseStudy.technologies && caseStudy.technologies.includes(selectedTechnology));\n\n    return matchesSearch && matchesCategory && matchesTechnology;\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">Our Portfolio</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            Explore our successful projects and case studies. See how we've helped businesses across various industries achieve their technology goals through innovative software solutions.\n          </p>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-gray-50 rounded-2xl p-6 mb-12\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n              <Input\n                placeholder=\"Search projects...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n                data-testid=\"input-search-projects\"\n              />\n            </div>\n            \n            <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n              <SelectTrigger data-testid=\"select-category\">\n                <SelectValue placeholder=\"All Categories\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Categories</SelectItem>\n                {categories.map((category: any) => (\n                  <SelectItem key={category.id} value={category.id}>\n                    {category.name}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Select value={selectedTechnology} onValueChange={setSelectedTechnology}>\n              <SelectTrigger data-testid=\"select-technology\">\n                <SelectValue placeholder=\"All Technologies\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Technologies</SelectItem>\n                {allTechnologies.map((tech: string) => (\n                  <SelectItem key={tech} value={tech}>\n                    {tech}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Button \n              variant=\"outline\" \n              onClick={() => {\n                setSearchTerm(\"\");\n                setSelectedCategory(\"\");\n                setSelectedTechnology(\"\");\n              }}\n              data-testid=\"button-clear-filters\"\n            >\n              Clear Filters\n            </Button>\n          </div>\n        </div>\n\n        {/* Results Info */}\n        <div className=\"mb-8\">\n          <p className=\"text-gray-600\">\n            Showing {filteredCaseStudies.length} of {caseStudies.length} projects\n          </p>\n        </div>\n\n        {/* Case Studies Grid */}\n        {filteredCaseStudies.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredCaseStudies.map((caseStudy: any) => (\n              <CaseStudyCard key={caseStudy.id} caseStudy={caseStudy} />\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-16\">\n            <div className=\"text-6xl mb-4\">🔍</div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No projects found</h3>\n            <p className=\"text-gray-600 mb-4\">Try adjusting your search criteria or clearing the filters.</p>\n            <Button \n              className=\"border-2 border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white font-semibold\"\n              onClick={() => {\n                setSearchTerm(\"\");\n                setSelectedCategory(\"\");\n                setSelectedTechnology(\"\");\n              }}\n              data-testid=\"button-clear-all-filters\"\n            >\n              Clear All Filters\n            </Button>\n          </div>\n        )}\n\n        {/* Statistics */}\n        <div className=\"mt-20 bg-gradient-to-r from-blue-600 to-blue-700 rounded-2xl p-12 text-white\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-3xl font-bold mb-4\">Our Track Record</h2>\n            <p className=\"text-xl text-blue-100\">Numbers that speak to our success</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 text-center\">\n            <div>\n              <div className=\"text-4xl font-bold mb-2\">{caseStudies.length}+</div>\n              <div className=\"text-blue-100\">Projects Delivered</div>\n            </div>\n            <div>\n              <div className=\"text-4xl font-bold mb-2\">\n                {Array.from(new Set(caseStudies.map((cs: any) => cs.clientName).filter(Boolean))).length}+\n              </div>\n              <div className=\"text-blue-100\">Happy Clients</div>\n            </div>\n            <div>\n              <div className=\"text-4xl font-bold mb-2\">{allTechnologies.length}+</div>\n              <div className=\"text-blue-100\">Technologies</div>\n            </div>\n            <div>\n              <div className=\"text-4xl font-bold mb-2\">100%</div>\n              <div className=\"text-blue-100\">Client Satisfaction</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7433},"client/src/pages/ServiceDetail.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useParams, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowLeft, ArrowRight, CheckCircle, Users, Award, Zap, Code, Smartphone } from \"lucide-react\";\nimport NotFound from \"@/pages/not-found\";\nimport webDevImage from \"@assets/generated_images/Web_development_professional_illustration_cbd88cc2.png\";\nimport mobileDevImage from \"@assets/generated_images/Mobile_app_development_illustration_30e59701.png\";\n\nexport default function ServiceDetail() {\n  const { slug } = useParams();\n  \n  const { data: service, isLoading } = useQuery({\n    queryKey: [`/api/services/${slug}`],\n    enabled: !!slug,\n  });\n\n  const { data: relatedCaseStudies = [] } = useQuery({\n    queryKey: [\"/api/case-studies\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!service) {\n    return <NotFound />;\n  }\n\n  // Filter case studies related to this service\n  const serviceRelatedCaseStudies = relatedCaseStudies.filter((cs: any) => \n    cs.technologies?.some((tech: string) => \n      service.technologies?.includes(tech)\n    )\n  ).slice(0, 3);\n\n  // Get the appropriate hero image based on service slug\n  const getHeroImage = () => {\n    if (service.slug === 'web-application-development') {\n      return webDevImage;\n    } else if (service.slug === 'mobile-app-development') {\n      return mobileDevImage;\n    }\n    return null;\n  };\n\n  const heroImage = getHeroImage();\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <div className=\"relative bg-gradient-to-br from-blue-900 via-blue-800 to-indigo-900 text-white\">\n        <div className=\"absolute inset-0 bg-black/20\"></div>\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n          {/* Breadcrumb */}\n          <nav className=\"mb-8\">\n            <Link href=\"/services\">\n              <span className=\"inline-flex items-center text-blue-200 hover:text-white transition-colors cursor-pointer\" data-testid=\"link-back-services\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back to Services\n              </span>\n            </Link>\n          </nav>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* Left Content */}\n            <div>\n              <div className=\"flex items-center mb-6\">\n                {service.slug === 'web-application-development' ? (\n                  <Code className=\"w-12 h-12 text-blue-300 mr-4\" />\n                ) : service.slug === 'mobile-app-development' ? (\n                  <Smartphone className=\"w-12 h-12 text-blue-300 mr-4\" />\n                ) : service.iconUrl && (\n                  <img src={service.iconUrl} alt=\"\" className=\"w-12 h-12 mr-4\" />\n                )}\n                <div>\n                  <h1 className=\"text-4xl lg:text-5xl font-bold leading-tight\">{service.title}</h1>\n                </div>\n              </div>\n              <p className=\"text-xl text-blue-100 mb-8 leading-relaxed\">{service.shortDescription}</p>\n              \n              <div className=\"flex flex-wrap gap-4\">\n                <Link href=\"/contact\">\n                  <Button size=\"lg\" className=\"bg-white text-blue-900 hover:bg-blue-50 font-semibold\" data-testid=\"button-get-started\">\n                    Get Started\n                    <ArrowRight className=\"ml-2 h-5 w-5\" />\n                  </Button>\n                </Link>\n                <Link href=\"/portfolio\">\n                  <Button size=\"lg\" variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-blue-900 bg-transparent font-semibold\" data-testid=\"button-view-work\">\n                    View Our Work\n                  </Button>\n                </Link>\n              </div>\n            </div>\n\n            {/* Right Image */}\n            {heroImage && (\n              <div className=\"relative\">\n                <img \n                  src={heroImage} \n                  alt={`${service.title} illustration`} \n                  className=\"w-full h-auto rounded-2xl shadow-2xl\"\n                  data-testid=\"img-service-hero\"\n                />\n                <div className=\"absolute -bottom-4 -right-4 w-24 h-24 bg-blue-500 rounded-full opacity-20\"></div>\n                <div className=\"absolute -top-4 -left-4 w-16 h-16 bg-indigo-400 rounded-full opacity-30\"></div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n\n        {/* Stats Section */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-16\">\n          <Card className=\"text-center p-6 hover:shadow-lg transition-shadow\">\n            <CardContent className=\"pt-0\">\n              <Users className=\"w-12 h-12 text-blue-600 mx-auto mb-4\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">Expert Team</h3>\n              <p className=\"text-gray-600\">Dedicated professionals with years of experience</p>\n            </CardContent>\n          </Card>\n          <Card className=\"text-center p-6 hover:shadow-lg transition-shadow\">\n            <CardContent className=\"pt-0\">\n              <Award className=\"w-12 h-12 text-blue-600 mx-auto mb-4\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">Quality Assured</h3>\n              <p className=\"text-gray-600\">Rigorous testing and quality control processes</p>\n            </CardContent>\n          </Card>\n          <Card className=\"text-center p-6 hover:shadow-lg transition-shadow\">\n            <CardContent className=\"pt-0\">\n              <Zap className=\"w-12 h-12 text-blue-600 mx-auto mb-4\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">Fast Delivery</h3>\n              <p className=\"text-gray-600\">Agile development with rapid iteration cycles</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2\">\n            {/* Service Overview */}\n            <div className=\"mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Service Overview</h2>\n              <Card className=\"p-8 bg-gradient-to-br from-blue-50 to-indigo-50 border-0\">\n                <div className=\"prose prose-lg max-w-none text-gray-700\">\n                  {service.longDescription ? (\n                    <div dangerouslySetInnerHTML={{ __html: service.longDescription }} />\n                  ) : (\n                    <p>{service.shortDescription}</p>\n                  )}\n                </div>\n              </Card>\n            </div>\n\n            {/* Features */}\n            {service.features && service.features.length > 0 && (\n              <div className=\"mb-12\">\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Key Features</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {service.features.map((feature: string, index: number) => (\n                    <Card key={index} className=\"p-4 hover:shadow-md transition-shadow\">\n                      <div className=\"flex items-start\">\n                        <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-4 flex-shrink-0\">\n                          <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                        </div>\n                        <div>\n                          <span className=\"text-gray-800 font-medium\">{feature}</span>\n                        </div>\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Technologies */}\n            {service.technologies && service.technologies.length > 0 && (\n              <div className=\"mb-12\">\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Technologies We Use</h2>\n                <Card className=\"p-6\">\n                  <div className=\"flex flex-wrap gap-3\">\n                    {service.technologies.map((tech: string, index: number) => (\n                      <Badge \n                        key={index} \n                        variant=\"secondary\" \n                        className=\"text-sm py-2 px-4 bg-blue-100 text-blue-800 hover:bg-blue-200 transition-colors\"\n                      >\n                        {tech}\n                      </Badge>\n                    ))}\n                  </div>\n                </Card>\n              </div>\n            )}\n\n            {/* Related Case Studies */}\n            {serviceRelatedCaseStudies.length > 0 && (\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Related Case Studies</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {serviceRelatedCaseStudies.map((caseStudy: any) => (\n                    <Card key={caseStudy.id} className=\"hover:shadow-lg transition-shadow\">\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">{caseStudy.title}</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <p className=\"text-gray-600 mb-4\">{caseStudy.shortDescription}</p>\n                        <Link href={`/case-studies/${caseStudy.slug}`}>\n                          <Button variant=\"outline\" size=\"sm\" data-testid={`button-view-case-study-${caseStudy.slug}`}>\n                            View Case Study\n                            <ArrowRight className=\"ml-2 h-4 w-4\" />\n                          </Button>\n                        </Link>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"space-y-6\">\n              {/* CTA Card */}\n              <Card className=\"sticky top-24 bg-gradient-to-br from-blue-600 to-indigo-700 text-white\">\n                <CardHeader>\n                  <CardTitle className=\"text-white\">Ready to Get Started?</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <p className=\"text-blue-100\">\n                    Let's discuss how our {service.title.toLowerCase()} can help transform your business.\n                  </p>\n                  <Link href=\"/contact\">\n                    <Button className=\"w-full bg-white text-blue-600 hover:bg-blue-50\" data-testid=\"button-get-quote\">\n                      Get a Quote\n                      <ArrowRight className=\"ml-2 h-4 w-4\" />\n                    </Button>\n                  </Link>\n                  <Link href=\"/portfolio\">\n                    <Button variant=\"outline\" className=\"w-full border-white text-white hover:bg-white hover:text-blue-600\" data-testid=\"button-view-portfolio\">\n                      View Our Portfolio\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n\n              {/* Process Card */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Our Process</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold mr-3\">\n                        1\n                      </div>\n                      <span className=\"text-sm font-medium\">Discovery & Planning</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold mr-3\">\n                        2\n                      </div>\n                      <span className=\"text-sm font-medium\">Design & Architecture</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold mr-3\">\n                        3\n                      </div>\n                      <span className=\"text-sm font-medium\">Development & Testing</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold mr-3\">\n                        4\n                      </div>\n                      <span className=\"text-sm font-medium\">Launch & Support</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":13328},"client/src/pages/Services.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport ServiceCard from \"@/components/ServiceCard\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function Services() {\n  const { data: services = [], isLoading } = useQuery({\n    queryKey: [\"/api/services\"],\n  });\n\n  const { data: categories = [] } = useQuery({\n    queryKey: [\"/api/categories\"],\n    enabled: true,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">Our Services</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            We offer comprehensive software development services to help businesses transform their operations through innovative technology solutions. From AI and machine learning to custom software development, our expert team delivers results that drive growth.\n          </p>\n        </div>\n\n        {/* Service Models Overview */}\n        <section className=\"mb-20\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <div className=\"bg-blue-50 rounded-2xl p-8\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Service Models</h2>\n              <p className=\"text-gray-600 mb-6\">\n                We are here to accommodate you. From a single pair of hands to entire teams and expert technical advice, we are flexible enough to support you in the ways you need.\n              </p>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center text-sm text-gray-700\">\n                  <div className=\"w-2 h-2 bg-blue-600 rounded-full mr-3\"></div>\n                  Dedicated Development Teams\n                </div>\n                <div className=\"flex items-center text-sm text-gray-700\">\n                  <div className=\"w-2 h-2 bg-blue-600 rounded-full mr-3\"></div>\n                  Software Staff Augmentation\n                </div>\n                <div className=\"flex items-center text-sm text-gray-700\">\n                  <div className=\"w-2 h-2 bg-blue-600 rounded-full mr-3\"></div>\n                  Project Delivery & Management\n                </div>\n                <div className=\"flex items-center text-sm text-gray-700\">\n                  <div className=\"w-2 h-2 bg-blue-600 rounded-full mr-3\"></div>\n                  Virtual CTO Consulting\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-green-50 rounded-2xl p-8\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Custom Solutions Expertise</h2>\n              <p className=\"text-gray-600 mb-6\">\n                Our technical expertise spans across modern technologies and frameworks, enabling us to build cutting-edge solutions for any industry.\n              </p>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    AI & Machine Learning\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    Web Applications\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    Mobile Development\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    ERP/CRM/CMS\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    Data Engineering\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    Cloud Services\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    AI Chatbots\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-700\">\n                    <div className=\"w-2 h-2 bg-green-600 rounded-full mr-2\"></div>\n                    Custom Software\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Services Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {services.map((service: any) => (\n            <ServiceCard key={service.id} service={service} showFullDescription />\n          ))}\n        </div>\n\n        {/* Service Categories */}\n        {categories.length > 0 && (\n          <section className=\"bg-gray-50 rounded-2xl p-8 mb-16\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">Service Categories</h2>\n            <div className=\"flex flex-wrap gap-3 justify-center\">\n              {categories.map((category: any) => (\n                <Badge key={category.id} variant=\"secondary\" className=\"text-sm py-2 px-4\">\n                  {category.name}\n                </Badge>\n              ))}\n            </div>\n          </section>\n        )}\n\n        {/* Call to Action */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 rounded-2xl p-12 text-center text-white\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Get Started?</h2>\n          <p className=\"text-xl text-blue-100 mb-8 max-w-2xl mx-auto\">\n            Let's discuss your project and how our expert team can help you achieve your technology goals.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" className=\"bg-white text-blue-700 hover:bg-blue-50 font-semibold\" data-testid=\"button-schedule-consultation\">\n                Schedule a Consultation\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/portfolio\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-blue-700 bg-transparent font-semibold\" data-testid=\"button-view-our-work\">\n                View Our Work\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7307},"client/src/pages/Technologies.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  Code, \n  Database, \n  Brain, \n  BarChart, \n  Settings, \n  Star,\n  TrendingUp,\n  Zap,\n  Shield,\n  Cpu,\n  Globe,\n  Layers\n} from \"lucide-react\";\n\nconst techCategories = [\n  { \n    key: 'frontend', \n    label: 'Frontend Development', \n    color: 'bg-green-100 text-green-800',\n    darkColor: 'dark:bg-green-900 dark:text-green-100',\n    icon: Code,\n    description: 'Modern user interfaces and interactive web experiences'\n  },\n  { \n    key: 'backend', \n    label: 'Backend Development', \n    color: 'bg-blue-100 text-blue-800',\n    darkColor: 'dark:bg-blue-900 dark:text-blue-100',\n    icon: Database,\n    description: 'Server-side architecture and API development'\n  },\n  { \n    key: 'ai-ml', \n    label: 'AI & Machine Learning', \n    color: 'bg-purple-100 text-purple-800',\n    darkColor: 'dark:bg-purple-900 dark:text-purple-100',\n    icon: Brain,\n    description: 'Intelligent systems and predictive analytics'\n  },\n  { \n    key: 'data', \n    label: 'Data Engineering', \n    color: 'bg-orange-100 text-orange-800',\n    darkColor: 'dark:bg-orange-900 dark:text-orange-100',\n    icon: BarChart,\n    description: 'Modern data pipelines, real-time analytics, and scalable data infrastructure solutions'\n  },\n  { \n    key: 'devops', \n    label: 'DevOps & Cloud', \n    color: 'bg-red-100 text-red-800',\n    darkColor: 'dark:bg-red-900 dark:text-red-100',\n    icon: Settings,\n    description: 'Infrastructure, deployment, and scalable solutions'\n  },\n];\n\n// Enhanced technology data with details\nconst enhancedTechnologies = {\n  frontend: [\n    { name: 'React', description: 'Component-based UI library', experience: 95, projects: 50, trending: true },\n    { name: 'Vue.js', description: 'Progressive JavaScript framework', experience: 90, projects: 35, trending: true },\n    { name: 'Angular', description: 'Full-featured TypeScript framework', experience: 85, projects: 25, trending: false },\n    { name: 'Next.js', description: 'React framework for production', experience: 92, projects: 40, trending: true },\n    { name: 'TypeScript', description: 'Typed JavaScript at scale', experience: 98, projects: 60, trending: true },\n    { name: 'Tailwind CSS', description: 'Utility-first CSS framework', experience: 95, projects: 45, trending: true },\n  ],\n  backend: [\n    { name: 'Node.js', description: 'JavaScript runtime environment', experience: 95, projects: 55, trending: true },\n    { name: 'Python', description: 'Versatile programming language', experience: 92, projects: 50, trending: true },\n    { name: 'Java', description: 'Enterprise application development', experience: 88, projects: 30, trending: false },\n    { name: 'PostgreSQL', description: 'Advanced relational database', experience: 90, projects: 40, trending: true },\n    { name: 'MongoDB', description: 'NoSQL document database', experience: 85, projects: 35, trending: false },\n    { name: 'Express.js', description: 'Fast Node.js web framework', experience: 93, projects: 45, trending: true },\n  ],\n  'ai-ml': [\n    { name: 'TensorFlow', description: 'Machine learning platform', experience: 88, projects: 25, trending: true },\n    { name: 'PyTorch', description: 'Deep learning framework', experience: 85, projects: 20, trending: true },\n    { name: 'Scikit-learn', description: 'Machine learning library', experience: 90, projects: 30, trending: false },\n    { name: 'OpenAI GPT', description: 'Large language models', experience: 95, projects: 15, trending: true },\n    { name: 'Hugging Face', description: 'NLP model hub', experience: 87, projects: 18, trending: true },\n    { name: 'LangChain', description: 'LLM application framework', experience: 92, projects: 12, trending: true },\n  ],\n  data: [\n    { name: 'Apache Spark', description: 'Big data processing engine', experience: 82, projects: 15, trending: false },\n    { name: 'Pandas', description: 'Data analysis library', experience: 95, projects: 40, trending: true },\n    { name: 'NumPy', description: 'Numerical computing library', experience: 93, projects: 45, trending: false },\n    { name: 'Tableau', description: 'Data visualization platform', experience: 85, projects: 20, trending: false },\n    { name: 'Apache Kafka', description: 'Real-time data streaming', experience: 88, projects: 18, trending: true },\n    { name: 'Elasticsearch', description: 'Search and analytics engine', experience: 87, projects: 22, trending: true },\n  ],\n  devops: [\n    { name: 'Docker', description: 'Container platform', experience: 95, projects: 50, trending: true },\n    { name: 'Kubernetes', description: 'Container orchestration', experience: 88, projects: 25, trending: true },\n    { name: 'AWS', description: 'Cloud computing platform', experience: 92, projects: 45, trending: true },\n    { name: 'Azure', description: 'Microsoft cloud platform', experience: 85, projects: 30, trending: true },\n    { name: 'Jenkins', description: 'Continuous integration tool', experience: 82, projects: 35, trending: false },\n    { name: 'Terraform', description: 'Infrastructure as code', experience: 90, projects: 28, trending: true },\n  ],\n};\n\nexport default function Technologies() {\n  const { data: technologies = [], isLoading } = useQuery({\n    queryKey: ['/api/technologies'],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue mx-auto mb-4\"></div>\n          <p className=\"text-pi-gray\" data-testid=\"text-loading\">Loading technologies...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const groupedTechnologies = techCategories.map(category => ({\n    ...category,\n    technologies: (technologies as any[]).filter((tech: any) => tech.category === category.key)\n  }));\n\n  return (\n    <>\n      <div className=\"pt-20 pb-20 bg-gradient-to-br from-blue-600 via-purple-600 to-blue-800 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black/20\"></div>\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-20 left-10 w-72 h-72 bg-purple-500/20 rounded-full blur-3xl\"></div>\n          <div className=\"absolute bottom-20 right-10 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl\"></div>\n        </div>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center\">\n            <div className=\"inline-flex items-center px-4 py-2 bg-white/10 rounded-full mb-6\">\n              <Cpu className=\"w-5 h-5 mr-2\" />\n              <span className=\"text-sm font-medium\">Technology Excellence</span>\n            </div>\n            <h1 className=\"text-4xl lg:text-6xl font-bold leading-tight mb-6\" data-testid=\"text-page-title\">\n              Our Technology Arsenal\n            </h1>\n            <p className=\"text-xl lg:text-2xl text-blue-100 mb-8 max-w-4xl mx-auto\" data-testid=\"text-page-description\">\n              Cutting-edge technologies and frameworks that drive innovation and deliver exceptional results\n            </p>\n            \n            {/* Stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 max-w-3xl mx-auto mt-12\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-2\">25+</div>\n                <div className=\"text-sm text-blue-200\">Technologies</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-2\">300+</div>\n                <div className=\"text-sm text-blue-200\">Projects Delivered</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-2\">95%</div>\n                <div className=\"text-sm text-blue-200\">Client Satisfaction</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-2\">5+</div>\n                <div className=\"text-sm text-blue-200\">Years Experience</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Technology Categories Overview */}\n      <section className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n              Technology Categories\n            </h2>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n              Explore our expertise across different technology domains\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8\">\n            {techCategories.map((category, index) => {\n              const IconComponent = category.icon;\n              return (\n                <Card key={category.key} className=\"group hover:shadow-xl transition-all duration-300 hover:-translate-y-2 border-l-4\" \n                      style={{borderLeftColor: category.key === 'frontend' ? '#10b981' : category.key === 'backend' ? '#3b82f6' : category.key === 'ai-ml' ? '#8b5cf6' : category.key === 'data' ? '#f59e0b' : '#ef4444'}}>\n                  <CardHeader className=\"text-center pb-4\">\n                    <div className={`w-16 h-16 rounded-full mx-auto mb-4 flex items-center justify-center transition-transform group-hover:scale-110 ${\n                      category.key === 'frontend' ? 'bg-green-100 dark:bg-green-900' :\n                      category.key === 'backend' ? 'bg-blue-100 dark:bg-blue-900' :\n                      category.key === 'ai-ml' ? 'bg-purple-100 dark:bg-purple-900' :\n                      category.key === 'data' ? 'bg-orange-100 dark:bg-orange-900' :\n                      'bg-red-100 dark:bg-red-900'\n                    }`}>\n                      <IconComponent className={`w-8 h-8 ${\n                        category.key === 'frontend' ? 'text-green-600 dark:text-green-400' :\n                        category.key === 'backend' ? 'text-blue-600 dark:text-blue-400' :\n                        category.key === 'ai-ml' ? 'text-purple-600 dark:text-purple-400' :\n                        category.key === 'data' ? 'text-orange-600 dark:text-orange-400' :\n                        'text-red-600 dark:text-red-400'\n                      }`} />\n                    </div>\n                    <CardTitle className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      {category.label}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"text-center\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                      {category.description}\n                    </p>\n                    <div className=\"flex justify-center items-center space-x-2\">\n                      <Badge className={`${category.color} ${category.darkColor} text-xs`}>\n                        {enhancedTechnologies[category.key as keyof typeof enhancedTechnologies]?.length || 0} Technologies\n                      </Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n      \n      {/* Detailed Technology Showcase */}\n      <section className=\"py-20 bg-gray-50 dark:bg-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {techCategories.map((category) => {\n            const categoryTechs = enhancedTechnologies[category.key as keyof typeof enhancedTechnologies] || [];\n            const IconComponent = category.icon;\n            \n            return (\n              <div key={category.key} className=\"mb-20 last:mb-0\">\n                <div className=\"flex items-center mb-12\">\n                  <div className={`p-3 rounded-lg mr-4 ${\n                    category.key === 'frontend' ? 'bg-green-100 dark:bg-green-900' :\n                    category.key === 'backend' ? 'bg-blue-100 dark:bg-blue-900' :\n                    category.key === 'ai-ml' ? 'bg-purple-100 dark:bg-purple-900' :\n                    category.key === 'data' ? 'bg-orange-100 dark:bg-orange-900' :\n                    'bg-red-100 dark:bg-red-900'\n                  }`}>\n                    <IconComponent className={`w-8 h-8 ${\n                      category.key === 'frontend' ? 'text-green-600 dark:text-green-400' :\n                      category.key === 'backend' ? 'text-blue-600 dark:text-blue-400' :\n                      category.key === 'ai-ml' ? 'text-purple-600 dark:text-purple-400' :\n                      category.key === 'data' ? 'text-orange-600 dark:text-orange-400' :\n                      'text-red-600 dark:text-red-400'\n                    }`} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                      {category.label}\n                    </h3>\n                    <p className=\"text-lg text-gray-600 dark:text-gray-300 mt-1\">\n                      {category.description}\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {categoryTechs.map((tech, techIndex) => (\n                    <Card key={techIndex} className=\"group hover:shadow-lg transition-all duration-300 bg-white dark:bg-gray-900 border hover:border-blue-200 dark:hover:border-blue-800\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-start justify-between mb-4\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                                {tech.name}\n                              </h4>\n                              {tech.trending && (\n                                <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 text-xs px-2 py-1\">\n                                  <TrendingUp className=\"w-3 h-3 mr-1\" />\n                                  Trending\n                                </Badge>\n                              )}\n                            </div>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                              {tech.description}\n                            </p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"space-y-3\">\n                          <div>\n                            <div className=\"flex justify-between items-center mb-1\">\n                              <span className=\"text-xs font-medium text-gray-700 dark:text-gray-300\">Expertise Level</span>\n                              <span className=\"text-xs font-semibold text-gray-900 dark:text-white\">{tech.experience}%</span>\n                            </div>\n                            <Progress value={tech.experience} className=\"h-2\" />\n                          </div>\n                          \n                          <div className=\"flex justify-between items-center pt-2 border-t border-gray-100 dark:border-gray-700\">\n                            <div className=\"flex items-center space-x-1 text-gray-600 dark:text-gray-400\">\n                              <Layers className=\"w-4 h-4\" />\n                              <span className=\"text-xs\">{tech.projects} Projects</span>\n                            </div>\n                            <div className=\"flex items-center space-x-1\">\n                              {[...Array(5)].map((_, i) => (\n                                <Star \n                                  key={i} \n                                  className={`w-3 h-3 ${\n                                    i < Math.floor(tech.experience / 20) \n                                      ? 'text-yellow-400 fill-current' \n                                      : 'text-gray-300 dark:text-gray-600'\n                                  }`} \n                                />\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n\n      {/* Technology Overview & CTA */}\n      <section className=\"py-20 bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-8 md:p-12 text-center text-white\">\n            <div className=\"max-w-3xl mx-auto\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n                Ready to Transform Your Ideas?\n              </h2>\n              <p className=\"text-lg md:text-xl text-blue-100 mb-8\">\n                Our technology expertise combined with innovative thinking delivers solutions that drive business growth and user satisfaction.\n              </p>\n              \n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-8\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl md:text-3xl font-bold mb-2\">25+</div>\n                  <div className=\"text-sm text-blue-200\">Technologies</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl md:text-3xl font-bold mb-2\">300+</div>\n                  <div className=\"text-sm text-blue-200\">Projects</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl md:text-3xl font-bold mb-2\">95%</div>\n                  <div className=\"text-sm text-blue-200\">Success Rate</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl md:text-3xl font-bold mb-2\">24/7</div>\n                  <div className=\"text-sm text-blue-200\">Support</div>\n                </div>\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button className=\"bg-white text-blue-600 px-8 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors flex items-center justify-center\">\n                  <Zap className=\"w-5 h-5 mr-2\" />\n                  Start Your Project\n                </button>\n                <button className=\"border border-white/30 text-white px-8 py-3 rounded-lg font-semibold hover:bg-white/10 transition-colors flex items-center justify-center\">\n                  <Globe className=\"w-5 h-5 mr-2\" />\n                  View Portfolio\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":19313},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground text-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1917},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/admin/AdminHome.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Users, \n  FileText, \n  MessageSquare, \n  Star, \n  BarChart3, \n  Calendar,\n  TrendingUp,\n  Mail\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function AdminHome() {\n  const { data: services = [] } = useQuery({\n    queryKey: [\"/api/services\"],\n  });\n\n  const { data: caseStudies = [] } = useQuery({\n    queryKey: [\"/api/case-studies\"],\n  });\n\n  const { data: teamMembers = [] } = useQuery({\n    queryKey: [\"/api/team\"],\n  });\n\n  const { data: testimonials = [] } = useQuery({\n    queryKey: [\"/api/testimonials\"],\n  });\n\n  const { data: contactSubmissions = [] } = useQuery({\n    queryKey: [\"/api/admin/contact-submissions\"],\n  });\n\n  const unreadSubmissions = contactSubmissions.filter((sub: any) => !sub.isRead).length;\n  const featuredCaseStudies = caseStudies.filter((cs: any) => cs.isFeatured).length;\n  const featuredTestimonials = testimonials.filter((t: any) => t.isFeatured).length;\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Admin Dashboard</h1>\n        <p className=\"text-gray-600\">Welcome to the Pi Tetris content management system.</p>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Services</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{services.length}</p>\n              </div>\n              <FileText className=\"h-8 w-8 text-blue-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Case Studies</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{caseStudies.length}</p>\n                <p className=\"text-xs text-green-600\">{featuredCaseStudies} featured</p>\n              </div>\n              <BarChart3 className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Team Members</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{teamMembers.length}</p>\n              </div>\n              <Users className=\"h-8 w-8 text-purple-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Contact Forms</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{contactSubmissions.length}</p>\n                {unreadSubmissions > 0 && (\n                  <p className=\"text-xs text-red-600\">{unreadSubmissions} unread</p>\n                )}\n              </div>\n              <Mail className=\"h-8 w-8 text-orange-600\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Quick Actions</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Link href=\"/admin/case-studies\">\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-manage-case-studies\">\n                <FileText className=\"mr-2 h-4 w-4\" />\n                Manage Case Studies\n              </Button>\n            </Link>\n            <Link href=\"/admin/team\">\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-manage-team\">\n                <Users className=\"mr-2 h-4 w-4\" />\n                Manage Team Members\n              </Button>\n            </Link>\n            <Link href=\"/admin/testimonials\">\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-manage-testimonials\">\n                <Star className=\"mr-2 h-4 w-4\" />\n                Manage Testimonials\n              </Button>\n            </Link>\n            <Link href=\"/admin/categories\">\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-manage-categories\">\n                <BarChart3 className=\"mr-2 h-4 w-4\" />\n                Manage Categories\n              </Button>\n            </Link>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Activity</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center\">\n                <Calendar className=\"h-4 w-4 text-gray-400 mr-3\" />\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">System started</p>\n                  <p className=\"text-xs text-gray-500\">Content management system is ready</p>\n                </div>\n              </div>\n              {unreadSubmissions > 0 && (\n                <div className=\"flex items-center\">\n                  <MessageSquare className=\"h-4 w-4 text-orange-500 mr-3\" />\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm text-gray-900\">New contact submissions</p>\n                    <p className=\"text-xs text-gray-500\">{unreadSubmissions} unread messages</p>\n                  </div>\n                </div>\n              )}\n              <div className=\"flex items-center\">\n                <TrendingUp className=\"h-4 w-4 text-green-500 mr-3\" />\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">Content ready for management</p>\n                  <p className=\"text-xs text-gray-500\">All sections available for editing</p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Content Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <FileText className=\"mr-2 h-5 w-5\" />\n              Case Studies\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Total</span>\n                <span className=\"text-sm font-medium\">{caseStudies.length}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Featured</span>\n                <span className=\"text-sm font-medium\">{featuredCaseStudies}</span>\n              </div>\n              <div className=\"pt-2\">\n                <Link href=\"/admin/case-studies\">\n                  <Button size=\"sm\" variant=\"outline\" className=\"w-full\" data-testid=\"button-edit-case-studies\">\n                    Edit Case Studies\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Star className=\"mr-2 h-5 w-5\" />\n              Testimonials\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Total</span>\n                <span className=\"text-sm font-medium\">{testimonials.length}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Featured</span>\n                <span className=\"text-sm font-medium\">{featuredTestimonials}</span>\n              </div>\n              <div className=\"pt-2\">\n                <Link href=\"/admin/testimonials\">\n                  <Button size=\"sm\" variant=\"outline\" className=\"w-full\" data-testid=\"button-edit-testimonials\">\n                    Edit Testimonials\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Users className=\"mr-2 h-5 w-5\" />\n              Team\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Active Members</span>\n                <span className=\"text-sm font-medium\">{teamMembers.length}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Departments</span>\n                <span className=\"text-sm font-medium\">\n                  {Array.from(new Set(teamMembers.map((m: any) => m.role?.split(' ')[0]))).length}\n                </span>\n              </div>\n              <div className=\"pt-2\">\n                <Link href=\"/admin/team\">\n                  <Button size=\"sm\" variant=\"outline\" className=\"w-full\" data-testid=\"button-edit-team\">\n                    Edit Team\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9972},"client/src/pages/admin/AdminLogin.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Shield, Key, Users, Mail, LogIn } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport default function AdminLogin() {\n  const [email, setEmail] = useState('admin@pitetris.com');\n  const [password, setPassword] = useState('');\n  const [showDirectLogin, setShowDirectLogin] = useState(true); // Show direct login by default\n  const { toast } = useToast();\n  \n  const handleReplitLogin = () => {\n    // Store redirect path for after Replit auth\n    sessionStorage.setItem('redirectAfterAuth', '/admin');\n    window.location.href = \"/api/login\";\n  };\n  \n  const directLoginMutation = useMutation({\n    mutationFn: async ({ email, password }: { email: string; password: string }) => {\n      const response = await fetch('/api/admin/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Login failed' }));\n        throw new Error(errorData.message || 'Login failed');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Login Successful\",\n        description: \"Redirecting to admin panel...\",\n      });\n      // Reload to trigger auth check\n      window.location.reload();\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Login Failed\", \n        description: error.message || \"Invalid credentials or not an admin\",\n        variant: \"destructive\",\n      });\n    }\n  });\n  \n  const handleDirectLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email.trim() || !password.trim()) {\n      toast({\n        title: \"All Fields Required\",\n        description: \"Please enter both email and password\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    directLoginMutation.mutate({ email, password });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <Shield className=\"mx-auto h-12 w-12 text-blue-600\" />\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">Pi Tetris Admin Portal</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Secure access to content management system\n          </p>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-center\">Admin Access Required</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"text-center\">\n              <p className=\"text-gray-600 mb-6\">\n                This area is restricted to authorized administrators only. \n                Please authenticate to access the content management system.\n              </p>\n              \n              {!showDirectLogin ? (\n                <div className=\"space-y-4\">\n                  <Button \n                    onClick={handleReplitLogin}\n                    className=\"w-full\"\n                    size=\"lg\"\n                    data-testid=\"button-replit-login\"\n                  >\n                    <Key className=\"mr-2 h-4 w-4\" />\n                    Login with Replit Auth\n                  </Button>\n                  \n                  <div className=\"text-center\">\n                    <button\n                      onClick={() => setShowDirectLogin(true)}\n                      className=\"text-sm text-blue-600 hover:text-blue-800 underline\"\n                      data-testid=\"button-show-direct-login\"\n                    >\n                      Use Admin Credentials\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <form onSubmit={handleDirectLogin} className=\"space-y-4\">\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n                    <div className=\"text-sm text-blue-800\">\n                      <strong>Admin Login:</strong><br/>\n                      Use your admin credentials to access the content management system.\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-left\">\n                    <Label htmlFor=\"email\">Admin Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      placeholder=\"admin@pitetris.com\"\n                      className=\"mt-1\"\n                      data-testid=\"input-admin-email\"\n                    />\n                  </div>\n                  \n                  <div className=\"text-left\">\n                    <Label htmlFor=\"password\">Admin Password</Label>\n                    <Input\n                      id=\"password\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      placeholder=\"Enter admin password\"\n                      className=\"mt-1\"\n                      data-testid=\"input-admin-password\"\n                    />\n                  </div>\n                  \n                  <Button \n                    type=\"submit\"\n                    className=\"w-full\"\n                    size=\"lg\"\n                    disabled={directLoginMutation.isPending}\n                    data-testid=\"button-direct-login\"\n                  >\n                    {directLoginMutation.isPending ? (\n                      <>Loading...</>\n                    ) : (\n                      <>\n                        <LogIn className=\"mr-2 h-4 w-4\" />\n                        Login as Admin\n                      </>\n                    )}\n                  </Button>\n                  \n                  <div className=\"text-center\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowDirectLogin(false)}\n                      className=\"text-sm text-gray-600 hover:text-gray-800 underline\"\n                      data-testid=\"button-back-to-replit\"\n                    >\n                      Use Replit Auth Instead\n                    </button>\n                  </div>\n                </form>\n              )}\n            </div>\n\n            <div className=\"border-t border-gray-200 pt-6\">\n              <div className=\"text-center\">\n                <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Admin Portal Features</h3>\n                <div className=\"space-y-2 text-sm text-gray-600\">\n                  <div className=\"flex items-center justify-center\">\n                    <Users className=\"h-4 w-4 mr-2\" />\n                    Content Management\n                  </div>\n                  <div className=\"flex items-center justify-center\">\n                    <Shield className=\"h-4 w-4 mr-2\" />\n                    Secure File Upload\n                  </div>\n                  <div className=\"flex items-center justify-center\">\n                    <Key className=\"h-4 w-4 mr-2\" />\n                    Category Management\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500\">\n            This system is protected by enterprise-grade security measures.\n            All access attempts are logged and monitored.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7998},"client/src/pages/admin/CaseStudyManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport RichTextEditor from \"@/components/RichTextEditor\";\nimport { SimpleFileUpload } from \"@/components/SimpleFileUpload\";\nimport { Plus, Edit, Trash2, Star, Eye, EyeOff } from \"lucide-react\";\n\nexport default function CaseStudyManager() {\n  const [editingItem, setEditingItem] = useState<any>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: caseStudies = [] } = useQuery({\n    queryKey: [\"/api/case-studies\"],\n  });\n\n  const { data: categories = [] } = useQuery({\n    queryKey: [\"/api/categories\"],\n    queryFn: async () => {\n      const response = await fetch('/api/categories?type=case-study');\n      if (!response.ok) throw new Error('Failed to fetch categories');\n      return response.json();\n    },\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/admin/case-studies\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/case-studies\"] });\n      setIsCreating(false);\n      setEditingItem(null);\n      toast({ title: \"Case study created successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error creating case study\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      return apiRequest(\"PUT\", `/api/admin/case-studies/${id}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/case-studies\"] });\n      setEditingItem(null);\n      toast({ title: \"Case study updated successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error updating case study\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/case-studies/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/case-studies\"] });\n      toast({ title: \"Case study deleted successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error deleting case study\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleCreate = () => {\n    setIsCreating(true);\n    setEditingItem({\n      title: \"\",\n      slug: \"\",\n      clientName: \"\",\n      shortDescription: \"\",\n      longDescription: \"\",\n      challenge: \"\",\n      solution: \"\",\n      results: \"\",\n      imageUrl: \"\",\n      categoryId: \"\",\n      technologies: [],\n      tags: [],\n      projectDuration: \"\",\n      teamSize: 1,\n      sortOrder: 0,\n      isFeatured: false,\n      isActive: true,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingItem) return;\n\n    // Parse technologies and tags from comma-separated strings\n    const processedData = {\n      ...editingItem,\n      categoryId: editingItem.categoryId === '' ? null : editingItem.categoryId,\n      technologies: typeof editingItem.technologies === 'string' \n        ? editingItem.technologies.split(',').map((t: string) => t.trim()).filter(Boolean)\n        : editingItem.technologies || [],\n      tags: typeof editingItem.tags === 'string'\n        ? editingItem.tags.split(',').map((t: string) => t.trim()).filter(Boolean)\n        : editingItem.tags || [],\n    };\n\n    if (isCreating) {\n      createMutation.mutate(processedData);\n    } else {\n      updateMutation.mutate({ id: editingItem.id, data: processedData });\n    }\n  };\n\n  const handleImageUpload = async (file: File) => {\n    try {\n      // Get upload URL\n      const response = await apiRequest(\"POST\", \"/api/objects/upload\");\n      const data = await response.json();\n      \n      // Upload file directly\n      const uploadResponse = await fetch(data.uploadURL, {\n        method: 'PUT',\n        body: file,\n        headers: {\n          'Content-Type': file.type\n        }\n      });\n      \n      if (uploadResponse.ok) {\n        // Extract clean URL without query parameters\n        const cleanUrl = data.uploadURL.split('?')[0];\n        setEditingItem({ ...editingItem, imageUrl: cleanUrl });\n        toast({ title: \"Image uploaded successfully\" });\n      } else {\n        throw new Error('Upload failed');\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      toast({ \n        title: \"Upload failed\", \n        description: \"Please try again\",\n        variant: \"destructive\" \n      });\n    }\n  };\n\n  const handleRemoveImage = () => {\n    setEditingItem({ ...editingItem, imageUrl: \"\" });\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Case Study Manager</h1>\n        <p className=\"text-gray-600\">Manage portfolio case studies and project showcases.</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <CardTitle>Case Studies</CardTitle>\n            <Button onClick={handleCreate} data-testid=\"button-add-case-study\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add Case Study\n            </Button>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n              {caseStudies.map((caseStudy: any) => (\n                <div key={caseStudy.id} className=\"flex items-start justify-between p-4 border rounded-lg\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h3 className=\"font-medium\">{caseStudy.title}</h3>\n                      {caseStudy.isFeatured && <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />}\n                    </div>\n                    {caseStudy.clientName && (\n                      <p className=\"text-sm text-blue-600 mb-1\">Client: {caseStudy.clientName}</p>\n                    )}\n                    <p className=\"text-sm text-gray-600 mb-2\">{caseStudy.shortDescription}</p>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={caseStudy.isActive ? \"default\" : \"secondary\"}>\n                        {caseStudy.isActive ? \"Active\" : \"Inactive\"}\n                      </Badge>\n                      {caseStudy.isFeatured && (\n                        <Badge variant=\"outline\" className=\"text-yellow-600 border-yellow-600\">\n                          Featured\n                        </Badge>\n                      )}\n                      {caseStudy.isActive ? (\n                        <Eye className=\"w-4 h-4 text-green-600\" />\n                      ) : (\n                        <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2 ml-4\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setEditingItem(caseStudy)}\n                      data-testid={`button-edit-case-study-${caseStudy.id}`}\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"destructive\"\n                      onClick={() => deleteMutation.mutate(caseStudy.id)}\n                      data-testid={`button-delete-case-study-${caseStudy.id}`}\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {editingItem && (\n          <Card>\n            <CardHeader>\n              <CardTitle>{isCreating ? \"Create Case Study\" : \"Edit Case Study\"}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"title\">Title</Label>\n                    <Input\n                      id=\"title\"\n                      value={editingItem.title || \"\"}\n                      onChange={(e) => setEditingItem({ ...editingItem, title: e.target.value })}\n                      required\n                      data-testid=\"input-case-study-title\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"slug\">Slug</Label>\n                    <Input\n                      id=\"slug\"\n                      value={editingItem.slug || \"\"}\n                      onChange={(e) => setEditingItem({ ...editingItem, slug: e.target.value })}\n                      required\n                      data-testid=\"input-case-study-slug\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"clientName\">Client Name</Label>\n                  <Input\n                    id=\"clientName\"\n                    value={editingItem.clientName || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, clientName: e.target.value })}\n                    data-testid=\"input-case-study-client\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"shortDescription\">Short Description</Label>\n                  <Textarea\n                    id=\"shortDescription\"\n                    value={editingItem.shortDescription || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, shortDescription: e.target.value })}\n                    data-testid=\"textarea-case-study-short-description\"\n                  />\n                </div>\n\n                <div>\n                  <Label>Project Image</Label>\n                  <div className=\"mt-2\">\n                    <SimpleFileUpload\n                      onFileSelect={handleImageUpload}\n                      currentUrl={editingItem.imageUrl}\n                      onRemove={handleRemoveImage}\n                      maxSize={10}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"longDescription\">Detailed Description</Label>\n                  <RichTextEditor\n                    value={editingItem.longDescription || \"\"}\n                    onChange={(value) => setEditingItem({ ...editingItem, longDescription: value })}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"challenge\">Challenge</Label>\n                  <RichTextEditor\n                    value={editingItem.challenge || \"\"}\n                    onChange={(value) => setEditingItem({ ...editingItem, challenge: value })}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"solution\">Solution</Label>\n                  <RichTextEditor\n                    value={editingItem.solution || \"\"}\n                    onChange={(value) => setEditingItem({ ...editingItem, solution: value })}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"results\">Results</Label>\n                  <RichTextEditor\n                    value={editingItem.results || \"\"}\n                    onChange={(value) => setEditingItem({ ...editingItem, results: value })}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"projectDuration\">Project Duration</Label>\n                    <Input\n                      id=\"projectDuration\"\n                      value={editingItem.projectDuration || \"\"}\n                      onChange={(e) => setEditingItem({ ...editingItem, projectDuration: e.target.value })}\n                      placeholder=\"e.g., 6 months\"\n                      data-testid=\"input-case-study-duration\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"teamSize\">Team Size</Label>\n                    <Input\n                      id=\"teamSize\"\n                      type=\"number\"\n                      min=\"1\"\n                      value={editingItem.teamSize || 1}\n                      onChange={(e) => setEditingItem({ ...editingItem, teamSize: parseInt(e.target.value) })}\n                      data-testid=\"input-case-study-team-size\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"technologies\">Technologies (comma-separated)</Label>\n                  <Input\n                    id=\"technologies\"\n                    value={Array.isArray(editingItem.technologies) ? editingItem.technologies.join(', ') : editingItem.technologies || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, technologies: e.target.value })}\n                    placeholder=\"React, Node.js, PostgreSQL\"\n                    data-testid=\"input-case-study-technologies\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"tags\">Tags (comma-separated)</Label>\n                  <Input\n                    id=\"tags\"\n                    value={Array.isArray(editingItem.tags) ? editingItem.tags.join(', ') : editingItem.tags || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, tags: e.target.value })}\n                    placeholder=\"AI, Web Development, Enterprise\"\n                    data-testid=\"input-case-study-tags\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"category\">Category</Label>\n                  <Select \n                    value={editingItem.categoryId || \"\"} \n                    onValueChange={(value) => setEditingItem({ ...editingItem, categoryId: value })}\n                  >\n                    <SelectTrigger data-testid=\"select-case-study-category\">\n                      <SelectValue placeholder=\"Select category\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"none\">No category</SelectItem>\n                      {categories.map((category: any) => (\n                        <SelectItem key={category.id} value={category.id}>\n                          {category.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"isFeatured\"\n                      checked={editingItem.isFeatured || false}\n                      onCheckedChange={(checked) => setEditingItem({ ...editingItem, isFeatured: checked })}\n                      data-testid=\"switch-case-study-featured\"\n                    />\n                    <Label htmlFor=\"isFeatured\">Featured</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"isActive\"\n                      checked={editingItem.isActive || false}\n                      onCheckedChange={(checked) => setEditingItem({ ...editingItem, isActive: checked })}\n                      data-testid=\"switch-case-study-active\"\n                    />\n                    <Label htmlFor=\"isActive\">Active</Label>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button type=\"submit\" disabled={createMutation.isPending || updateMutation.isPending} data-testid=\"button-save-case-study\">\n                    {isCreating ? \"Create Case Study\" : \"Update Case Study\"}\n                  </Button>\n                  <Button type=\"button\" variant=\"outline\" onClick={() => { setEditingItem(null); setIsCreating(false); }} data-testid=\"button-cancel-case-study\">\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":17154},"client/src/pages/admin/CategoryManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Plus, Edit, Trash2, Eye, EyeOff, Folder } from \"lucide-react\";\n\nexport default function CategoryManager() {\n  const [editingItem, setEditingItem] = useState<any>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: categories = [] } = useQuery({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/admin/categories\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      setIsCreating(false);\n      setEditingItem(null);\n      toast({ title: \"Category created successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error creating category\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      return apiRequest(\"PUT\", `/api/admin/categories/${id}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      setEditingItem(null);\n      toast({ title: \"Category updated successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error updating category\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/categories/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      toast({ title: \"Category deleted successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error deleting category\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleCreate = () => {\n    setIsCreating(true);\n    setEditingItem({\n      name: \"\",\n      slug: \"\",\n      description: \"\",\n      type: \"service\",\n      sortOrder: 0,\n      isActive: true,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingItem) return;\n\n    if (isCreating) {\n      createMutation.mutate(editingItem);\n    } else {\n      updateMutation.mutate({ id: editingItem.id, data: editingItem });\n    }\n  };\n\n  const categoryTypes = [\n    { value: \"service\", label: \"Service\" },\n    { value: \"case-study\", label: \"Case Study\" },\n    { value: \"technology\", label: \"Technology\" },\n    { value: \"blog\", label: \"Blog\" },\n    { value: \"other\", label: \"Other\" },\n  ];\n\n  const getCategoryTypeColor = (type: string) => {\n    switch (type) {\n      case \"service\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"case-study\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      case \"technology\":\n        return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"blog\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  // Group categories by type\n  const categoriesByType = categories.reduce((acc: any, category: any) => {\n    const type = category.type || 'other';\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(category);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Category Manager</h1>\n        <p className=\"text-gray-600\">Organize content with categories for services, case studies, and technologies.</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <CardTitle>Categories</CardTitle>\n            <Button onClick={handleCreate} data-testid=\"button-add-category\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add Category\n            </Button>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-6 max-h-96 overflow-y-auto\">\n              {Object.entries(categoriesByType).map(([type, typeCategories]: [string, any]) => (\n                <div key={type}>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3 capitalize flex items-center\">\n                    <Folder className=\"w-5 h-5 mr-2\" />\n                    {type.replace('-', ' ')} Categories\n                  </h3>\n                  <div className=\"space-y-3\">\n                    {typeCategories.map((category: any) => (\n                      <div key={category.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <h4 className=\"font-medium\">{category.name}</h4>\n                            <Badge className={getCategoryTypeColor(category.type)}>\n                              {category.type}\n                            </Badge>\n                          </div>\n                          <p className=\"text-sm text-gray-600 mb-2\">{category.description}</p>\n                          <div className=\"flex items-center gap-2\">\n                            <code className=\"text-xs bg-gray-100 px-2 py-1 rounded\">{category.slug}</code>\n                            <Badge variant={category.isActive ? \"default\" : \"secondary\"}>\n                              {category.isActive ? \"Active\" : \"Inactive\"}\n                            </Badge>\n                            {category.isActive ? (\n                              <Eye className=\"w-4 h-4 text-green-600\" />\n                            ) : (\n                              <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex gap-2 ml-4\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setEditingItem(category)}\n                            data-testid={`button-edit-category-${category.id}`}\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"destructive\"\n                            onClick={() => deleteMutation.mutate(category.id)}\n                            data-testid={`button-delete-category-${category.id}`}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              \n              {categories.length === 0 && (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <Folder className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n                  <p>No categories created yet.</p>\n                  <p className=\"text-sm\">Create your first category to organize content.</p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {editingItem && (\n          <Card>\n            <CardHeader>\n              <CardTitle>{isCreating ? \"Create Category\" : \"Edit Category\"}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                  <Label htmlFor=\"name\">Category Name</Label>\n                  <Input\n                    id=\"name\"\n                    value={editingItem.name || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, name: e.target.value })}\n                    required\n                    placeholder=\"e.g., AI & Machine Learning\"\n                    data-testid=\"input-category-name\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"slug\">URL Slug</Label>\n                  <Input\n                    id=\"slug\"\n                    value={editingItem.slug || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, slug: e.target.value })}\n                    required\n                    placeholder=\"e.g., ai-machine-learning\"\n                    data-testid=\"input-category-slug\"\n                  />\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Used in URLs. Should be lowercase with hyphens instead of spaces.\n                  </p>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"description\">Description</Label>\n                  <Textarea\n                    id=\"description\"\n                    value={editingItem.description || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, description: e.target.value })}\n                    rows={3}\n                    placeholder=\"Brief description of this category...\"\n                    data-testid=\"textarea-category-description\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"type\">Category Type</Label>\n                  <Select \n                    value={editingItem.type || \"\"} \n                    onValueChange={(value) => setEditingItem({ ...editingItem, type: value })}\n                  >\n                    <SelectTrigger data-testid=\"select-category-type\">\n                      <SelectValue placeholder=\"Select category type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {categoryTypes.map((type) => (\n                        <SelectItem key={type.value} value={type.value}>\n                          {type.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Determines where this category can be used in the system.\n                  </p>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"sortOrder\">Sort Order</Label>\n                  <Input\n                    id=\"sortOrder\"\n                    type=\"number\"\n                    value={editingItem.sortOrder || 0}\n                    onChange={(e) => setEditingItem({ ...editingItem, sortOrder: parseInt(e.target.value) })}\n                    data-testid=\"input-category-sort-order\"\n                  />\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Lower numbers appear first. Use 0 for default ordering.\n                  </p>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"isActive\"\n                    checked={editingItem.isActive || false}\n                    onCheckedChange={(checked) => setEditingItem({ ...editingItem, isActive: checked })}\n                    data-testid=\"switch-category-active\"\n                  />\n                  <Label htmlFor=\"isActive\">Active</Label>\n                  <p className=\"text-sm text-gray-500 ml-2\">\n                    Only active categories are visible to users.\n                  </p>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button type=\"submit\" disabled={createMutation.isPending || updateMutation.isPending} data-testid=\"button-save-category\">\n                    {isCreating ? \"Create Category\" : \"Update Category\"}\n                  </Button>\n                  <Button type=\"button\" variant=\"outline\" onClick={() => { setEditingItem(null); setIsCreating(false); }} data-testid=\"button-cancel-category\">\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n\n      {/* Category Usage Overview */}\n      <Card className=\"mt-8\">\n        <CardHeader>\n          <CardTitle>Category Usage Overview</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            {categoryTypes.map((type) => {\n              const typeCategories = categoriesByType[type.value] || [];\n              const activeCount = typeCategories.filter((c: any) => c.isActive).length;\n              \n              return (\n                <div key={type.value} className=\"text-center p-4 border rounded-lg\">\n                  <div className={`w-12 h-12 rounded-full mx-auto mb-2 flex items-center justify-center ${getCategoryTypeColor(type.value)}`}>\n                    <Folder className=\"w-6 h-6\" />\n                  </div>\n                  <h3 className=\"font-semibold\">{type.label}</h3>\n                  <p className=\"text-sm text-gray-600\">\n                    {activeCount} active / {typeCategories.length} total\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":14000},"client/src/pages/admin/ClientManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport AdminLayout from \"@/components/AdminLayout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { ObjectUploader } from \"@/components/ObjectUploader\";\nimport { Plus, Edit, Trash2, Save, Building, Image } from \"lucide-react\";\n\nexport default function ClientManager() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    logoUrl: \"\",\n    website: \"\",\n    description: \"\",\n    isActive: true,\n    isFeatured: false,\n    sortOrder: 0\n  });\n\n  const { data: clients, isLoading } = useQuery({\n    queryKey: [\"/api/admin/clients\"],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: typeof formData) => {\n      await apiRequest(\"POST\", \"/api/admin/clients\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/clients\"] });\n      resetForm();\n      toast({\n        title: \"Client created successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error creating client\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: typeof formData) => {\n      await apiRequest(\"PUT\", `/api/admin/clients/${editingId}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/clients\"] });\n      resetForm();\n      toast({\n        title: \"Client updated successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error updating client\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/admin/clients/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/clients\"] });\n      toast({\n        title: \"Client deleted successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error deleting client\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      logoUrl: \"\",\n      website: \"\",\n      description: \"\",\n      isActive: true,\n      isFeatured: false,\n      sortOrder: 0\n    });\n    setEditingId(null);\n    setShowForm(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editingId) {\n      updateMutation.mutate(formData);\n    } else {\n      createMutation.mutate(formData);\n    }\n  };\n\n  const startEdit = (client: any) => {\n    setEditingId(client.id);\n    setFormData({\n      name: client.name || \"\",\n      logoUrl: client.logoUrl || \"\",\n      website: client.website || \"\",\n      description: client.description || \"\",\n      isActive: client.isActive ?? true,\n      isFeatured: client.isFeatured || false,\n      sortOrder: client.sortOrder || 0\n    });\n    setShowForm(true);\n  };\n\n  const handleLogoUpload = async () => {\n    try {\n      const response = await fetch(\"/api/objects/upload\", {\n        method: \"POST\",\n        credentials: \"include\",\n      });\n      const data = await response.json();\n      return { method: \"PUT\" as const, url: data.uploadURL };\n    } catch (error) {\n      console.error(\"Error getting upload URL:\", error);\n      throw error;\n    }\n  };\n\n  const handleLogoUploadComplete = async (result: any) => {\n    if (result.successful && result.successful[0]) {\n      const uploadURL = result.successful[0].uploadURL;\n      \n      try {\n        const response = await fetch(\"/api/objects/set-acl\", {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          credentials: \"include\",\n          body: JSON.stringify({\n            objectURL: uploadURL,\n            visibility: \"public\"\n          }),\n        });\n        \n        const data = await response.json();\n        setFormData({ ...formData, logoUrl: data.objectPath });\n        toast({\n          title: \"Logo uploaded successfully\",\n        });\n      } catch (error) {\n        console.error(\"Error setting ACL:\", error);\n        toast({\n          title: \"Error processing logo\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center min-h-96\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-8\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-page-title\">\n              Client Management\n            </h1>\n            <p className=\"text-pi-gray mt-2\" data-testid=\"text-page-description\">\n              Manage client companies and their information\n            </p>\n          </div>\n          <Button onClick={() => setShowForm(!showForm)} data-testid=\"button-add-client\">\n            <Plus className=\"w-4 h-4 mr-2\" />\n            Add Client\n          </Button>\n        </div>\n\n        {/* Add/Edit Form */}\n        {showForm && (\n          <Card>\n            <CardHeader>\n              <CardTitle data-testid=\"text-form-title\">\n                {editingId ? \"Edit Client\" : \"Add New Client\"}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"name\">Company Name *</Label>\n                    <Input\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      required\n                      data-testid=\"input-name\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"website\">Website</Label>\n                    <Input\n                      id=\"website\"\n                      type=\"url\"\n                      value={formData.website}\n                      onChange={(e) => setFormData({ ...formData, website: e.target.value })}\n                      placeholder=\"https://company.com\"\n                      data-testid=\"input-website\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"description\">Description</Label>\n                  <Textarea\n                    id=\"description\"\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    rows={3}\n                    placeholder=\"Brief description of the client or project work\"\n                    data-testid=\"textarea-description\"\n                  />\n                </div>\n\n                <div>\n                  <Label>Company Logo</Label>\n                  <div className=\"mt-2 space-y-2\">\n                    {formData.logoUrl && (\n                      <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-2\">\n                        <img src={formData.logoUrl} alt=\"Preview\" className=\"h-12 w-32 object-contain\" />\n                        <p className=\"text-xs text-pi-gray mt-1\" data-testid=\"text-current-logo\">\n                          Current logo\n                        </p>\n                      </div>\n                    )}\n                    <ObjectUploader\n                      maxNumberOfFiles={1}\n                      maxFileSize={5242880} // 5MB\n                      onGetUploadParameters={handleLogoUpload}\n                      onComplete={handleLogoUploadComplete}\n                      data-testid=\"uploader-logo\"\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <Image className=\"w-4 h-4\" />\n                        <span>Upload Logo</span>\n                      </div>\n                    </ObjectUploader>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"isActive\"\n                      checked={formData.isActive}\n                      onCheckedChange={(checked) => setFormData({ ...formData, isActive: !!checked })}\n                      data-testid=\"checkbox-isActive\"\n                    />\n                    <Label htmlFor=\"isActive\">Active</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"isFeatured\"\n                      checked={formData.isFeatured}\n                      onCheckedChange={(checked) => setFormData({ ...formData, isFeatured: !!checked })}\n                      data-testid=\"checkbox-isFeatured\"\n                    />\n                    <Label htmlFor=\"isFeatured\">Featured</Label>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"sortOrder\">Sort Order</Label>\n                    <Input\n                      id=\"sortOrder\"\n                      type=\"number\"\n                      value={formData.sortOrder}\n                      onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n                      data-testid=\"input-sortOrder\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-2\">\n                  <Button \n                    type=\"submit\" \n                    disabled={createMutation.isPending || updateMutation.isPending}\n                    data-testid=\"button-save\"\n                  >\n                    <Save className=\"w-4 h-4 mr-2\" />\n                    {editingId ? \"Update\" : \"Create\"}\n                  </Button>\n                  <Button type=\"button\" variant=\"outline\" onClick={resetForm} data-testid=\"button-cancel\">\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Clients List */}\n        <Card>\n          <CardHeader>\n            <CardTitle data-testid=\"text-clients-title\">Clients</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {!clients || clients.length === 0 ? (\n              <p className=\"text-pi-gray text-center py-8\" data-testid=\"text-no-clients\">\n                No clients found. Add your first client above.\n              </p>\n            ) : (\n              <div className=\"space-y-4\">\n                {clients.map((client: any) => (\n                  <div \n                    key={client.id} \n                    className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\"\n                    data-testid={`client-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"flex-shrink-0\">\n                        {client.logoUrl ? (\n                          <img \n                            src={client.logoUrl} \n                            alt={client.name}\n                            className=\"w-16 h-12 object-contain\"\n                          />\n                        ) : (\n                          <div className=\"w-16 h-12 bg-gray-200 dark:bg-gray-700 rounded flex items-center justify-center\">\n                            <Building className=\"w-6 h-6 text-gray-400\" />\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2 mb-1\">\n                          <h3 className=\"font-semibold text-gray-900 dark:text-white\" data-testid={`text-client-name-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                            {client.name}\n                          </h3>\n                          <div className=\"flex space-x-1\">\n                            {client.isFeatured && (\n                              <span className=\"text-xs px-2 py-1 bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200 rounded\" data-testid={`badge-featured-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                                Featured\n                              </span>\n                            )}\n                            {!client.isActive && (\n                              <span className=\"text-xs px-2 py-1 bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 rounded\" data-testid={`badge-inactive-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                                Inactive\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                        {client.website && (\n                          <a \n                            href={client.website} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"text-sm text-pi-blue hover:underline mb-1 block\"\n                            data-testid={`link-website-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            {client.website}\n                          </a>\n                        )}\n                        {client.description && (\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\" data-testid={`text-client-description-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                            {client.description}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\" \n                          onClick={() => startEdit(client)}\n                          data-testid={`button-edit-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\" \n                          onClick={() => deleteMutation.mutate(client.id)}\n                          data-testid={`button-delete-${client.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":15604},"client/src/pages/admin/ContactFormManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport AdminLayout from \"@/components/AdminLayout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Mail, Eye, Archive, MessageSquare, Calendar, Building, User, Phone } from \"lucide-react\";\n\nexport default function ContactFormManager() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [selectedStatus, setSelectedStatus] = useState<string>(\"\");\n  const [selectedSubmission, setSelectedSubmission] = useState<any>(null);\n\n  const { data: submissions, isLoading } = useQuery({\n    queryKey: [\"/api/admin/contact-submissions\", selectedStatus ? { status: selectedStatus } : {}],\n  });\n\n  const markAsReadMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"PUT\", `/api/admin/contact-submissions/${id}/read`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/contact-submissions\"] });\n      toast({\n        title: \"Marked as read\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error marking as read\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateStatusMutation = useMutation({\n    mutationFn: async ({ id, status }: { id: string; status: string }) => {\n      await apiRequest(\"PUT\", `/api/admin/contact-submissions/${id}`, { status });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/contact-submissions\"] });\n      toast({\n        title: \"Status updated successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error updating status\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'new': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'read': return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n      case 'replied': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'archived': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  const getProjectTypeLabel = (projectType: string) => {\n    const types: Record<string, string> = {\n      'ai-ml': 'AI & Machine Learning',\n      'custom-software': 'Custom Software Development',\n      'mobile-app': 'Mobile App Development',\n      'data-engineering': 'Data Engineering',\n      'erp-crm': 'ERP/CRM/CMS Development',\n      'staff-augmentation': 'Staff Augmentation',\n      'consulting': 'Consulting'\n    };\n    return types[projectType] || projectType;\n  };\n\n  const handleStatusChange = (submissionId: string, newStatus: string) => {\n    updateStatusMutation.mutate({ id: submissionId, status: newStatus });\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center min-h-96\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-8\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-page-title\">\n              Contact Form Management\n            </h1>\n            <p className=\"text-pi-gray mt-2\" data-testid=\"text-page-description\">\n              Manage and respond to contact form submissions\n            </p>\n          </div>\n        </div>\n\n        {/* Filter */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-4\">\n              <MessageSquare className=\"w-5 h-5 text-pi-blue\" />\n              <span className=\"font-medium\">Filter by Status:</span>\n              <Select value={selectedStatus} onValueChange={setSelectedStatus}>\n                <SelectTrigger className=\"w-48\" data-testid=\"select-status-filter\">\n                  <SelectValue placeholder=\"All submissions\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Submissions</SelectItem>\n                  <SelectItem value=\"new\">New</SelectItem>\n                  <SelectItem value=\"read\">Read</SelectItem>\n                  <SelectItem value=\"replied\">Replied</SelectItem>\n                  <SelectItem value=\"archived\">Archived</SelectItem>\n                </SelectContent>\n              </Select>\n              {submissions && (\n                <span className=\"text-sm text-pi-gray\">\n                  ({submissions.length} {submissions.length === 1 ? 'submission' : 'submissions'})\n                </span>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Submissions List */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle data-testid=\"text-submissions-title\">Contact Submissions</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {!submissions || submissions.length === 0 ? (\n                  <div className=\"text-center py-12\">\n                    <Mail className=\"w-12 h-12 text-pi-gray mx-auto mb-4\" />\n                    <p className=\"text-pi-gray text-lg\" data-testid=\"text-no-submissions\">\n                      {selectedStatus ? `No ${selectedStatus} submissions found.` : 'No contact submissions yet.'}\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {submissions.map((submission: any) => (\n                      <div \n                        key={submission.id}\n                        className={`border border-gray-200 dark:border-gray-700 rounded-lg p-4 cursor-pointer transition-colors ${\n                          selectedSubmission?.id === submission.id ? 'bg-blue-50 dark:bg-blue-900/20 border-pi-blue' : 'hover:bg-gray-50 dark:hover:bg-gray-800'\n                        }`}\n                        onClick={() => setSelectedSubmission(submission)}\n                        data-testid={`submission-${submission.id}`}\n                      >\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div>\n                              <h3 className=\"font-semibold text-gray-900 dark:text-white\" data-testid={`text-submission-name-${submission.id}`}>\n                                {submission.firstName} {submission.lastName}\n                              </h3>\n                              <p className=\"text-sm text-pi-gray\" data-testid={`text-submission-email-${submission.id}`}>\n                                {submission.email}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <Badge className={getStatusColor(submission.status)} data-testid={`badge-status-${submission.id}`}>\n                              {submission.status || 'new'}\n                            </Badge>\n                            {!submission.isRead && (\n                              <div className=\"w-2 h-2 bg-blue-500 rounded-full\" data-testid={`indicator-unread-${submission.id}`}></div>\n                            )}\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center space-x-4 text-xs text-pi-gray mb-2\">\n                          <div className=\"flex items-center space-x-1\">\n                            <Calendar className=\"w-3 h-3\" />\n                            <span data-testid={`text-submission-date-${submission.id}`}>\n                              {new Date(submission.createdAt).toLocaleDateString()}\n                            </span>\n                          </div>\n                          {submission.company && (\n                            <div className=\"flex items-center space-x-1\">\n                              <Building className=\"w-3 h-3\" />\n                              <span data-testid={`text-submission-company-${submission.id}`}>\n                                {submission.company}\n                              </span>\n                            </div>\n                          )}\n                          {submission.projectType && (\n                            <div className=\"flex items-center space-x-1\">\n                              <span className=\"w-3 h-3 bg-pi-blue rounded-full\"></span>\n                              <span data-testid={`text-submission-project-${submission.id}`}>\n                                {getProjectTypeLabel(submission.projectType)}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        \n                        <p className=\"text-sm text-gray-700 dark:text-gray-300 line-clamp-2\" data-testid={`text-submission-message-${submission.id}`}>\n                          {submission.message}\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Submission Details */}\n          <div className=\"lg:col-span-1\">\n            <Card>\n              <CardHeader>\n                <CardTitle data-testid=\"text-details-title\">Submission Details</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {!selectedSubmission ? (\n                  <div className=\"text-center py-12\">\n                    <Eye className=\"w-12 h-12 text-pi-gray mx-auto mb-4\" />\n                    <p className=\"text-pi-gray\" data-testid=\"text-select-submission\">\n                      Select a submission to view details\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\" data-testid=\"text-contact-info\">\n                        Contact Information\n                      </h3>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex items-center space-x-2\">\n                          <User className=\"w-4 h-4 text-pi-gray\" />\n                          <span data-testid=\"text-selected-name\">\n                            {selectedSubmission.firstName} {selectedSubmission.lastName}\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Mail className=\"w-4 h-4 text-pi-gray\" />\n                          <a \n                            href={`mailto:${selectedSubmission.email}`}\n                            className=\"text-pi-blue hover:underline\"\n                            data-testid=\"link-selected-email\"\n                          >\n                            {selectedSubmission.email}\n                          </a>\n                        </div>\n                        {selectedSubmission.company && (\n                          <div className=\"flex items-center space-x-2\">\n                            <Building className=\"w-4 h-4 text-pi-gray\" />\n                            <span data-testid=\"text-selected-company\">{selectedSubmission.company}</span>\n                          </div>\n                        )}\n                        <div className=\"flex items-center space-x-2\">\n                          <Calendar className=\"w-4 h-4 text-pi-gray\" />\n                          <span data-testid=\"text-selected-date\">\n                            {new Date(selectedSubmission.createdAt).toLocaleString()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {selectedSubmission.projectType && (\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Project Type</h3>\n                        <Badge variant=\"outline\" data-testid=\"badge-selected-project\">\n                          {getProjectTypeLabel(selectedSubmission.projectType)}\n                        </Badge>\n                      </div>\n                    )}\n\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Message</h3>\n                      <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-3\">\n                        <p className=\"text-sm text-gray-700 dark:text-gray-300 whitespace-pre-wrap\" data-testid=\"text-selected-message\">\n                          {selectedSubmission.message}\n                        </p>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Status</h3>\n                      <Select \n                        value={selectedSubmission.status || 'new'} \n                        onValueChange={(value) => handleStatusChange(selectedSubmission.id, value)}\n                      >\n                        <SelectTrigger data-testid=\"select-selected-status\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"new\">New</SelectItem>\n                          <SelectItem value=\"read\">Read</SelectItem>\n                          <SelectItem value=\"replied\">Replied</SelectItem>\n                          <SelectItem value=\"archived\">Archived</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      {!selectedSubmission.isRead && (\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"w-full\"\n                          onClick={() => markAsReadMutation.mutate(selectedSubmission.id)}\n                          disabled={markAsReadMutation.isPending}\n                          data-testid=\"button-mark-read\"\n                        >\n                          <Eye className=\"w-4 h-4 mr-2\" />\n                          Mark as Read\n                        </Button>\n                      )}\n                      \n                      <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className=\"w-full\"\n                        onClick={() => window.open(`mailto:${selectedSubmission.email}?subject=Re: Your inquiry to Pi Tetris`)}\n                        data-testid=\"button-reply\"\n                      >\n                        <Mail className=\"w-4 h-4 mr-2\" />\n                        Reply via Email\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":15737},"client/src/pages/admin/ContentManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport RichTextEditor from \"@/components/RichTextEditor\";\nimport { ObjectUploader } from \"@/components/ObjectUploader\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Plus, Edit, Trash2, Eye, EyeOff } from \"lucide-react\";\n\nexport default function ContentManager() {\n  const [activeTab, setActiveTab] = useState(\"services\");\n  const [editingItem, setEditingItem] = useState<any>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: services = [] } = useQuery({\n    queryKey: [\"/api/services\"],\n  });\n\n  const { data: clients = [] } = useQuery({\n    queryKey: [\"/api/clients\"],\n  });\n\n  const { data: technologies = [] } = useQuery({\n    queryKey: [\"/api/technologies\"],\n  });\n\n  const { data: categories = [] } = useQuery({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const createServiceMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/admin/services\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/services\"] });\n      setIsCreating(false);\n      setEditingItem(null);\n      toast({ title: \"Service created successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error creating service\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const updateServiceMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      return apiRequest(\"PUT\", `/api/admin/services/${id}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/services\"] });\n      setEditingItem(null);\n      toast({ title: \"Service updated successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error updating service\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const deleteServiceMutation = useMutation({\n    mutationFn: async (id: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/services/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/services\"] });\n      toast({ title: \"Service deleted successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error deleting service\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const createClientMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/admin/clients\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients\"] });\n      setIsCreating(false);\n      setEditingItem(null);\n      toast({ title: \"Client created successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error creating client\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const updateClientMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      return apiRequest(\"PUT\", `/api/admin/clients/${id}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients\"] });\n      setEditingItem(null);\n      toast({ title: \"Client updated successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error updating client\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const deleteClientMutation = useMutation({\n    mutationFn: async (id: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/clients/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients\"] });\n      toast({ title: \"Client deleted successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error deleting client\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleCreateService = () => {\n    setIsCreating(true);\n    setActiveTab(\"services\");\n    setEditingItem({\n      title: \"\",\n      slug: \"\",\n      shortDescription: \"\",\n      longDescription: \"\",\n      iconUrl: \"\",\n      categoryId: \"\",\n      features: [],\n      technologies: [],\n      sortOrder: 0,\n      isActive: true,\n    });\n  };\n\n  const handleCreateClient = () => {\n    setIsCreating(true);\n    setActiveTab(\"clients\");\n    setEditingItem({\n      name: \"\",\n      logoUrl: \"\",\n      websiteUrl: \"\",\n      description: \"\",\n      sortOrder: 0,\n      isActive: true,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingItem) return;\n\n    if (activeTab === \"services\") {\n      if (isCreating) {\n        createServiceMutation.mutate(editingItem);\n      } else {\n        updateServiceMutation.mutate({ id: editingItem.id, data: editingItem });\n      }\n    } else if (activeTab === \"clients\") {\n      if (isCreating) {\n        createClientMutation.mutate(editingItem);\n      } else {\n        updateClientMutation.mutate({ id: editingItem.id, data: editingItem });\n      }\n    }\n  };\n\n  const handleImageUpload = async () => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/objects/upload\");\n      const data = await response.json();\n      return { method: \"PUT\" as const, url: data.uploadURL };\n    } catch (error) {\n      toast({\n        title: \"Error getting upload URL\",\n        description: \"Failed to prepare file upload\",\n        variant: \"destructive\",\n      });\n      throw error;\n    }\n  };\n\n  const handleImageUploadComplete = async (result: any) => {\n    if (result.successful && result.successful.length > 0) {\n      const uploadedFile = result.successful[0];\n      try {\n        const response = await apiRequest(\"PUT\", \"/api/admin/images\", {\n          imageURL: uploadedFile.uploadURL,\n        });\n        const data = await response.json();\n        \n        if (activeTab === \"services\") {\n          setEditingItem({ ...editingItem, iconUrl: data.objectPath });\n        } else if (activeTab === \"clients\") {\n          setEditingItem({ ...editingItem, logoUrl: data.objectPath });\n        }\n        \n        toast({ title: \"Image uploaded successfully\" });\n      } catch (error) {\n        toast({\n          title: \"Error processing image\",\n          description: \"Failed to save image\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n\n  const renderServiceForm = () => (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"title\">Title</Label>\n          <Input\n            id=\"title\"\n            value={editingItem?.title || \"\"}\n            onChange={(e) => setEditingItem({ ...editingItem, title: e.target.value })}\n            required\n            data-testid=\"input-service-title\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"slug\">Slug</Label>\n          <Input\n            id=\"slug\"\n            value={editingItem?.slug || \"\"}\n            onChange={(e) => setEditingItem({ ...editingItem, slug: e.target.value })}\n            required\n            data-testid=\"input-service-slug\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <Label htmlFor=\"shortDescription\">Short Description</Label>\n        <Textarea\n          id=\"shortDescription\"\n          value={editingItem?.shortDescription || \"\"}\n          onChange={(e) => setEditingItem({ ...editingItem, shortDescription: e.target.value })}\n          data-testid=\"textarea-service-short-description\"\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"longDescription\">Long Description</Label>\n        <RichTextEditor\n          value={editingItem?.longDescription || \"\"}\n          onChange={(value) => setEditingItem({ ...editingItem, longDescription: value })}\n        />\n      </div>\n\n      <div>\n        <Label>Icon Image</Label>\n        <div className=\"mt-2\">\n          <ObjectUploader\n            onGetUploadParameters={handleImageUpload}\n            onComplete={handleImageUploadComplete}\n            maxNumberOfFiles={1}\n            maxFileSize={5 * 1024 * 1024} // 5MB\n          >\n            <span>Upload Icon</span>\n          </ObjectUploader>\n          {editingItem?.iconUrl && (\n            <div className=\"mt-2\">\n              <img src={editingItem.iconUrl} alt=\"Icon preview\" className=\"w-16 h-16 object-cover rounded\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <Label htmlFor=\"category\">Category</Label>\n        <Select \n          value={editingItem?.categoryId || \"\"} \n          onValueChange={(value) => setEditingItem({ ...editingItem, categoryId: value })}\n        >\n          <SelectTrigger data-testid=\"select-service-category\">\n            <SelectValue placeholder=\"Select category\" />\n          </SelectTrigger>\n          <SelectContent>\n            {categories.map((category: any) => (\n              <SelectItem key={category.id} value={category.id}>\n                {category.name}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id=\"isActive\"\n          checked={editingItem?.isActive || false}\n          onCheckedChange={(checked) => setEditingItem({ ...editingItem, isActive: checked })}\n          data-testid=\"switch-service-active\"\n        />\n        <Label htmlFor=\"isActive\">Active</Label>\n      </div>\n\n      <div className=\"flex gap-2\">\n        <Button type=\"submit\" disabled={createServiceMutation.isPending || updateServiceMutation.isPending} data-testid=\"button-save-service\">\n          {isCreating ? \"Create Service\" : \"Update Service\"}\n        </Button>\n        <Button type=\"button\" variant=\"outline\" onClick={() => { setEditingItem(null); setIsCreating(false); }} data-testid=\"button-cancel-service\">\n          Cancel\n        </Button>\n      </div>\n    </form>\n  );\n\n  const renderClientForm = () => (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <Label htmlFor=\"name\">Client Name</Label>\n        <Input\n          id=\"name\"\n          value={editingItem?.name || \"\"}\n          onChange={(e) => setEditingItem({ ...editingItem, name: e.target.value })}\n          required\n          data-testid=\"input-client-name\"\n        />\n      </div>\n\n      <div>\n        <Label>Logo</Label>\n        <div className=\"mt-2\">\n          <ObjectUploader\n            onGetUploadParameters={handleImageUpload}\n            onComplete={handleImageUploadComplete}\n            maxNumberOfFiles={1}\n            maxFileSize={5 * 1024 * 1024} // 5MB\n          >\n            <span>Upload Logo</span>\n          </ObjectUploader>\n          {editingItem?.logoUrl && (\n            <div className=\"mt-2\">\n              <img src={editingItem.logoUrl} alt=\"Logo preview\" className=\"w-32 h-16 object-contain rounded border\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <Label htmlFor=\"websiteUrl\">Website URL</Label>\n        <Input\n          id=\"websiteUrl\"\n          type=\"url\"\n          value={editingItem?.websiteUrl || \"\"}\n          onChange={(e) => setEditingItem({ ...editingItem, websiteUrl: e.target.value })}\n          data-testid=\"input-client-website\"\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"description\">Description</Label>\n        <Textarea\n          id=\"description\"\n          value={editingItem?.description || \"\"}\n          onChange={(e) => setEditingItem({ ...editingItem, description: e.target.value })}\n          data-testid=\"textarea-client-description\"\n        />\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id=\"isActive\"\n          checked={editingItem?.isActive || false}\n          onCheckedChange={(checked) => setEditingItem({ ...editingItem, isActive: checked })}\n          data-testid=\"switch-client-active\"\n        />\n        <Label htmlFor=\"isActive\">Active</Label>\n      </div>\n\n      <div className=\"flex gap-2\">\n        <Button type=\"submit\" disabled={createClientMutation.isPending || updateClientMutation.isPending} data-testid=\"button-save-client\">\n          {isCreating ? \"Create Client\" : \"Update Client\"}\n        </Button>\n        <Button type=\"button\" variant=\"outline\" onClick={() => { setEditingItem(null); setIsCreating(false); }} data-testid=\"button-cancel-client\">\n          Cancel\n        </Button>\n      </div>\n    </form>\n  );\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Content Manager</h1>\n        <p className=\"text-gray-600\">Manage services, clients, and other website content.</p>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"mb-8\">\n          <TabsTrigger value=\"services\" data-testid=\"tab-services\">Services</TabsTrigger>\n          <TabsTrigger value=\"clients\" data-testid=\"tab-clients\">Clients</TabsTrigger>\n          <TabsTrigger value=\"technologies\" data-testid=\"tab-technologies\">Technologies</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"services\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>Services</CardTitle>\n                <Button onClick={handleCreateService} data-testid=\"button-add-service\">\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Add Service\n                </Button>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {services.map((service: any) => (\n                    <div key={service.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium\">{service.title}</h3>\n                        <p className=\"text-sm text-gray-600\">{service.shortDescription}</p>\n                        <div className=\"flex items-center gap-2 mt-2\">\n                          <Badge variant={service.isActive ? \"default\" : \"secondary\"}>\n                            {service.isActive ? \"Active\" : \"Inactive\"}\n                          </Badge>\n                          {service.isActive ? (\n                            <Eye className=\"w-4 h-4 text-green-600\" />\n                          ) : (\n                            <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => setEditingItem(service)}\n                          data-testid={`button-edit-service-${service.id}`}\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => deleteServiceMutation.mutate(service.id)}\n                          data-testid={`button-delete-service-${service.id}`}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {editingItem && activeTab === \"services\" && (\n              <Card>\n                <CardHeader>\n                  <CardTitle>{isCreating ? \"Create Service\" : \"Edit Service\"}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {renderServiceForm()}\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"clients\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>Clients</CardTitle>\n                <Button onClick={handleCreateClient} data-testid=\"button-add-client\">\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Add Client\n                </Button>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {clients.map((client: any) => (\n                    <div key={client.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div className=\"flex items-center gap-4\">\n                        {client.logoUrl && (\n                          <img src={client.logoUrl} alt={client.name} className=\"w-12 h-8 object-contain\" />\n                        )}\n                        <div>\n                          <h3 className=\"font-medium\">{client.name}</h3>\n                          <p className=\"text-sm text-gray-600\">{client.description}</p>\n                          <Badge variant={client.isActive ? \"default\" : \"secondary\"}>\n                            {client.isActive ? \"Active\" : \"Inactive\"}\n                          </Badge>\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => setEditingItem(client)}\n                          data-testid={`button-edit-client-${client.id}`}\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => deleteClientMutation.mutate(client.id)}\n                          data-testid={`button-delete-client-${client.id}`}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {editingItem && activeTab === \"clients\" && (\n              <Card>\n                <CardHeader>\n                  <CardTitle>{isCreating ? \"Create Client\" : \"Edit Client\"}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {renderClientForm()}\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"technologies\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Technologies</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8 text-gray-500\">\n                Technology management will be available in the next update.\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n","size_bytes":19942},"client/src/pages/admin/Dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport AdminLayout from \"@/components/AdminLayout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Users, FileText, MessageSquare, Star, TrendingUp, Activity } from \"lucide-react\";\n\nexport default function Dashboard() {\n  const { data: stats, isLoading } = useQuery({\n    queryKey: [\"/api/admin/stats\"],\n  });\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center min-h-96\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  const statCards = [\n    {\n      title: \"Case Studies\",\n      value: stats?.caseStudiesCount || 0,\n      icon: FileText,\n      description: \"Published case studies\",\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-50 dark:bg-blue-900/20\"\n    },\n    {\n      title: \"Team Members\",\n      value: stats?.teamMembersCount || 0,\n      icon: Users,\n      description: \"Active team members\",\n      color: \"text-green-600\",\n      bgColor: \"bg-green-50 dark:bg-green-900/20\"\n    },\n    {\n      title: \"Contact Forms\",\n      value: stats?.contactFormsCount || 0,\n      icon: MessageSquare,\n      description: \"Total submissions\",\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-50 dark:bg-purple-900/20\"\n    },\n    {\n      title: \"Testimonials\",\n      value: stats?.testimonialsCount || 0,\n      icon: Star,\n      description: \"Active testimonials\",\n      color: \"text-yellow-600\",\n      bgColor: \"bg-yellow-50 dark:bg-yellow-900/20\"\n    }\n  ];\n\n  const quickActions = [\n    {\n      title: \"Add Case Study\",\n      description: \"Create a new portfolio case study\",\n      href: \"/admin/case-studies\",\n      icon: FileText,\n      color: \"bg-blue-500 hover:bg-blue-600\"\n    },\n    {\n      title: \"Manage Team\",\n      description: \"Add or edit team members\",\n      href: \"/admin/team\",\n      icon: Users,\n      color: \"bg-green-500 hover:bg-green-600\"\n    },\n    {\n      title: \"View Messages\",\n      description: \"Check new contact form submissions\",\n      href: \"/admin/contact-forms\",\n      icon: MessageSquare,\n      color: \"bg-purple-500 hover:bg-purple-600\"\n    },\n    {\n      title: \"Add Testimonial\",\n      description: \"Create a new client testimonial\",\n      href: \"/admin/testimonials\",\n      icon: Star,\n      color: \"bg-yellow-500 hover:bg-yellow-600\"\n    }\n  ];\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-8\">\n        {/* Header */}\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-dashboard-title\">\n            Dashboard\n          </h1>\n          <p className=\"text-pi-gray mt-2\" data-testid=\"text-dashboard-description\">\n            Manage your Pi Tetris website content and monitor activity\n          </p>\n        </div>\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {statCards.map((stat, index) => (\n            <Card key={index} data-testid={`card-stat-${index}`}>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-pi-gray\" data-testid={`text-stat-title-${index}`}>\n                      {stat.title}\n                    </p>\n                    <p className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid={`text-stat-value-${index}`}>\n                      {stat.value}\n                    </p>\n                    <p className=\"text-xs text-pi-gray mt-1\" data-testid={`text-stat-description-${index}`}>\n                      {stat.description}\n                    </p>\n                  </div>\n                  <div className={`p-3 rounded-lg ${stat.bgColor}`}>\n                    <stat.icon className={`w-6 h-6 ${stat.color}`} />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Quick Actions */}\n        <div>\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\" data-testid=\"text-quick-actions-title\">\n            Quick Actions\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {quickActions.map((action, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow cursor-pointer\" data-testid={`card-action-${index}`}>\n                <CardContent className=\"p-6\">\n                  <a href={action.href} className=\"block\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className={`p-3 rounded-lg text-white ${action.color}`}>\n                        <action.icon className=\"w-6 h-6\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900 dark:text-white\" data-testid={`text-action-title-${index}`}>\n                          {action.title}\n                        </h3>\n                        <p className=\"text-sm text-pi-gray\" data-testid={`text-action-description-${index}`}>\n                          {action.description}\n                        </p>\n                      </div>\n                    </div>\n                  </a>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\" data-testid=\"text-recent-activity-title\">\n              <Activity className=\"w-5 h-5\" />\n              <span>Recent Activity</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-3 text-sm\" data-testid=\"activity-item-0\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span className=\"text-pi-gray\">System is running smoothly</span>\n                <span className=\"text-xs text-pi-gray ml-auto\">Just now</span>\n              </div>\n              <div className=\"flex items-center space-x-3 text-sm\" data-testid=\"activity-item-1\">\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                <span className=\"text-pi-gray\">Database backup completed</span>\n                <span className=\"text-xs text-pi-gray ml-auto\">1 hour ago</span>\n              </div>\n              <div className=\"flex items-center space-x-3 text-sm\" data-testid=\"activity-item-2\">\n                <div className=\"w-2 h-2 bg-purple-500 rounded-full\"></div>\n                <span className=\"text-pi-gray\">Content management system ready</span>\n                <span className=\"text-xs text-pi-gray ml-auto\">2 hours ago</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":6996},"client/src/pages/admin/TeamManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { ObjectUploader } from \"@/components/ObjectUploader\";\nimport { Plus, Edit, Trash2, Eye, EyeOff, Linkedin, Github, Twitter } from \"lucide-react\";\n\nexport default function TeamManager() {\n  const [editingItem, setEditingItem] = useState<any>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: teamMembers = [] } = useQuery({\n    queryKey: [\"/api/team\"],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/admin/team\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\"] });\n      setIsCreating(false);\n      setEditingItem(null);\n      toast({ title: \"Team member created successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error creating team member\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      return apiRequest(\"PUT\", `/api/admin/team/${id}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\"] });\n      setEditingItem(null);\n      toast({ title: \"Team member updated successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error updating team member\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/team/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\"] });\n      toast({ title: \"Team member deleted successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error deleting team member\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleCreate = () => {\n    setIsCreating(true);\n    setEditingItem({\n      name: \"\",\n      role: \"\",\n      bio: \"\",\n      expertise: [],\n      imageUrl: \"\",\n      linkedinUrl: \"\",\n      githubUrl: \"\",\n      twitterUrl: \"\",\n      sortOrder: 0,\n      isActive: true,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingItem) return;\n\n    // Parse expertise from comma-separated string\n    const processedData = {\n      ...editingItem,\n      expertise: typeof editingItem.expertise === 'string' \n        ? editingItem.expertise.split(',').map((e: string) => e.trim()).filter(Boolean)\n        : editingItem.expertise || [],\n    };\n\n    if (isCreating) {\n      createMutation.mutate(processedData);\n    } else {\n      updateMutation.mutate({ id: editingItem.id, data: processedData });\n    }\n  };\n\n  const handleImageUpload = async () => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/objects/upload\");\n      const data = await response.json();\n      return { method: \"PUT\" as const, url: data.uploadURL };\n    } catch (error) {\n      toast({\n        title: \"Error getting upload URL\",\n        description: \"Failed to prepare file upload\",\n        variant: \"destructive\",\n      });\n      throw error;\n    }\n  };\n\n  const handleImageUploadComplete = async (result: any) => {\n    if (result.successful && result.successful.length > 0) {\n      const uploadedFile = result.successful[0];\n      try {\n        const response = await apiRequest(\"PUT\", \"/api/admin/images\", {\n          imageURL: uploadedFile.uploadURL,\n        });\n        const data = await response.json();\n        setEditingItem({ ...editingItem, imageUrl: data.objectPath });\n        toast({ title: \"Image uploaded successfully\" });\n      } catch (error) {\n        toast({\n          title: \"Error processing image\",\n          description: \"Failed to save image\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Team Manager</h1>\n        <p className=\"text-gray-600\">Manage team members and their profiles.</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <CardTitle>Team Members</CardTitle>\n            <Button onClick={handleCreate} data-testid=\"button-add-team-member\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add Team Member\n            </Button>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n              {teamMembers.map((member: any) => (\n                <div key={member.id} className=\"flex items-start justify-between p-4 border rounded-lg\">\n                  <div className=\"flex items-start gap-4\">\n                    {member.imageUrl ? (\n                      <img \n                        src={member.imageUrl} \n                        alt={member.name}\n                        className=\"w-12 h-12 rounded-full object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-12 h-12 rounded-full bg-gray-200 flex items-center justify-center\">\n                        <span className=\"text-gray-500 font-medium\">\n                          {member.name.split(' ').map((n: string) => n[0]).join('')}\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-medium\">{member.name}</h3>\n                      <p className=\"text-sm text-blue-600 mb-1\">{member.role}</p>\n                      <p className=\"text-sm text-gray-600 mb-2 line-clamp-2\">{member.bio}</p>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant={member.isActive ? \"default\" : \"secondary\"}>\n                          {member.isActive ? \"Active\" : \"Inactive\"}\n                        </Badge>\n                        {member.isActive ? (\n                          <Eye className=\"w-4 h-4 text-green-600\" />\n                        ) : (\n                          <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                        )}\n                      </div>\n                      <div className=\"flex gap-2 mt-2\">\n                        {member.linkedinUrl && <Linkedin className=\"w-4 h-4 text-blue-600\" />}\n                        {member.githubUrl && <Github className=\"w-4 h-4 text-gray-800\" />}\n                        {member.twitterUrl && <Twitter className=\"w-4 h-4 text-blue-400\" />}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2 ml-4\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setEditingItem(member)}\n                      data-testid={`button-edit-team-member-${member.id}`}\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"destructive\"\n                      onClick={() => deleteMutation.mutate(member.id)}\n                      data-testid={`button-delete-team-member-${member.id}`}\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {editingItem && (\n          <Card>\n            <CardHeader>\n              <CardTitle>{isCreating ? \"Create Team Member\" : \"Edit Team Member\"}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                  <Label htmlFor=\"name\">Name</Label>\n                  <Input\n                    id=\"name\"\n                    value={editingItem.name || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, name: e.target.value })}\n                    required\n                    data-testid=\"input-team-member-name\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"role\">Role</Label>\n                  <Input\n                    id=\"role\"\n                    value={editingItem.role || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, role: e.target.value })}\n                    required\n                    data-testid=\"input-team-member-role\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"bio\">Bio</Label>\n                  <Textarea\n                    id=\"bio\"\n                    value={editingItem.bio || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, bio: e.target.value })}\n                    rows={3}\n                    data-testid=\"textarea-team-member-bio\"\n                  />\n                </div>\n\n                <div>\n                  <Label>Profile Image</Label>\n                  <div className=\"mt-2\">\n                    <ObjectUploader\n                      onGetUploadParameters={handleImageUpload}\n                      onComplete={handleImageUploadComplete}\n                      maxNumberOfFiles={1}\n                      maxFileSize={5 * 1024 * 1024} // 5MB\n                    >\n                      <span>Upload Profile Image</span>\n                    </ObjectUploader>\n                    {editingItem.imageUrl && (\n                      <div className=\"mt-2\">\n                        <img \n                          src={editingItem.imageUrl} \n                          alt=\"Profile preview\" \n                          className=\"w-24 h-24 rounded-full object-cover border\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"expertise\">Expertise (comma-separated)</Label>\n                  <Input\n                    id=\"expertise\"\n                    value={Array.isArray(editingItem.expertise) ? editingItem.expertise.join(', ') : editingItem.expertise || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, expertise: e.target.value })}\n                    placeholder=\"React, Node.js, AI/ML, Leadership\"\n                    data-testid=\"input-team-member-expertise\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div>\n                    <Label htmlFor=\"linkedinUrl\">LinkedIn URL</Label>\n                    <Input\n                      id=\"linkedinUrl\"\n                      type=\"url\"\n                      value={editingItem.linkedinUrl || \"\"}\n                      onChange={(e) => setEditingItem({ ...editingItem, linkedinUrl: e.target.value })}\n                      placeholder=\"https://linkedin.com/in/username\"\n                      data-testid=\"input-team-member-linkedin\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"githubUrl\">GitHub URL</Label>\n                    <Input\n                      id=\"githubUrl\"\n                      type=\"url\"\n                      value={editingItem.githubUrl || \"\"}\n                      onChange={(e) => setEditingItem({ ...editingItem, githubUrl: e.target.value })}\n                      placeholder=\"https://github.com/username\"\n                      data-testid=\"input-team-member-github\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"twitterUrl\">Twitter URL</Label>\n                    <Input\n                      id=\"twitterUrl\"\n                      type=\"url\"\n                      value={editingItem.twitterUrl || \"\"}\n                      onChange={(e) => setEditingItem({ ...editingItem, twitterUrl: e.target.value })}\n                      placeholder=\"https://twitter.com/username\"\n                      data-testid=\"input-team-member-twitter\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"sortOrder\">Sort Order</Label>\n                  <Input\n                    id=\"sortOrder\"\n                    type=\"number\"\n                    value={editingItem.sortOrder || 0}\n                    onChange={(e) => setEditingItem({ ...editingItem, sortOrder: parseInt(e.target.value) })}\n                    data-testid=\"input-team-member-sort-order\"\n                  />\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"isActive\"\n                    checked={editingItem.isActive || false}\n                    onCheckedChange={(checked) => setEditingItem({ ...editingItem, isActive: checked })}\n                    data-testid=\"switch-team-member-active\"\n                  />\n                  <Label htmlFor=\"isActive\">Active</Label>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button type=\"submit\" disabled={createMutation.isPending || updateMutation.isPending} data-testid=\"button-save-team-member\">\n                    {isCreating ? \"Create Team Member\" : \"Update Team Member\"}\n                  </Button>\n                  <Button type=\"button\" variant=\"outline\" onClick={() => { setEditingItem(null); setIsCreating(false); }} data-testid=\"button-cancel-team-member\">\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":14455},"client/src/pages/admin/TechnologyManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport AdminLayout from \"@/components/AdminLayout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Plus, Edit, Trash2, Save, Code } from \"lucide-react\";\n\nconst techCategories = [\n  { value: 'backend', label: 'Back-End' },\n  { value: 'frontend', label: 'Front-End' },\n  { value: 'ai-ml', label: 'AI/ML' },\n  { value: 'data', label: 'Data' },\n  { value: 'devops', label: 'DevOps' },\n];\n\nexport default function TechnologyManager() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    category: \"backend\",\n    icon: \"\",\n    url: \"\",\n    description: \"\",\n    isActive: true,\n    sortOrder: 0\n  });\n\n  const { data: technologies, isLoading } = useQuery({\n    queryKey: [\"/api/admin/technologies\"],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: typeof formData) => {\n      await apiRequest(\"POST\", \"/api/admin/technologies\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/technologies\"] });\n      resetForm();\n      toast({\n        title: \"Technology created successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error creating technology\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: typeof formData) => {\n      await apiRequest(\"PUT\", `/api/admin/technologies/${editingId}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/technologies\"] });\n      resetForm();\n      toast({\n        title: \"Technology updated successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error updating technology\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/admin/technologies/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/technologies\"] });\n      toast({\n        title: \"Technology deleted successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error deleting technology\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      category: \"backend\",\n      icon: \"\",\n      url: \"\",\n      description: \"\",\n      isActive: true,\n      sortOrder: 0\n    });\n    setEditingId(null);\n    setShowForm(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editingId) {\n      updateMutation.mutate(formData);\n    } else {\n      createMutation.mutate(formData);\n    }\n  };\n\n  const startEdit = (technology: any) => {\n    setEditingId(technology.id);\n    setFormData({\n      name: technology.name || \"\",\n      category: technology.category || \"backend\",\n      icon: technology.icon || \"\",\n      url: technology.url || \"\",\n      description: technology.description || \"\",\n      isActive: technology.isActive ?? true,\n      sortOrder: technology.sortOrder || 0\n    });\n    setShowForm(true);\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center min-h-96\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pi-blue\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  const groupedTechnologies = techCategories.map(category => ({\n    ...category,\n    technologies: technologies?.filter((tech: any) => tech.category === category.value) || []\n  }));\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-8\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-page-title\">\n              Technology Management\n            </h1>\n            <p className=\"text-pi-gray mt-2\" data-testid=\"text-page-description\">\n              Manage technology stack and tools\n            </p>\n          </div>\n          <Button onClick={() => setShowForm(!showForm)} data-testid=\"button-add-technology\">\n            <Plus className=\"w-4 h-4 mr-2\" />\n            Add Technology\n          </Button>\n        </div>\n\n        {/* Add/Edit Form */}\n        {showForm && (\n          <Card>\n            <CardHeader>\n              <CardTitle data-testid=\"text-form-title\">\n                {editingId ? \"Edit Technology\" : \"Add New Technology\"}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"name\">Technology Name *</Label>\n                    <Input\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      placeholder=\"e.g., React, Python, AWS\"\n                      required\n                      data-testid=\"input-name\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"category\">Category *</Label>\n                    <Select value={formData.category} onValueChange={(value) => setFormData({ ...formData, category: value })}>\n                      <SelectTrigger data-testid=\"select-category\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {techCategories.map((category) => (\n                          <SelectItem key={category.value} value={category.value}>\n                            {category.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"url\">Official Website</Label>\n                    <Input\n                      id=\"url\"\n                      type=\"url\"\n                      value={formData.url}\n                      onChange={(e) => setFormData({ ...formData, url: e.target.value })}\n                      placeholder=\"https://technology.com\"\n                      data-testid=\"input-url\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"icon\">Icon/Logo URL</Label>\n                    <Input\n                      id=\"icon\"\n                      value={formData.icon}\n                      onChange={(e) => setFormData({ ...formData, icon: e.target.value })}\n                      placeholder=\"URL to technology logo\"\n                      data-testid=\"input-icon\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"description\">Description</Label>\n                  <Textarea\n                    id=\"description\"\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    rows={3}\n                    placeholder=\"Brief description of the technology\"\n                    data-testid=\"textarea-description\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"isActive\"\n                      checked={formData.isActive}\n                      onCheckedChange={(checked) => setFormData({ ...formData, isActive: !!checked })}\n                      data-testid=\"checkbox-isActive\"\n                    />\n                    <Label htmlFor=\"isActive\">Active</Label>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"sortOrder\">Sort Order</Label>\n                    <Input\n                      id=\"sortOrder\"\n                      type=\"number\"\n                      value={formData.sortOrder}\n                      onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n                      data-testid=\"input-sortOrder\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-2\">\n                  <Button \n                    type=\"submit\" \n                    disabled={createMutation.isPending || updateMutation.isPending}\n                    data-testid=\"button-save\"\n                  >\n                    <Save className=\"w-4 h-4 mr-2\" />\n                    {editingId ? \"Update\" : \"Create\"}\n                  </Button>\n                  <Button type=\"button\" variant=\"outline\" onClick={resetForm} data-testid=\"button-cancel\">\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Technologies by Category */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {groupedTechnologies.map((category) => (\n            <Card key={category.value}>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\" data-testid={`text-category-${category.value}`}>\n                  <Code className=\"w-5 h-5\" />\n                  <span>{category.label}</span>\n                  <span className=\"text-sm font-normal text-pi-gray\">\n                    ({category.technologies.length})\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {category.technologies.length === 0 ? (\n                  <p className=\"text-pi-gray text-sm\" data-testid={`text-no-technologies-${category.value}`}>\n                    No technologies in this category\n                  </p>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {category.technologies.map((tech: any) => (\n                      <div \n                        key={tech.id}\n                        className=\"flex items-center justify-between p-3 border border-gray-200 dark:border-gray-700 rounded-lg\"\n                        data-testid={`technology-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          {tech.icon && (\n                            <img src={tech.icon} alt={tech.name} className=\"w-6 h-6 object-contain\" />\n                          )}\n                          <div>\n                            <h4 className=\"font-medium text-gray-900 dark:text-white\" data-testid={`text-tech-name-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                              {tech.name}\n                            </h4>\n                            {tech.description && (\n                              <p className=\"text-xs text-pi-gray\" data-testid={`text-tech-description-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                                {tech.description}\n                              </p>\n                            )}\n                          </div>\n                          {!tech.isActive && (\n                            <span className=\"text-xs px-2 py-1 bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 rounded\">\n                              Inactive\n                            </span>\n                          )}\n                        </div>\n                        <div className=\"flex space-x-1\">\n                          {tech.url && (\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => window.open(tech.url, '_blank')}\n                              data-testid={`button-visit-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                            >\n                              Visit\n                            </Button>\n                          )}\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => startEdit(tech)}\n                            data-testid={`button-edit-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => deleteMutation.mutate(tech.id)}\n                            data-testid={`button-delete-${tech.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n","size_bytes":13962},"client/src/pages/admin/TestimonialManager.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { ObjectUploader } from \"@/components/ObjectUploader\";\nimport { Plus, Edit, Trash2, Star, Eye, EyeOff } from \"lucide-react\";\n\nexport default function TestimonialManager() {\n  const [editingItem, setEditingItem] = useState<any>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: testimonials = [] } = useQuery({\n    queryKey: [\"/api/testimonials\"],\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/admin/testimonials\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/testimonials\"] });\n      setIsCreating(false);\n      setEditingItem(null);\n      toast({ title: \"Testimonial created successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error creating testimonial\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      return apiRequest(\"PUT\", `/api/admin/testimonials/${id}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/testimonials\"] });\n      setEditingItem(null);\n      toast({ title: \"Testimonial updated successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error updating testimonial\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/testimonials/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/testimonials\"] });\n      toast({ title: \"Testimonial deleted successfully\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error deleting testimonial\", \n        description: error.message,\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleCreate = () => {\n    setIsCreating(true);\n    setEditingItem({\n      content: \"\",\n      authorName: \"\",\n      authorTitle: \"\",\n      authorCompany: \"\",\n      authorImageUrl: \"\",\n      rating: 5,\n      sortOrder: 0,\n      isActive: true,\n      isFeatured: false,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingItem) return;\n\n    if (isCreating) {\n      createMutation.mutate(editingItem);\n    } else {\n      updateMutation.mutate({ id: editingItem.id, data: editingItem });\n    }\n  };\n\n  const handleImageUpload = async () => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/objects/upload\");\n      const data = await response.json();\n      return { method: \"PUT\" as const, url: data.uploadURL };\n    } catch (error) {\n      toast({\n        title: \"Error getting upload URL\",\n        description: \"Failed to prepare file upload\",\n        variant: \"destructive\",\n      });\n      throw error;\n    }\n  };\n\n  const handleImageUploadComplete = async (result: any) => {\n    if (result.successful && result.successful.length > 0) {\n      const uploadedFile = result.successful[0];\n      try {\n        const response = await apiRequest(\"PUT\", \"/api/admin/images\", {\n          imageURL: uploadedFile.uploadURL,\n        });\n        const data = await response.json();\n        setEditingItem({ ...editingItem, authorImageUrl: data.objectPath });\n        toast({ title: \"Image uploaded successfully\" });\n      } catch (error) {\n        toast({\n          title: \"Error processing image\",\n          description: \"Failed to save image\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n\n  const renderStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star\n        key={i}\n        className={`w-4 h-4 ${\n          i < rating ? \"text-yellow-400 fill-current\" : \"text-gray-300\"\n        }`}\n      />\n    ));\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Testimonial Manager</h1>\n        <p className=\"text-gray-600\">Manage client testimonials and reviews.</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <CardTitle>Testimonials</CardTitle>\n            <Button onClick={handleCreate} data-testid=\"button-add-testimonial\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add Testimonial\n            </Button>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n              {testimonials.map((testimonial: any) => (\n                <div key={testimonial.id} className=\"flex items-start justify-between p-4 border rounded-lg\">\n                  <div className=\"flex items-start gap-4 flex-1\">\n                    {testimonial.authorImageUrl ? (\n                      <img \n                        src={testimonial.authorImageUrl} \n                        alt={testimonial.authorName}\n                        className=\"w-12 h-12 rounded-full object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-12 h-12 rounded-full bg-gray-200 flex items-center justify-center\">\n                        <span className=\"text-gray-500 font-medium\">\n                          {testimonial.authorName.split(' ').map((n: string) => n[0]).join('')}\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <h3 className=\"font-medium\">{testimonial.authorName}</h3>\n                        {testimonial.isFeatured && <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />}\n                      </div>\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        {renderStars(testimonial.rating)}\n                        <span className=\"text-sm text-gray-500\">({testimonial.rating}/5)</span>\n                      </div>\n                      <p className=\"text-sm text-blue-600 mb-1\">\n                        {testimonial.authorTitle}\n                        {testimonial.authorCompany && `, ${testimonial.authorCompany}`}\n                      </p>\n                      <p className=\"text-sm text-gray-600 mb-2 line-clamp-3\">{testimonial.content}</p>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant={testimonial.isActive ? \"default\" : \"secondary\"}>\n                          {testimonial.isActive ? \"Active\" : \"Inactive\"}\n                        </Badge>\n                        {testimonial.isFeatured && (\n                          <Badge variant=\"outline\" className=\"text-yellow-600 border-yellow-600\">\n                            Featured\n                          </Badge>\n                        )}\n                        {testimonial.isActive ? (\n                          <Eye className=\"w-4 h-4 text-green-600\" />\n                        ) : (\n                          <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2 ml-4\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setEditingItem(testimonial)}\n                      data-testid={`button-edit-testimonial-${testimonial.id}`}\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"destructive\"\n                      onClick={() => deleteMutation.mutate(testimonial.id)}\n                      data-testid={`button-delete-testimonial-${testimonial.id}`}\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {editingItem && (\n          <Card>\n            <CardHeader>\n              <CardTitle>{isCreating ? \"Create Testimonial\" : \"Edit Testimonial\"}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                  <Label htmlFor=\"content\">Testimonial Content</Label>\n                  <Textarea\n                    id=\"content\"\n                    value={editingItem.content || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, content: e.target.value })}\n                    required\n                    rows={4}\n                    placeholder=\"Share your testimonial content here...\"\n                    data-testid=\"textarea-testimonial-content\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"authorName\">Author Name</Label>\n                  <Input\n                    id=\"authorName\"\n                    value={editingItem.authorName || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, authorName: e.target.value })}\n                    required\n                    data-testid=\"input-testimonial-author-name\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"authorTitle\">Author Title</Label>\n                  <Input\n                    id=\"authorTitle\"\n                    value={editingItem.authorTitle || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, authorTitle: e.target.value })}\n                    placeholder=\"CEO, Director of Engineering, etc.\"\n                    data-testid=\"input-testimonial-author-title\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"authorCompany\">Author Company</Label>\n                  <Input\n                    id=\"authorCompany\"\n                    value={editingItem.authorCompany || \"\"}\n                    onChange={(e) => setEditingItem({ ...editingItem, authorCompany: e.target.value })}\n                    data-testid=\"input-testimonial-author-company\"\n                  />\n                </div>\n\n                <div>\n                  <Label>Author Profile Image</Label>\n                  <div className=\"mt-2\">\n                    <ObjectUploader\n                      onGetUploadParameters={handleImageUpload}\n                      onComplete={handleImageUploadComplete}\n                      maxNumberOfFiles={1}\n                      maxFileSize={5 * 1024 * 1024} // 5MB\n                    >\n                      <span>Upload Author Image</span>\n                    </ObjectUploader>\n                    {editingItem.authorImageUrl && (\n                      <div className=\"mt-2\">\n                        <img \n                          src={editingItem.authorImageUrl} \n                          alt=\"Author preview\" \n                          className=\"w-16 h-16 rounded-full object-cover border\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"rating\">Rating</Label>\n                  <div className=\"flex items-center gap-4 mt-2\">\n                    <Input\n                      id=\"rating\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"5\"\n                      value={editingItem.rating || 5}\n                      onChange={(e) => setEditingItem({ ...editingItem, rating: parseInt(e.target.value) })}\n                      className=\"w-20\"\n                      data-testid=\"input-testimonial-rating\"\n                    />\n                    <div className=\"flex gap-1\">\n                      {renderStars(editingItem.rating || 5)}\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"sortOrder\">Sort Order</Label>\n                  <Input\n                    id=\"sortOrder\"\n                    type=\"number\"\n                    value={editingItem.sortOrder || 0}\n                    onChange={(e) => setEditingItem({ ...editingItem, sortOrder: parseInt(e.target.value) })}\n                    data-testid=\"input-testimonial-sort-order\"\n                  />\n                </div>\n\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"isFeatured\"\n                      checked={editingItem.isFeatured || false}\n                      onCheckedChange={(checked) => setEditingItem({ ...editingItem, isFeatured: checked })}\n                      data-testid=\"switch-testimonial-featured\"\n                    />\n                    <Label htmlFor=\"isFeatured\">Featured</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"isActive\"\n                      checked={editingItem.isActive || false}\n                      onCheckedChange={(checked) => setEditingItem({ ...editingItem, isActive: checked })}\n                      data-testid=\"switch-testimonial-active\"\n                    />\n                    <Label htmlFor=\"isActive\">Active</Label>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button type=\"submit\" disabled={createMutation.isPending || updateMutation.isPending} data-testid=\"button-save-testimonial\">\n                    {isCreating ? \"Create Testimonial\" : \"Update Testimonial\"}\n                  </Button>\n                  <Button type=\"button\" variant=\"outline\" onClick={() => { setEditingItem(null); setIsCreating(false); }} data-testid=\"button-cancel-testimonial\">\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":14920},"client/src/components/ServicesMegaMenu.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Users, \n  Code, \n  Cpu, \n  Smartphone, \n  Database, \n  Cloud, \n  Bot, \n  TrendingUp,\n  Building2,\n  Layers,\n  Settings,\n  ArrowRight,\n  Zap\n} from \"lucide-react\";\n\ninterface ServicesMegaMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function ServicesMegaMenu({ isOpen, onClose }: ServicesMegaMenuProps) {\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        onClose();\n      }\n    };\n\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n      document.addEventListener('keydown', handleEscape);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n        document.removeEventListener('keydown', handleEscape);\n      };\n    }\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  const serviceModels = [\n    {\n      title: \"Dedicated Team\",\n      description: \"Full-time dedicated development teams for your projects\",\n      href: \"/services/dedicated-team\",\n      icon: Users\n    },\n    {\n      title: \"Staff Augmentation\",\n      description: \"Scale your team with skilled developers\",\n      href: \"/services/staff-augmentation\", \n      icon: TrendingUp\n    },\n    {\n      title: \"Project Management\",\n      description: \"End-to-end project delivery and management\",\n      href: \"/services/project-delivery\",\n      icon: Settings\n    },\n    {\n      title: \"Virtual CTO\",\n      description: \"Technical leadership and strategic guidance\",\n      href: \"/services/virtual-cto\",\n      icon: Cpu\n    },\n    {\n      title: \"Enterprise Search\",\n      description: \"Advanced search solutions for enterprises\",\n      href: \"/services/enterprise-search\",\n      icon: Database\n    }\n  ];\n\n  const customSolutions = [\n    {\n      title: \"Artificial Intelligence\",\n      description: \"AI/ML solutions and intelligent applications\",\n      href: \"/services/ai-ml-development\",\n      icon: Cpu\n    },\n    {\n      title: \"Custom Software Development\", \n      description: \"Tailored software solutions for your business\",\n      href: \"/services/custom-software-development\",\n      icon: Code\n    },\n    {\n      title: \"Web Application Development\",\n      description: \"Modern web applications and platforms\",\n      href: \"/services/web-application-development\",\n      icon: Layers\n    },\n    {\n      title: \"Mobile Development\",\n      description: \"Native and cross-platform mobile apps\",\n      href: \"/services/mobile-app-development\",\n      icon: Smartphone\n    },\n    {\n      title: \"ERP/CRM/CMS Systems\",\n      description: \"Enterprise resource planning and management\",\n      href: \"/services/erp-crm-cms-development\",\n      icon: Building2\n    },\n    {\n      title: \"Data Engineering\",\n      description: \"Data pipelines and analytics solutions\", \n      href: \"/services/data-engineering\",\n      icon: Database\n    },\n    {\n      title: \"Cloud Services\",\n      description: \"Cloud migration and infrastructure solutions\",\n      href: \"/services/cloud-services\",\n      icon: Cloud\n    },\n    {\n      title: \"AI Chatbots\",\n      description: \"Intelligent conversational interfaces\",\n      href: \"/services/ai-chatbots\",\n      icon: Bot\n    }\n  ];\n\n  const handleLinkClick = () => {\n    onClose();\n  };\n\n  return (\n    <div \n      ref={menuRef}\n      className=\"fixed top-16 left-0 right-0 bg-white shadow-2xl border-t border-gray-100 z-50 transform transition-all duration-200 ease-in-out\"\n      style={{ \n        opacity: isOpen ? 1 : 0,\n        visibility: isOpen ? 'visible' : 'hidden',\n        transform: isOpen ? 'translateY(0)' : 'translateY(-10px)'\n      }}\n      onMouseEnter={() => {}} // Keep menu open when hovering over it\n      onMouseLeave={onClose}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 md:py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8\">\n          {/* Service Models */}\n          <div className=\"bg-blue-50 rounded-lg p-4 md:p-6\">\n            <h3 className=\"text-lg font-semibold text-blue-600 mb-4 flex items-center\">\n              <Users className=\"w-5 h-5 mr-2\" />\n              Service Models\n            </h3>\n            <div className=\"space-y-2\">\n              {serviceModels.map((service) => {\n                const IconComponent = service.icon;\n                return (\n                  <Link key={service.href} href={service.href}>\n                    <div \n                      onClick={handleLinkClick}\n                      className=\"flex items-start p-2 md:p-3 rounded-lg hover:bg-white hover:shadow-sm transition-all cursor-pointer group\"\n                      data-testid={`mega-menu-${service.href.split('/').pop()}`}\n                    >\n                      <div className=\"w-6 h-6 md:w-8 md:h-8 bg-blue-100 rounded-md flex items-center justify-center mr-3 group-hover:bg-blue-200 transition-colors flex-shrink-0\">\n                        <IconComponent className=\"w-3 h-3 md:w-4 md:h-4 text-blue-600\" />\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <h4 className=\"font-medium text-gray-900 group-hover:text-blue-600 transition-colors text-sm md:text-base\">{service.title}</h4>\n                        <p className=\"text-xs md:text-sm text-gray-600 mt-1 line-clamp-2\">{service.description}</p>\n                      </div>\n                    </div>\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Custom Solutions */}\n          <div className=\"bg-green-50 rounded-lg p-4 md:p-6\">\n            <h3 className=\"text-lg font-semibold text-green-600 mb-4 flex items-center\">\n              <Code className=\"w-5 h-5 mr-2\" />\n              Custom Solutions\n            </h3>\n            <div className=\"grid grid-cols-1 gap-2\">\n              {customSolutions.slice(0, 6).map((service) => {\n                const IconComponent = service.icon;\n                return (\n                  <Link key={service.href} href={service.href}>\n                    <div \n                      onClick={handleLinkClick}\n                      className=\"flex items-start p-2 md:p-3 rounded-lg hover:bg-white hover:shadow-sm transition-all cursor-pointer group\"\n                      data-testid={`mega-menu-${service.href.split('/').pop()}`}\n                    >\n                      <div className=\"w-6 h-6 md:w-8 md:h-8 bg-green-100 rounded-md flex items-center justify-center mr-3 group-hover:bg-green-200 transition-colors flex-shrink-0\">\n                        <IconComponent className=\"w-3 h-3 md:w-4 md:h-4 text-green-600\" />\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <h4 className=\"font-medium text-gray-900 group-hover:text-green-600 transition-colors text-sm md:text-base\">{service.title}</h4>\n                        <p className=\"text-xs md:text-sm text-gray-600 mt-1 line-clamp-2\">{service.description}</p>\n                      </div>\n                    </div>\n                  </Link>\n                );\n              })}\n              <Link href=\"/services\">\n                <div \n                  onClick={handleLinkClick}\n                  className=\"flex items-center justify-center p-2 md:p-3 rounded-lg border-2 border-dashed border-green-200 hover:border-green-300 hover:bg-white transition-all cursor-pointer group\"\n                  data-testid=\"mega-menu-view-all-services\"\n                >\n                  <span className=\"text-sm text-green-600 group-hover:text-green-700 font-medium\">View All Services →</span>\n                </div>\n              </Link>\n            </div>\n          </div>\n\n          {/* Why Choose Pi Tetris */}\n          <div className=\"md:row-span-1\">\n            <Card className=\"bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200 h-full\">\n              <CardContent className=\"p-4 md:p-6 h-full flex flex-col\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-10 h-10 md:w-12 md:h-12 bg-purple-600 rounded-lg flex items-center justify-center mr-3\">\n                    <Zap className=\"w-5 h-5 md:w-6 md:h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-base md:text-lg font-semibold text-gray-900\">Why Pi Tetris?</h3>\n                    <Badge className=\"bg-purple-600 text-white mt-1 text-xs\">Expert Development</Badge>\n                  </div>\n                </div>\n                <p className=\"text-gray-700 mb-4 text-xs md:text-sm flex-1\">\n                  At our core we are a software development services company. Build your software with our expert team.\n                </p>\n                <div className=\"space-y-2 text-xs md:text-sm text-gray-600 mb-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-2 h-2 bg-purple-600 rounded-full mr-2 flex-shrink-0\"></div>\n                    Expert AI/ML Development\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-2 h-2 bg-purple-600 rounded-full mr-2 flex-shrink-0\"></div>\n                    Enterprise-Grade Solutions\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-2 h-2 bg-purple-600 rounded-full mr-2 flex-shrink-0\"></div>\n                    24/7 Support & Maintenance\n                  </div>\n                </div>\n                <div className=\"flex flex-col space-y-2 mt-auto\">\n                  <Link href=\"/contact\">\n                    <Button onClick={handleLinkClick} className=\"w-full bg-purple-600 hover:bg-purple-700 text-sm\" data-testid=\"mega-menu-get-in-touch\">\n                      Get In Touch\n                      <ArrowRight className=\"ml-2 h-3 w-3 md:h-4 md:w-4\" />\n                    </Button>\n                  </Link>\n                  <Link href=\"/portfolio\">\n                    <Button onClick={handleLinkClick} variant=\"outline\" className=\"w-full border-purple-300 text-purple-600 hover:bg-purple-50 text-sm\" data-testid=\"mega-menu-view-portfolio\">\n                      View Our Work\n                    </Button>\n                  </Link>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10832},"client/src/pages/services/AIMLDevelopment.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowLeft, ArrowRight, Cpu, CheckCircle, Brain, Bot, TrendingUp, Zap, Database, BarChart3, Network, Code, Layers, DollarSign, Target, Shield } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport aiImage from \"@assets/generated_images/AI_machine_learning_technology_11d627ed.png\";\n\nexport default function AIMLDevelopment() {\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Breadcrumb */}\n        <nav className=\"mb-8\">\n          <Link href=\"/services\">\n            <span className=\"inline-flex items-center text-blue-600 hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-back-services\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Services\n            </span>\n          </Link>\n        </nav>\n\n        {/* Service Header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"w-20 h-20 bg-purple-100 rounded-full flex items-center justify-center\">\n              <Brain className=\"w-10 h-10 text-purple-600\" />\n            </div>\n          </div>\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">AI & Machine Learning Development</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto mb-8\">\n            Transform your business with cutting-edge artificial intelligence and machine learning solutions. From predictive analytics to computer vision, we build AI systems that drive real business value.\n          </p>\n          \n          {/* Hero Image */}\n          <div className=\"max-w-4xl mx-auto mb-12\">\n            <img \n              src={aiImage} \n              alt=\"AI/ML Development\" \n              className=\"w-full h-64 md:h-80 object-cover rounded-xl shadow-lg\"\n            />\n          </div>\n          \n          {/* Key AI Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 max-w-4xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-purple-600 mb-2\">85%</div>\n              <div className=\"text-sm text-gray-600\">Accuracy Improvement</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600 mb-2\">10+</div>\n              <div className=\"text-sm text-gray-600\">AI/ML Models</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600 mb-2\">50M+</div>\n              <div className=\"text-sm text-gray-600\">Data Points Processed</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-orange-600 mb-2\">3x</div>\n              <div className=\"text-sm text-gray-600\">Performance Boost</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12 mb-16\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"space-y-12\">\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Comprehensive AI/ML Solutions</h2>\n                <div className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-xl p-8 mb-8\">\n                  <p className=\"text-lg text-gray-700 leading-relaxed\">\n                    Our AI/ML development services span the complete data science lifecycle—from data engineering and model development to deployment and continuous monitoring. We build intelligent systems that learn, adapt, and deliver measurable business outcomes.\n                  </p>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n                  <div>\n                    <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">AI Capabilities:</h3>\n                    <ul className=\"space-y-2\">\n                      <li className=\"flex items-center text-gray-600\">\n                        <Brain className=\"w-5 h-5 text-purple-500 mr-3\" />\n                        Computer Vision & Image Recognition\n                      </li>\n                      <li className=\"flex items-center text-gray-600\">\n                        <Bot className=\"w-5 h-5 text-purple-500 mr-3\" />\n                        Natural Language Processing (NLP)\n                      </li>\n                      <li className=\"flex items-center text-gray-600\">\n                        <BarChart3 className=\"w-5 h-5 text-purple-500 mr-3\" />\n                        Predictive Analytics & Forecasting\n                      </li>\n                      <li className=\"flex items-center text-gray-600\">\n                        <Network className=\"w-5 h-5 text-purple-500 mr-3\" />\n                        Deep Learning & Neural Networks\n                      </li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Industry Applications:</h3>\n                    <ul className=\"space-y-2\">\n                      <li className=\"flex items-center text-gray-600\">\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                        Healthcare & Medical Diagnosis\n                      </li>\n                      <li className=\"flex items-center text-gray-600\">\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                        Financial Services & FinTech\n                      </li>\n                      <li className=\"flex items-center text-gray-600\">\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                        E-commerce & Retail Analytics\n                      </li>\n                      <li className=\"flex items-center text-gray-600\">\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                        Manufacturing & Supply Chain\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                \n                <h3 className=\"text-2xl font-semibold text-gray-900 mb-6\">Core AI/ML Services</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <Card className=\"border-purple-200 hover:shadow-lg transition-shadow\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <BarChart3 className=\"w-6 h-6 text-purple-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Predictive Analytics</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">Advanced forecasting models for demand planning, risk assessment, and customer behavior prediction with 95%+ accuracy.</p>\n                      <div className=\"text-sm text-purple-600\">Tools: TensorFlow, PyTorch, Scikit-learn</div>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-blue-200 hover:shadow-lg transition-shadow\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Brain className=\"w-6 h-6 text-blue-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Computer Vision</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">Image classification, object detection, facial recognition, and automated quality inspection systems for real-world applications.</p>\n                      <div className=\"text-sm text-blue-600\">Tools: OpenCV, YOLO, ResNet</div>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-green-200 hover:shadow-lg transition-shadow\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Bot className=\"w-6 h-6 text-green-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Natural Language Processing</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">Sentiment analysis, document classification, chatbots, and language translation with state-of-the-art transformer models.</p>\n                      <div className=\"text-sm text-green-600\">Tools: BERT, GPT, spaCy</div>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-orange-200 hover:shadow-lg transition-shadow\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Cpu className=\"w-6 h-6 text-orange-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Deep Learning</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">Custom neural network architectures for complex pattern recognition, time series analysis, and autonomous decision making.</p>\n                      <div className=\"text-sm text-orange-600\">Tools: Keras, PyTorch Lightning</div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </section>\n              \n              {/* Technology Stack */}\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Our AI/ML Technology Stack</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n                  <div className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-yellow-500 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <Code className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold mb-3\">Programming Languages</h3>\n                    <div className=\"flex flex-wrap gap-2 justify-center\">\n                      <Badge>Python</Badge>\n                      <Badge>R</Badge>\n                      <Badge>Julia</Badge>\n                      <Badge>Scala</Badge>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-blue-500 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <Layers className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold mb-3\">ML Frameworks</h3>\n                    <div className=\"flex flex-wrap gap-2 justify-center\">\n                      <Badge>TensorFlow</Badge>\n                      <Badge>PyTorch</Badge>\n                      <Badge>Scikit-learn</Badge>\n                      <Badge>Keras</Badge>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-green-500 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <Database className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold mb-3\">Data & Cloud</h3>\n                    <div className=\"flex flex-wrap gap-2 justify-center\">\n                      <Badge>AWS SageMaker</Badge>\n                      <Badge>Google Cloud AI</Badge>\n                      <Badge>Azure ML</Badge>\n                      <Badge>Docker</Badge>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">AI/ML Development Process</h2>\n                <div className=\"space-y-6\">\n                  <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"w-10 h-10 bg-purple-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold text-sm\">1</div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Data Discovery & Preparation</h3>\n                        <p className=\"text-gray-600 mb-4\">Comprehensive data audit, quality assessment, feature engineering, and preprocessing. We ensure your data is ML-ready and compliant.</p>\n                        <div className=\"text-sm text-purple-600\">Duration: 2-3 weeks</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"w-10 h-10 bg-purple-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold text-sm\">2</div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Model Development & Training</h3>\n                        <p className=\"text-gray-600 mb-4\">Algorithm selection, hyperparameter tuning, cross-validation, and performance optimization using state-of-the-art ML techniques.</p>\n                        <div className=\"text-sm text-purple-600\">Duration: 3-6 weeks</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"w-10 h-10 bg-purple-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold text-sm\">3</div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Model Deployment & Integration</h3>\n                        <p className=\"text-gray-600 mb-4\">Production deployment with REST APIs, batch processing pipelines, and seamless integration with existing business systems.</p>\n                        <div className=\"text-sm text-purple-600\">Duration: 2-4 weeks</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"w-10 h-10 bg-purple-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold text-sm\">4</div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Monitoring & Optimization</h3>\n                        <p className=\"text-gray-600 mb-4\">Real-time monitoring, performance tracking, model retraining, and continuous improvement with MLOps best practices.</p>\n                        <div className=\"text-sm text-purple-600\">Ongoing: Monthly reviews</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n              \n              {/* Pricing Models */}\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">AI/ML Project Pricing</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <Card className=\"border-2 border-purple-200 relative\">\n                    <div className=\"absolute -top-3 left-6\">\n                      <Badge className=\"bg-purple-600 text-white\">Most Popular</Badge>\n                    </div>\n                    <CardHeader>\n                      <CardTitle className=\"text-xl\">Proof of Concept</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-3xl font-bold text-purple-600 mb-4\">$15,000<span className=\"text-lg text-gray-500\">-$25,000</span></div>\n                      <div className=\"text-sm text-gray-600 mb-4\">4-6 week timeline</div>\n                      <ul className=\"space-y-2 text-sm\">\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Data analysis & feasibility study</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Prototype model development</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Performance validation</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Technical documentation</li>\n                      </ul>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-gray-200\">\n                    <CardHeader>\n                      <CardTitle className=\"text-xl\">Production MVP</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-3xl font-bold text-gray-600 mb-4\">$50,000<span className=\"text-lg text-gray-500\">-$100,000</span></div>\n                      <div className=\"text-sm text-gray-600 mb-4\">8-12 week timeline</div>\n                      <ul className=\"space-y-2 text-sm\">\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Production-ready model</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />API development & deployment</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Monitoring & alerting</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />User interface integration</li>\n                      </ul>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-gray-200\">\n                    <CardHeader>\n                      <CardTitle className=\"text-xl\">Enterprise Solution</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-3xl font-bold text-gray-600 mb-4\">$100,000+</div>\n                      <div className=\"text-sm text-gray-600 mb-4\">3-6 month timeline</div>\n                      <ul className=\"space-y-2 text-sm\">\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Complex multi-model systems</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Scalable infrastructure</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Custom MLOps pipeline</li>\n                        <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />Training & support</li>\n                      </ul>\n                    </CardContent>\n                  </Card>\n                </div>\n              </section>\n\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Use Cases by Industry</h2>\n                <div className=\"space-y-4\">\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Healthcare</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600\">\n                      <div>• Medical image analysis</div>\n                      <div>• Drug discovery acceleration</div>\n                      <div>• Patient risk prediction</div>\n                      <div>• Clinical decision support</div>\n                    </div>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Finance</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600\">\n                      <div>• Fraud detection systems</div>\n                      <div>• Algorithmic trading</div>\n                      <div>• Credit risk assessment</div>\n                      <div>• Customer segmentation</div>\n                    </div>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Retail & E-commerce</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600\">\n                      <div>• Recommendation engines</div>\n                      <div>• Dynamic pricing optimization</div>\n                      <div>• Inventory management</div>\n                      <div>• Customer churn prediction</div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-8\">\n            <Card className=\"bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200\">\n              <CardHeader>\n                <CardTitle className=\"text-purple-900\">Technologies We Use</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">ML Frameworks</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">TensorFlow</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">PyTorch</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Scikit-learn</Badge>\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Languages</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">Python</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">R</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">JavaScript</Badge>\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Cloud Platforms</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">AWS SageMaker</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Google AI</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Azure ML</Badge>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Why Choose Our AI Services</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-purple-600 mr-3\" />\n                    <span className=\"text-sm\">Expert AI/ML team</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-purple-600 mr-3\" />\n                    <span className=\"text-sm\">Proven track record</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-purple-600 mr-3\" />\n                    <span className=\"text-sm\">End-to-end solutions</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-purple-600 mr-3\" />\n                    <span className=\"text-sm\">Scalable architectures</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-purple-600 mr-3\" />\n                    <span className=\"text-sm\">Ongoing support</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"bg-gradient-to-r from-purple-600 to-purple-700 rounded-2xl p-12 text-center text-white\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Harness AI for Your Business?</h2>\n          <p className=\"text-xl text-purple-100 mb-8 max-w-2xl mx-auto\">\n            Let's explore how AI and machine learning can transform your operations and drive innovation.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" variant=\"secondary\" data-testid=\"button-start-ai-project\">\n                Start AI Project\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/portfolio\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-purple-600\" data-testid=\"button-view-ai-cases\">\n                View AI Case Studies\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":25657},"client/src/pages/services/CustomSoftwareDevelopment.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowLeft, ArrowRight, Code, CheckCircle, Layers, Zap, Settings, Globe } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function CustomSoftwareDevelopment() {\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Breadcrumb */}\n        <nav className=\"mb-8\">\n          <Link href=\"/services\">\n            <span className=\"inline-flex items-center text-blue-600 hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-back-services\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Services\n            </span>\n          </Link>\n        </nav>\n\n        {/* Service Header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center\">\n              <Code className=\"w-10 h-10 text-green-600\" />\n            </div>\n          </div>\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">Custom Software Development</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            Build tailored software solutions that perfectly fit your business needs. From concept to deployment, we create scalable, secure, and user-friendly applications that drive your business forward.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12 mb-16\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"space-y-8\">\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Our Development Approach</h2>\n                <p className=\"text-gray-600 mb-6\">\n                  We build custom software that solves real business problems. Our approach combines industry best practices with innovative technologies to deliver solutions that scale with your business.\n                </p>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <Card className=\"border-green-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Layers className=\"w-6 h-6 text-green-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Scalable Architecture</h3>\n                      </div>\n                      <p className=\"text-gray-600\">Modern, scalable architectures that grow with your business needs.</p>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-blue-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Settings className=\"w-6 h-6 text-blue-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Agile Development</h3>\n                      </div>\n                      <p className=\"text-gray-600\">Iterative development process with regular feedback and adjustments.</p>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-purple-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Zap className=\"w-6 h-6 text-purple-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Performance Focused</h3>\n                      </div>\n                      <p className=\"text-gray-600\">Optimized for speed, efficiency, and exceptional user experience.</p>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-orange-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Globe className=\"w-6 h-6 text-orange-600 mr-3\" />\n                        <h3 className=\"text-lg font-semibold\">Cross-Platform</h3>\n                      </div>\n                      <p className=\"text-gray-600\">Solutions that work seamlessly across all platforms and devices.</p>\n                    </CardContent>\n                  </Card>\n                </div>\n              </section>\n\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Development Services</h2>\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-xl font-semibold mb-4\">Web Applications</h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      Full-stack web applications with modern frameworks and responsive design.\n                    </p>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                      <Badge variant=\"secondary\">React</Badge>\n                      <Badge variant=\"secondary\">Vue.js</Badge>\n                      <Badge variant=\"secondary\">Angular</Badge>\n                      <Badge variant=\"secondary\">Node.js</Badge>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-xl font-semibold mb-4\">Desktop Applications</h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      Native and cross-platform desktop applications for Windows, macOS, and Linux.\n                    </p>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                      <Badge variant=\"secondary\">Electron</Badge>\n                      <Badge variant=\"secondary\">.NET</Badge>\n                      <Badge variant=\"secondary\">Java</Badge>\n                      <Badge variant=\"secondary\">Python</Badge>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-xl font-semibold mb-4\">API Development</h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      RESTful APIs and microservices for system integration and data access.\n                    </p>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                      <Badge variant=\"secondary\">REST API</Badge>\n                      <Badge variant=\"secondary\">GraphQL</Badge>\n                      <Badge variant=\"secondary\">Microservices</Badge>\n                      <Badge variant=\"secondary\">OAuth</Badge>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Development Process</h2>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">1</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Discovery & Planning</h3>\n                      <p className=\"text-gray-600\">Deep dive into your requirements, goals, and technical constraints.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">2</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Design & Architecture</h3>\n                      <p className=\"text-gray-600\">Create detailed designs, wireframes, and technical architecture.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">3</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Development & Testing</h3>\n                      <p className=\"text-gray-600\">Agile development with continuous testing and quality assurance.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">4</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Deployment & Launch</h3>\n                      <p className=\"text-gray-600\">Smooth deployment with monitoring and performance optimization.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">5</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Maintenance & Support</h3>\n                      <p className=\"text-gray-600\">Ongoing support, updates, and feature enhancements.</p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-8\">\n            <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\n              <CardHeader>\n                <CardTitle className=\"text-green-900\">Why Custom Software?</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-green-600 mr-3\" />\n                    <span className=\"text-sm text-green-900\">Perfect fit for your needs</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-green-600 mr-3\" />\n                    <span className=\"text-sm text-green-900\">Competitive advantage</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-green-600 mr-3\" />\n                    <span className=\"text-sm text-green-900\">Scalable architecture</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-green-600 mr-3\" />\n                    <span className=\"text-sm text-green-900\">Full ownership</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-green-600 mr-3\" />\n                    <span className=\"text-sm text-green-900\">Integration flexibility</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Technology Stack</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Frontend</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">React</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Vue.js</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Angular</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">TypeScript</Badge>\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Backend</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">Node.js</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Python</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">.NET</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Java</Badge>\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Cloud & DevOps</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">AWS</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Docker</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Kubernetes</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">CI/CD</Badge>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"bg-gradient-to-r from-green-600 to-green-700 rounded-2xl p-12 text-center text-white\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Build Your Custom Solution?</h2>\n          <p className=\"text-xl text-green-100 mb-8 max-w-2xl mx-auto\">\n            Let's discuss your project requirements and create a tailored software solution that drives your business success.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" variant=\"secondary\" data-testid=\"button-start-custom-project\">\n                Start Your Project\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/portfolio\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-green-600\" data-testid=\"button-view-custom-portfolio\">\n                View Our Portfolio\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":14336},"client/src/pages/services/DedicatedTeam.tsx":{"content":"import { ArrowRight, Users, Zap, Shield, Globe, CheckCircle, Clock, Target, Code, Database, Settings } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function DedicatedTeam() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-purple-700 to-indigo-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Users className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Dedicated Development Teams</h1>\n            <p className=\"text-xl text-purple-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Scale your development capacity with a full-time dedicated team that works exclusively on your projects. Get experienced developers, project managers, and quality assurance specialists as an extension of your in-house team.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-purple-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-build-team\">\n                  Build Your Team\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-purple-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-success\">\n                  View Success Stories\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Comprehensive Team Solutions</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From single developers to complete cross-functional teams, we provide skilled professionals who integrate seamlessly with your workflow and business objectives.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Code className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Full-Stack Development Teams</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Complete development teams with frontend, backend, and mobile specialists working together to deliver end-to-end solutions for your project.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Senior & mid-level developers\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Full-time commitment (40+ hrs/week)\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Cross-functional expertise\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Target className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Project Management & Delivery</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Dedicated project managers and Scrum masters ensure smooth project execution with agile methodologies and transparent communication.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Certified Scrum Masters\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Agile development practices\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Regular sprint reviews & demos\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Quality Assurance & Testing</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Comprehensive QA teams with automated testing specialists, manual testers, and performance engineers ensuring high-quality deliverables.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated testing frameworks\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Manual & exploratory testing\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance & security testing\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Settings className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">DevOps & Infrastructure</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    DevOps specialists and cloud architects to set up CI/CD pipelines, infrastructure automation, and deployment strategies for scalable solutions.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      CI/CD pipeline setup\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Cloud infrastructure management\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Monitoring & alerting setup\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Zap className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Rapid Team Scaling</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Scale your team up or down based on project phases and requirements without the overhead of recruitment, onboarding, and HR management.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Flexible team composition\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Quick onboarding (1-2 weeks)\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      No recruitment overhead\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Specialized Expertise</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Access specialized skills including AI/ML engineers, blockchain developers, data scientists, and architecture specialists for complex projects.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      AI/ML & data science experts\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Solution architects\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Industry-specific knowledge\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Key Advantages */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Why Choose Dedicated Teams?</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Get the benefits of an extended in-house team without the overhead and complexity of direct hiring.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Clock className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">60% Cost Savings</h3>\n              <p className=\"text-gray-600\">Reduce development costs compared to local hiring while maintaining high quality standards.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Zap className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">2-Week Setup</h3>\n              <p className=\"text-gray-600\">Quick team assembly and onboarding to start your project without delays.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Shield className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">95% Retention Rate</h3>\n              <p className=\"text-gray-600\">High client satisfaction with dedicated teams that become true partners in your success.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Globe className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">24/7 Coverage</h3>\n              <p className=\"text-gray-600\">Global talent pool ensuring round-the-clock development and support coverage.</p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Engagement Models */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Flexible Engagement Models</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Choose the engagement model that best fits your project requirements and budget.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full border-2 border-purple-200 relative hover:shadow-lg transition-shadow\">\n                <div className=\"absolute -top-3 left-6\">\n                  <Badge className=\"bg-purple-600 text-white\">Most Popular</Badge>\n                </div>\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-2xl\">Dedicated Team</CardTitle>\n                  <div className=\"text-4xl font-bold text-purple-600 mt-4\">$3,500<span className=\"text-lg text-gray-500\">/month</span></div>\n                  <p className=\"text-gray-600\">Per developer</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Full-time dedicated developer</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>40+ hours per week commitment</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Project management included</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Quality assurance & testing</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Direct team communication</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow\">\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-2xl\">Scalable Team</CardTitle>\n                  <div className=\"text-4xl font-bold text-gray-900 mt-4\">$3,200<span className=\"text-lg text-gray-500\">/month</span></div>\n                  <p className=\"text-gray-600\">Per developer (5+ team)</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Team of 5+ developers</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Flexible scaling up/down</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Technical lead included</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Architecture guidance</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Cross-functional expertise</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow\">\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-2xl\">Enterprise</CardTitle>\n                  <div className=\"text-4xl font-bold text-gray-900 mt-4\">Custom</div>\n                  <p className=\"text-gray-600\">Tailored solution</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Large teams (10+ developers)</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Multiple technology stacks</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Custom SLAs & processes</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>24/7 dedicated support</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>On-site team options</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-purple-600 to-indigo-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Scale Your Development Team?</h2>\n            <p className=\"text-xl text-purple-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Get a dedicated team of experienced developers, project managers, and specialists who work exclusively on your projects and become an extension of your business.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-purple-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-start-building\">\n                  Start Building Your Team\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-purple-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-case-studies\">\n                  View Case Studies\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":26525},"client/src/pages/services/ERPCRMCMSDevelopment.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowLeft, ArrowRight, Building2, CheckCircle, Users, Database, Settings, BarChart } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function ERPCRMCMSDevelopment() {\n  return (\n    <div className=\"min-h-screen py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Breadcrumb */}\n        <nav className=\"mb-8\">\n          <Link href=\"/services\">\n            <span className=\"inline-flex items-center text-blue-600 hover:text-blue-700 transition-colors cursor-pointer\" data-testid=\"link-back-services\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Services\n            </span>\n          </Link>\n        </nav>\n\n        {/* Service Header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center\">\n              <Building2 className=\"w-10 h-10 text-blue-600\" />\n            </div>\n          </div>\n          <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">ERP, CRM & CMS Development</h1>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            Streamline your business operations with custom Enterprise Resource Planning, Customer Relationship Management, and Content Management solutions tailored to your specific needs.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12 mb-16\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"space-y-8\">\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Our Enterprise Solutions</h2>\n                <div className=\"grid grid-cols-1 gap-6\">\n                  <Card className=\"border-blue-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Settings className=\"w-6 h-6 text-blue-600 mr-3\" />\n                        <h3 className=\"text-xl font-semibold\">ERP Systems</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">\n                        Integrate all your business processes into a single, unified system. Our ERP solutions cover finance, HR, supply chain, manufacturing, and more.\n                      </p>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                        <span className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded\">Financial Management</span>\n                        <span className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded\">Inventory Control</span>\n                        <span className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded\">HR Management</span>\n                        <span className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded\">Supply Chain</span>\n                      </div>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-green-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Users className=\"w-6 h-6 text-green-600 mr-3\" />\n                        <h3 className=\"text-xl font-semibold\">CRM Systems</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">\n                        Manage customer relationships, track sales pipelines, and enhance customer service with our comprehensive CRM solutions.\n                      </p>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                        <span className=\"text-xs bg-green-50 text-green-700 px-2 py-1 rounded\">Lead Management</span>\n                        <span className=\"text-xs bg-green-50 text-green-700 px-2 py-1 rounded\">Sales Pipeline</span>\n                        <span className=\"text-xs bg-green-50 text-green-700 px-2 py-1 rounded\">Customer Support</span>\n                        <span className=\"text-xs bg-green-50 text-green-700 px-2 py-1 rounded\">Marketing Automation</span>\n                      </div>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card className=\"border-purple-200\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <Database className=\"w-6 h-6 text-purple-600 mr-3\" />\n                        <h3 className=\"text-xl font-semibold\">CMS Platforms</h3>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">\n                        Create, manage, and publish content effortlessly with our custom content management systems designed for your workflow.\n                      </p>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                        <span className=\"text-xs bg-purple-50 text-purple-700 px-2 py-1 rounded\">Content Creation</span>\n                        <span className=\"text-xs bg-purple-50 text-purple-700 px-2 py-1 rounded\">Multi-site Management</span>\n                        <span className=\"text-xs bg-purple-50 text-purple-700 px-2 py-1 rounded\">SEO Optimization</span>\n                        <span className=\"text-xs bg-purple-50 text-purple-700 px-2 py-1 rounded\">User Permissions</span>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </section>\n\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Implementation Approach</h2>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">1</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Business Analysis</h3>\n                      <p className=\"text-gray-600\">Comprehensive analysis of your current processes, pain points, and requirements.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">2</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">System Design</h3>\n                      <p className=\"text-gray-600\">Custom architecture design that fits your specific business model and scalability needs.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">3</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Phased Development</h3>\n                      <p className=\"text-gray-600\">Incremental development and deployment to minimize business disruption.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">4</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Data Migration</h3>\n                      <p className=\"text-gray-600\">Secure and accurate migration of existing data to the new system.</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center mr-4 mt-1 font-bold\">5</div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-2\">Training & Support</h3>\n                      <p className=\"text-gray-600\">Comprehensive user training and ongoing technical support.</p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <section>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Industry-Specific Solutions</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Manufacturing</h3>\n                    <ul className=\"space-y-2 text-sm text-gray-600\">\n                      <li>• Production planning & scheduling</li>\n                      <li>• Quality management systems</li>\n                      <li>• Equipment maintenance tracking</li>\n                      <li>• Supply chain optimization</li>\n                    </ul>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Retail & E-commerce</h3>\n                    <ul className=\"space-y-2 text-sm text-gray-600\">\n                      <li>• Multi-channel inventory management</li>\n                      <li>• Customer loyalty programs</li>\n                      <li>• Point of sale integration</li>\n                      <li>• Order management systems</li>\n                    </ul>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Healthcare</h3>\n                    <ul className=\"space-y-2 text-sm text-gray-600\">\n                      <li>• Patient management systems</li>\n                      <li>• Medical records management</li>\n                      <li>• Appointment scheduling</li>\n                      <li>• Billing & insurance processing</li>\n                    </ul>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold mb-3\">Professional Services</h3>\n                    <ul className=\"space-y-2 text-sm text-gray-600\">\n                      <li>• Project management & tracking</li>\n                      <li>• Time & expense management</li>\n                      <li>• Client portal & communication</li>\n                      <li>• Resource allocation</li>\n                    </ul>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-8\">\n            <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\n              <CardHeader>\n                <CardTitle className=\"text-blue-900\">Key Benefits</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-blue-600 mr-3\" />\n                    <span className=\"text-sm text-blue-900\">Streamlined workflows</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-blue-600 mr-3\" />\n                    <span className=\"text-sm text-blue-900\">Real-time reporting</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-blue-600 mr-3\" />\n                    <span className=\"text-sm text-blue-900\">Improved efficiency</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-blue-600 mr-3\" />\n                    <span className=\"text-sm text-blue-900\">Better data visibility</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-blue-600 mr-3\" />\n                    <span className=\"text-sm text-blue-900\">Scalable architecture</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Technologies</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Backend</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">Node.js</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Python</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">.NET</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Java</Badge>\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Databases</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">PostgreSQL</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">MongoDB</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Oracle</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">SQL Server</Badge>\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Frontend</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      <Badge variant=\"secondary\" className=\"text-xs\">React</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Angular</Badge>\n                      <Badge variant=\"secondary\" className=\"text-xs\">Vue.js</Badge>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 rounded-2xl p-12 text-center text-white\">\n          <h2 className=\"text-3xl font-bold mb-4\">Transform Your Business Operations</h2>\n          <p className=\"text-xl text-blue-100 mb-8 max-w-2xl mx-auto\">\n            Ready to streamline your processes with custom ERP, CRM, or CMS solutions? Let's discuss your requirements.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" variant=\"secondary\" data-testid=\"button-start-enterprise-project\">\n                Start Your Project\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/portfolio\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-blue-600\" data-testid=\"button-view-enterprise-cases\">\n                View Case Studies\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":15383},"client/src/pages/services/StaffAugmentation.tsx":{"content":"import { ArrowRight, Users, Zap, Shield, Globe, CheckCircle, Clock, Target, Code, TrendingUp, Award, Settings } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function StaffAugmentation() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-emerald-600 via-emerald-700 to-teal-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <TrendingUp className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Staff Augmentation Services</h1>\n            <p className=\"text-xl text-emerald-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Scale your development capacity rapidly with skilled professionals who integrate seamlessly with your existing team. Get the exact expertise you need, when you need it, without long-term commitments.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-emerald-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-scale-team\">\n                  Scale Your Team Now\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-emerald-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-talent\">\n                  View Our Talent\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Flexible Staff Augmentation Solutions</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From individual specialists to complete teams, we provide pre-vetted developers who integrate quickly and contribute immediately to your projects.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Code className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Senior Software Developers</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Experienced full-stack, frontend, backend, and mobile developers with 5+ years of expertise in modern technologies and frameworks.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      React, Angular, Vue.js specialists\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Node.js, Python, Java experts\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Mobile & cloud development\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Target className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Technical Specialists</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Specialized experts in DevOps, QA automation, security, data engineering, AI/ML, and emerging technologies for specific project needs.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      DevOps & cloud architecture\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      QA automation specialists\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      AI/ML & data engineers\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Tech Leads & Architects</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Senior technical leaders and solution architects who can guide technical decisions, mentor teams, and ensure best practices implementation.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Technical leadership & mentoring\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Architecture design & review\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Code quality & standards\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Zap className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Rapid Team Scaling</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Quickly scale your development capacity up or down based on project phases, deadlines, and business priorities with flexible engagement models.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      1-2 week onboarding time\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Flexible contract terms\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Immediate availability\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Quality Assurance & Testing</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Skilled QA engineers and test automation specialists to ensure high-quality deliverables with comprehensive testing strategies and frameworks.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Manual & automated testing\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance & security testing\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Test strategy & planning\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Settings className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Project Management Support</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Experienced project managers, Scrum masters, and business analysts to ensure smooth project execution and stakeholder communication.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Agile & Scrum methodologies\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Requirements analysis\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Stakeholder management\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Key Benefits */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Why Choose Staff Augmentation?</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Get immediate access to skilled talent without the overhead and time investment of traditional hiring processes.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Clock className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">50% Faster Hiring</h3>\n              <p className=\"text-gray-600\">Skip the lengthy recruitment process and get skilled developers working on your project within days.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Award className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">40-60% Cost Savings</h3>\n              <p className=\"text-gray-600\">Reduce overall development costs while avoiding recruitment fees, benefits, and overhead expenses.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Shield className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Zero Risk Hiring</h3>\n              <p className=\"text-gray-600\">Pre-vetted professionals with proven track records and flexible engagement terms.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Globe className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Global Talent Access</h3>\n              <p className=\"text-gray-600\">Access the best developers worldwide, bringing diverse perspectives and expertise to your team.</p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Available Roles */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Available Technical Roles</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From specialized individual contributors to complete technical teams across all modern technology stacks.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'Frontend Developers', 'Backend Developers', 'Full-Stack Engineers', 'Mobile Developers', 'DevOps Engineers', 'QA Specialists',\n              'UI/UX Designers', 'Data Engineers', 'Security Engineers', 'Cloud Architects', 'Tech Leads', 'Project Managers'\n            ].map((role, index) => (\n              <motion.div\n                key={role}\n                className=\"bg-white p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 border border-gray-200\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-emerald-500 to-teal-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{role.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{role}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Simple 4-Step Process</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From requirement analysis to team integration, we make staff augmentation straightforward and efficient.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-emerald-600 text-white rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-xl\">1</div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Requirements Analysis</h3>\n              <p className=\"text-gray-600\">We understand your technical needs, skill gaps, and project requirements in detail.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-emerald-600 text-white rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-xl\">2</div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Candidate Matching</h3>\n              <p className=\"text-gray-600\">Present pre-vetted candidates that match your technical requirements and team culture.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-emerald-600 text-white rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-xl\">3</div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Quick Integration</h3>\n              <p className=\"text-gray-600\">Seamless onboarding and integration with your existing team, tools, and processes.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-emerald-600 text-white rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-xl\">4</div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Ongoing Support</h3>\n              <p className=\"text-gray-600\">Continuous performance monitoring and support throughout the entire engagement.</p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-emerald-600 to-teal-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Scale Your Development Team?</h2>\n            <p className=\"text-xl text-emerald-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Get access to skilled developers who can integrate with your team immediately and contribute to your project success from day one.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-emerald-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-start-augmentation\">\n                  Start Staff Augmentation\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-emerald-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-meet-developers\">\n                  Meet Our Developers\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":25265},"client/src/components/SimpleFileUpload.tsx":{"content":"import { useState, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Upload, X } from \"lucide-react\";\n\ninterface SimpleFileUploadProps {\n  onFileSelect: (file: File) => void;\n  currentUrl?: string;\n  onRemove?: () => void;\n  accept?: string;\n  maxSize?: number; // in MB\n  className?: string;\n}\n\nexport function SimpleFileUpload({\n  onFileSelect,\n  currentUrl,\n  onRemove,\n  accept = \"image/*\",\n  maxSize = 10,\n  className = \"\"\n}: SimpleFileUploadProps) {\n  const [isDragging, setIsDragging] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (file.size > maxSize * 1024 * 1024) {\n        alert(`File size must be less than ${maxSize}MB`);\n        return;\n      }\n      onFileSelect(file);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const file = e.dataTransfer.files[0];\n    if (file && file.type.startsWith('image/')) {\n      if (file.size > maxSize * 1024 * 1024) {\n        alert(`File size must be less than ${maxSize}MB`);\n        return;\n      }\n      onFileSelect(file);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {currentUrl ? (\n        <div className=\"relative inline-block\">\n          <img \n            src={currentUrl} \n            alt=\"Uploaded\" \n            className=\"w-32 h-20 object-cover rounded border\"\n          />\n          {onRemove && (\n            <Button\n              type=\"button\"\n              variant=\"destructive\"\n              size=\"sm\"\n              className=\"absolute -top-2 -right-2 h-6 w-6 rounded-full p-0\"\n              onClick={onRemove}\n            >\n              <X className=\"h-3 w-3\" />\n            </Button>\n          )}\n        </div>\n      ) : (\n        <div\n          className={`border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors ${\n            isDragging \n              ? 'border-primary bg-primary/5' \n              : 'border-gray-300 hover:border-primary'\n          }`}\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onClick={() => fileInputRef.current?.click()}\n        >\n          <Upload className=\"mx-auto h-8 w-8 text-gray-400 mb-2\" />\n          <p className=\"text-sm text-gray-600\">\n            Click to upload or drag and drop\n          </p>\n          <p className=\"text-xs text-gray-400\">\n            PNG, JPG up to {maxSize}MB\n          </p>\n        </div>\n      )}\n      \n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept={accept}\n        onChange={handleFileChange}\n        className=\"hidden\"\n      />\n    </div>\n  );\n}","size_bytes":3021},"QUICK-START.md":{"content":"# ⚡ Pi Tetris - Quick Local Setup\n\nGet the Pi Tetris website running on your PC in 5 minutes!\n\n## 🎯 Prerequisites\n- [Node.js 18+](https://nodejs.org/) \n- [PostgreSQL](https://www.postgresql.org/download/) or [Neon Cloud DB](https://neon.tech/) (free)\n\n## 🚀 One-Command Setup\n\n1. **Download** the project files from Replit (Download as ZIP)\n2. **Extract** and open terminal in the project folder\n3. **Run** the setup script:\n\n```bash\nnode local-start.js\n```\n\nThat's it! The script will:\n- ✅ Create `.env` file if needed\n- ✅ Install all dependencies  \n- ✅ Set up database schema\n- ✅ Start the development server\n\n## 🌐 Access Your Site\n\n- **Website**: http://localhost:5000\n- **Admin Panel**: http://localhost:5000/admin (no login required locally)\n\n## 📝 Manual Setup (if preferred)\n\n1. **Install dependencies**\n   ```bash\n   npm install\n   ```\n\n2. **Create `.env` file**\n   ```bash\n   DATABASE_URL=\"postgresql://username:password@localhost:5432/pi_tetris_dev\"\n   SESSION_SECRET=\"your-random-secret-here\"\n   NODE_ENV=\"development\"\n   ```\n\n3. **Setup database**\n   ```bash\n   createdb pi_tetris_dev\n   npm run db:push\n   ```\n\n4. **Start server**\n   ```bash\n   npm run dev\n   ```\n\n## 🎯 Features Available\n\n✅ **All Service Pages** - Mobile App Development, AI/ML, DevOps, etc.  \n✅ **Content Management** - Add/edit services, case studies, team members  \n✅ **Portfolio Showcase** - Professional case studies and client work  \n✅ **Contact Forms** - Working contact form submissions  \n✅ **Admin Interface** - Full content management system  \n\n## 🆘 Need Help?\n\n**Database Issues?**\n- Use [Neon.tech](https://neon.tech/) for free cloud PostgreSQL\n- Or install PostgreSQL locally\n\n**Port 5000 busy?**\n- Change `PORT=3000` in your `.env` file\n\n**More Help?**\n- See detailed guide: `README-Local-Setup.md`\n\nHappy coding! 🎉","size_bytes":1849},"README-Local-Setup.md":{"content":"# Pi Tetris - Local Development Setup\n\nA comprehensive IT company website with service portfolio and content management system.\n\n## 🚀 Quick Start\n\n### Prerequisites\n- Node.js 18 or higher\n- PostgreSQL 14 or higher\n- Git\n\n### 1. Install Dependencies\n```bash\nnpm install\n```\n\n### 2. Database Setup\n\n**Option A: Local PostgreSQL**\n```bash\n# Create database\ncreatedb pi_tetris_dev\n\n# Your DATABASE_URL will be:\npostgresql://username:password@localhost:5432/pi_tetris_dev\n```\n\n**Option B: Neon Cloud Database (Recommended)**\n1. Sign up at [neon.tech](https://neon.tech/) (free tier available)\n2. Create a new database\n3. Copy the connection string\n\n### 3. Environment Configuration\nCreate a `.env` file in the project root:\n\n```bash\n# Copy from example\ncp .env.example .env\n\n# Edit .env with your values\nDATABASE_URL=\"your-database-url-here\"\nSESSION_SECRET=\"generate-a-random-secret-key\"\n```\n\n### 4. Database Schema Setup\n```bash\n# Push database schema\nnpm run db:push\n```\n\n### 5. Start Development Server\n```bash\nnpm run dev\n```\n\nThe application will be available at:\n- Website: http://localhost:5000\n- API: http://localhost:5000/api\n\n## 🛠 Local Development Notes\n\n### Authentication\n- Replit Auth is disabled for local development\n- Admin features can be accessed directly without authentication\n- Production deployment will require proper authentication setup\n\n### File Storage\n- Object storage features are disabled locally\n- File uploads will need to be configured for your preferred storage provider\n- Supported options: AWS S3, Google Cloud Storage, Azure Blob Storage\n\n### Database Management\n- Use `npm run db:push` to update schema after making changes\n- Database changes are tracked in `shared/schema.ts`\n- View your data using any PostgreSQL client (pgAdmin, DBeaver, etc.)\n\n## 📁 Project Structure\n\n```\npi-tetris/\n├── client/                 # React frontend (Vite + TypeScript)\n│   ├── src/\n│   │   ├── components/     # Reusable UI components\n│   │   ├── pages/         # Page components and routes\n│   │   ├── hooks/         # Custom React hooks\n│   │   └── lib/           # Utilities and configurations\n├── server/                # Express.js backend\n│   ├── routes.ts          # API routes\n│   ├── storage.ts         # Data access layer\n│   └── db.ts             # Database connection\n├── shared/                # Shared types and schemas\n│   └── schema.ts         # Database schema definitions\n└── package.json          # Dependencies and scripts\n```\n\n## 🎯 Available Scripts\n\n- `npm run dev` - Start development server\n- `npm run build` - Build for production\n- `npm run start` - Start production server\n- `npm run db:push` - Update database schema\n- `npm run check` - Type checking\n\n## 🌐 Features\n\n- **Professional Service Pages**: Mobile App Development, DevOps & Cloud, AI/ML, etc.\n- **Content Management**: Admin interface for managing services, case studies, team\n- **Responsive Design**: Modern UI with Tailwind CSS and shadcn/ui components\n- **Type Safety**: Full TypeScript implementation across frontend and backend\n- **Database Integration**: PostgreSQL with Drizzle ORM\n\n## 🚀 Deployment\n\nFor production deployment, you'll need to:\n1. Set up authentication (replace Replit Auth)\n2. Configure object storage provider\n3. Set production environment variables\n4. Deploy to your preferred hosting platform\n\n## 🆘 Troubleshooting\n\n**Database connection issues:**\n- Verify PostgreSQL is running\n- Check DATABASE_URL format\n- Ensure database exists and user has permissions\n\n**Port already in use:**\n- Change the PORT environment variable\n- Kill any processes using port 5000\n\n**Build errors:**\n- Run `npm run check` to verify TypeScript\n- Clear node_modules and reinstall: `rm -rf node_modules && npm install`","size_bytes":3849},"client/src/pages/services/ChatbotDevelopment.tsx":{"content":"import { ArrowRight, MessageCircle, Bot, Zap, Shield, Globe, CheckCircle, Brain, Users, Code } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function ChatbotDevelopment() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-green-600 via-green-700 to-teal-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Bot className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Chatbot Development Services</h1>\n            <p className=\"text-xl text-green-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Create intelligent, conversational AI solutions that enhance customer experience, automate support, and drive engagement across multiple platforms and channels.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-green-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-build-chatbot\">\n                  Build Your Chatbot\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-green-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-demos\">\n                  View Live Demos\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Chatbot Development Expertise</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Build intelligent conversational experiences with AI-powered chatbots that understand context, learn from interactions, and provide personalized responses across all touchpoints.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Brain className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">AI-Powered Conversational Bots</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Develop sophisticated AI chatbots using GPT, Claude, and custom NLP models that understand context, intent, and provide human-like conversational experiences.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      GPT & LLM integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Natural language understanding\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Context-aware conversations\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Customer Support Automation</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Build intelligent customer service bots that handle inquiries, resolve issues, escalate complex cases, and provide 24/7 support across multiple channels.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated ticket resolution\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Multi-channel integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Escalation workflows\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <MessageCircle className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Multi-Platform Integration</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Deploy chatbots across websites, mobile apps, WhatsApp, Telegram, Slack, Microsoft Teams, and social media platforms for seamless user engagement.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Web & mobile integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      WhatsApp & Telegram bots\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Social media integration\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Zap className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Voice & Speech Integration</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Create voice-enabled chatbots with speech-to-text and text-to-speech capabilities for hands-free interactions and accessibility compliance.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Speech recognition & synthesis\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Multi-language support\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Accessibility features\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Analytics & Optimization</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Monitor chatbot performance with detailed analytics, conversation insights, and continuous learning algorithms to improve response accuracy.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Conversation analytics\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance optimization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Continuous learning models\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Code className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Custom Chatbot Solutions</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Develop custom chatbot solutions tailored to specific business needs, industry requirements, and integration with existing systems and workflows.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Industry-specific solutions\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      API & system integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Custom workflows & logic\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Technologies Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Chatbot Development Technologies</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We use cutting-edge AI and conversational platforms to build intelligent, scalable chatbot solutions.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'OpenAI GPT', 'Dialogflow', 'Rasa', 'Microsoft Bot', 'Amazon Lex', 'LangChain',\n              'TensorFlow', 'PyTorch', 'NLP.js', 'Botpress', 'WhatsApp API', 'Telegram API'\n            ].map((tech, index) => (\n              <motion.div\n                key={tech}\n                className=\"bg-gray-50 p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 hover:bg-white\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 to-teal-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{tech.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{tech}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-green-600 to-teal-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Transform Customer Interactions?</h2>\n            <p className=\"text-xl text-green-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Let's build intelligent chatbot solutions that enhance customer experience, reduce support costs, and drive engagement for your business.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-green-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-start-chatbot\">\n                  Start Your Chatbot Project\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-green-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-explore-demos\">\n                  Explore Live Demos\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":17760},"client/src/pages/services/DataEngineering.tsx":{"content":"import { ArrowRight, Database, TrendingUp, Zap, Shield, Globe, CheckCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function DataEngineering() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-orange-600 via-orange-700 to-red-700 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Database className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Data Engineering Services</h1>\n            <p className=\"text-xl text-orange-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Build scalable data infrastructure, real-time analytics pipelines, and modern data platforms that transform your business intelligence capabilities.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-orange-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-get-started\">\n                  Get Started Today\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-orange-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-projects\">\n                  View Our Projects\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Data Engineering Expertise</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We design and build modern data infrastructure that scales with your business, from real-time streaming pipelines to advanced analytics platforms.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Zap className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Real-Time Data Pipelines</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Build high-throughput, low-latency data pipelines using Apache Kafka, Apache Flink, and modern streaming technologies for real-time analytics.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Stream processing with Apache Kafka\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Real-time analytics with Apache Flink\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Event-driven architecture\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Data Warehousing & Lakes</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Design and implement modern data warehouses and data lakes using Snowflake, Databricks, and cloud-native solutions for centralized analytics.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Snowflake data warehousing\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Databricks lakehouse architecture\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Delta Lake for data reliability\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <TrendingUp className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">ETL/ELT Automation</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Automate data transformation workflows using Apache Airflow, dbt, and modern data orchestration tools for reliable data processing.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Apache Airflow orchestration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      dbt for data transformation\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated data quality checks\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Globe className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Cloud Data Platforms</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Deploy and manage scalable data platforms on AWS, Azure, and GCP with infrastructure as code and automated scaling capabilities.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Multi-cloud data solutions\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Terraform infrastructure\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Kubernetes orchestration\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Data Governance & Security</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Implement comprehensive data governance frameworks with security, compliance, and data lineage tracking for enterprise-grade solutions.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Data lineage and cataloging\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      GDPR/CCPA compliance\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Role-based access control\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <TrendingUp className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Analytics & BI Integration</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Connect your data infrastructure to modern BI tools and create self-service analytics platforms for business stakeholders.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Tableau & Power BI integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Self-service analytics platforms\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Real-time dashboards\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Technologies Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Data Engineering Technology Stack</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We leverage cutting-edge technologies and frameworks to build robust, scalable data solutions.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'Apache Spark', 'Apache Kafka', 'Apache Airflow', 'Snowflake', 'dbt', 'Databricks',\n              'Apache Flink', 'AWS Glue', 'Kubernetes', 'Terraform', 'Elasticsearch', 'Pandas'\n            ].map((tech, index) => (\n              <motion.div\n                key={tech}\n                className=\"bg-gray-50 p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 hover:bg-white\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-orange-500 to-red-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{tech.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{tech}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-orange-600 to-red-700 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Transform Your Data Infrastructure?</h2>\n            <p className=\"text-xl text-orange-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Let's discuss how our data engineering expertise can help you build scalable, reliable data pipelines that drive business insights and growth.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-orange-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-schedule-consultation\">\n                  Schedule a Consultation\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-orange-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-case-studies\">\n                  View Case Studies\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":17685},"client/src/pages/services/DevOpsCloud.tsx":{"content":"import { ArrowRight, Cloud, Server, Zap, Shield, Globe, CheckCircle, Settings, Database, Code } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function DevOpsCloud() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-red-600 via-red-700 to-pink-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Cloud className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">DevOps & Cloud Services</h1>\n            <p className=\"text-xl text-red-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Accelerate your software delivery with modern DevOps practices and scalable cloud infrastructure solutions on AWS, Azure, and Google Cloud Platform.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-red-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-get-started\">\n                  Optimize Your Infrastructure\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-red-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-solutions\">\n                  View Our Solutions\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our DevOps & Cloud Expertise</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Transform your development lifecycle with automated CI/CD pipelines, scalable cloud infrastructure, and modern DevOps practices that increase velocity and reliability.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Zap className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">CI/CD Pipeline Automation</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Implement automated continuous integration and deployment pipelines using Jenkins, GitLab CI, GitHub Actions, and Azure DevOps for faster, reliable releases.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated testing integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Multi-stage deployment pipelines\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Rollback & blue-green deployments\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Cloud className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Cloud Infrastructure Management</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Design and manage scalable cloud infrastructure on AWS, Azure, and GCP with infrastructure as code using Terraform, CloudFormation, and ARM templates.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Multi-cloud architecture\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Infrastructure as Code (IaC)\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Auto-scaling & load balancing\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Server className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Container Orchestration</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Deploy and manage containerized applications using Docker, Kubernetes, and container orchestration platforms for improved scalability and resource efficiency.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Kubernetes cluster management\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Docker containerization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Service mesh implementation\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Settings className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Monitoring & Observability</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Implement comprehensive monitoring, logging, and alerting solutions using Prometheus, Grafana, ELK Stack, and APM tools for proactive issue resolution.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Real-time monitoring dashboards\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Centralized logging & analytics\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Intelligent alerting systems\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Security & Compliance</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Integrate security best practices into your DevOps pipeline with automated security scanning, compliance frameworks, and zero-trust architecture.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      DevSecOps integration\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated security scanning\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Compliance automation (SOC 2, PCI DSS)\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Database & Storage Optimization</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Optimize database performance, implement backup strategies, and manage cloud storage solutions for high availability and disaster recovery.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Database clustering & replication\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated backup & recovery\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance tuning & optimization\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Technologies Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">DevOps & Cloud Technology Stack</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We leverage industry-leading tools and platforms to build robust, scalable infrastructure solutions.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'AWS', 'Azure', 'Google Cloud', 'Docker', 'Kubernetes', 'Terraform',\n              'Jenkins', 'GitLab CI', 'Prometheus', 'Grafana', 'Ansible', 'Helm'\n            ].map((tech, index) => (\n              <motion.div\n                key={tech}\n                className=\"bg-gray-50 p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 hover:bg-white\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-red-500 to-pink-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{tech.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{tech}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-red-600 to-pink-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Accelerate Your Development?</h2>\n            <p className=\"text-xl text-red-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Transform your software delivery with our DevOps expertise and cloud infrastructure solutions that scale with your business needs.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-red-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-get-consultation\">\n                  Get a Free Consultation\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-red-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-case-studies\">\n                  View Case Studies\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":17785},"client/src/pages/services/EnterpriseSearch.tsx":{"content":"import { ArrowRight, Search, Database, Zap, Shield, Globe, CheckCircle, Brain, Target, Code, Filter, BarChart } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function EnterpriseSearch() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-amber-600 via-amber-700 to-orange-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Search className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Enterprise Search Solutions</h1>\n            <p className=\"text-xl text-amber-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Build powerful, intelligent search experiences that help users find exactly what they need across all your enterprise data sources, documents, and applications.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-amber-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-build-search\">\n                  Build Your Search Solution\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-amber-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-demos\">\n                  View Live Demos\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Comprehensive Search Solutions</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From simple site search to complex enterprise knowledge discovery, we build intelligent search systems that understand context, intent, and deliver relevant results instantly.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Search className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Intelligent Search Engines</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Build AI-powered search engines with natural language processing, semantic search, and machine learning to understand user intent and deliver relevant results.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Natural language processing\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Semantic search capabilities\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Auto-suggestions & completion\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Federated Enterprise Search</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Unify search across multiple data sources including databases, file systems, cloud storage, APIs, and third-party applications with single-query access.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Multi-source data indexing\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Real-time data synchronization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Unified search interface\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Brain className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Knowledge Discovery & Analytics</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Advanced analytics and knowledge discovery tools that reveal patterns, trends, and insights hidden in your enterprise data and documents.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Document clustering & categorization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Trend analysis & insights\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Entity recognition & extraction\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Filter className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Advanced Filtering & Faceted Search</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Sophisticated filtering systems with faceted search, dynamic filters, and personalized search experiences that adapt to user behavior and preferences.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Dynamic faceted navigation\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Personalized search results\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Advanced query builders\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Security & Access Control</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Enterprise-grade security with role-based access control, data privacy compliance, and secure search that respects user permissions and data sensitivity.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Role-based access control\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Data masking & anonymization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      GDPR & compliance features\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <BarChart className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Search Analytics & Optimization</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Comprehensive analytics dashboard with search performance metrics, user behavior insights, and continuous optimization for improved search relevance.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Search performance metrics\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      User behavior analytics\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      A/B testing & optimization\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Search Technologies */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Enterprise Search Technologies</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We leverage cutting-edge search technologies and platforms to build scalable, high-performance search solutions.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'Elasticsearch', 'Solr', 'OpenSearch', 'Algolia', 'Azure Search', 'AWS Kendra',\n              'Vespa', 'Whoosh', 'Sphinx', 'Swiftype', 'Lucene', 'Typesense'\n            ].map((tech, index) => (\n              <motion.div\n                key={tech}\n                className=\"bg-gray-50 p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 hover:bg-white\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-amber-500 to-orange-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{tech.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{tech}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Enterprise Search Use Cases</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Our search solutions power diverse use cases across industries and business functions.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Target className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">E-commerce Search</h3>\n              <p className=\"text-gray-600\">Product discovery, inventory search, and personalized recommendations for online retailers.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Database className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Document Management</h3>\n              <p className=\"text-gray-600\">Corporate knowledge bases, document repositories, and content management systems.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Globe className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Website Search</h3>\n              <p className=\"text-gray-600\">Site search for corporate websites, portals, and digital experiences with advanced filtering.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Code className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Code Search</h3>\n              <p className=\"text-gray-600\">Developer tools for searching across codebases, repositories, and technical documentation.</p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-amber-600 to-orange-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Transform Your Search Experience?</h2>\n            <p className=\"text-xl text-amber-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Let's build intelligent search solutions that help your users find exactly what they need, when they need it, across all your enterprise data and applications.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-amber-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-discuss-requirements\">\n                  Discuss Your Requirements\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-amber-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-see-examples\">\n                  See Search Examples\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":21729},"client/src/pages/services/MobileAppDevelopment.tsx":{"content":"import { ArrowRight, Smartphone, Users, Zap, Shield, Globe, CheckCircle, Code, Database } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function MobileAppDevelopment() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-blue-600 via-blue-700 to-indigo-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Smartphone className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Mobile App Development</h1>\n            <p className=\"text-xl text-blue-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Build powerful, intuitive mobile applications for iOS and Android that engage users and drive business growth with cutting-edge technology and design.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-blue-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-get-started\">\n                  Start Your App Project\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-blue-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-portfolio\">\n                  View Our Portfolio\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Mobile Development Services</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From concept to app store deployment, we deliver end-to-end mobile solutions that resonate with your users and achieve your business objectives.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Smartphone className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Native iOS & Android Apps</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Build high-performance native applications using Swift for iOS and Kotlin for Android, ensuring optimal user experience and platform integration.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Swift & Kotlin development\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Platform-specific UI/UX\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      App Store optimization\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Code className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Cross-Platform Development</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Develop efficient cross-platform applications using React Native and Flutter, reducing time-to-market while maintaining native performance.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      React Native & Flutter\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Single codebase for both platforms\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Cost-effective development\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">UI/UX Design & Strategy</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Create intuitive, engaging user interfaces with comprehensive user experience research, wireframing, and prototyping for maximum user adoption.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      User research & personas\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Interactive prototypes\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Accessibility compliance\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Backend & API Integration</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Develop robust backend systems and integrate with third-party APIs, cloud services, and databases for scalable mobile app functionality.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      RESTful & GraphQL APIs\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Real-time synchronization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Cloud infrastructure setup\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Testing & Quality Assurance</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Comprehensive testing strategies including automated testing, performance optimization, and security audits to ensure flawless app performance.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated testing suites\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance optimization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Security penetration testing\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Globe className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">App Store Deployment & Support</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    End-to-end app store submission, optimization for discoverability, and ongoing maintenance and support for continued success.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      App Store & Play Store submission\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      ASO (App Store Optimization)\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Ongoing maintenance & updates\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Technologies Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Mobile Development Technologies</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We use the latest technologies and frameworks to build high-performance mobile applications.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'React Native', 'Flutter', 'Swift', 'Kotlin', 'Xamarin', 'Ionic',\n              'Firebase', 'AWS Amplify', 'GraphQL', 'Redux', 'MobX', 'TypeScript'\n            ].map((tech, index) => (\n              <motion.div\n                key={tech}\n                className=\"bg-gray-50 p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 hover:bg-white\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{tech.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{tech}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-blue-600 to-indigo-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Build Your Mobile App?</h2>\n            <p className=\"text-xl text-blue-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Let's transform your mobile app idea into a reality with our expert development team and proven mobile app development process.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-blue-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-start-project\">\n                  Start Your Project\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-blue-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-work\">\n                  View Our Work\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":17616},"client/src/pages/services/ProjectDelivery.tsx":{"content":"import { ArrowRight, Target, Users, Zap, Shield, Globe, CheckCircle, Calendar, BarChart, Settings } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function ProjectDelivery() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-indigo-600 via-indigo-700 to-purple-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Target className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Project Delivery & Management</h1>\n            <p className=\"text-xl text-indigo-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Deliver successful software projects on time and within budget with our proven project management methodologies, agile practices, and dedicated delivery teams.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-indigo-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-start-project\">\n                  Start Your Project\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-indigo-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-process\">\n                  View Our Process\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Project Delivery Expertise</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From planning to deployment and beyond, we ensure successful project outcomes through structured methodologies, clear communication, and continuous delivery practices.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Target className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Agile Project Management</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Implement Scrum, Kanban, and hybrid agile methodologies to ensure flexible, iterative development with regular stakeholder feedback and continuous improvement.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Scrum & Kanban frameworks\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Sprint planning & retrospectives\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Continuous stakeholder feedback\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Dedicated Team Management</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Assemble and manage cross-functional teams with the right skills, clear roles, and effective communication channels for optimal project outcomes.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Cross-functional team assembly\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Role definition & accountability\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance management\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Calendar className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Timeline & Milestone Planning</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Create realistic project timelines with clear milestones, dependencies, and risk mitigation strategies to ensure on-time delivery and budget adherence.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Detailed project roadmaps\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Dependency management\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Risk assessment & mitigation\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <BarChart className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Progress Tracking & Reporting</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Implement comprehensive tracking systems with real-time dashboards, automated reporting, and transparent communication for all stakeholders.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Real-time project dashboards\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated progress reports\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Stakeholder communication\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Quality Assurance & Testing</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Integrate comprehensive QA processes throughout the development lifecycle with automated testing, code reviews, and continuous quality monitoring.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Test-driven development\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Automated testing pipelines\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Code quality standards\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Settings className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Deployment & Maintenance</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Ensure smooth deployment with production-ready infrastructure, monitoring systems, and ongoing maintenance support for long-term success.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Production deployment\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance monitoring\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Ongoing support & maintenance\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Project Management Tools */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Project Management Tools & Platforms</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              We leverage industry-leading tools and platforms to ensure efficient project delivery and transparent communication.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6\">\n            {[\n              'Jira', 'Azure DevOps', 'Slack', 'Microsoft Teams', 'Confluence', 'Notion',\n              'GitHub', 'GitLab', 'Trello', 'Asana', 'Figma', 'Miro'\n            ].map((tool, index) => (\n              <motion.div\n                key={tool}\n                className=\"bg-gray-50 p-6 rounded-xl text-center hover:shadow-lg transition-all duration-300 hover:bg-white\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-12 h-12 bg-gradient-to-br from-indigo-500 to-purple-500 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-white font-bold text-sm\">{tool.split(' ')[0].substring(0, 2).toUpperCase()}</span>\n                </div>\n                <h4 className=\"font-semibold text-gray-900 text-sm\">{tool}</h4>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-indigo-600 to-purple-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready to Deliver Your Project Successfully?</h2>\n            <p className=\"text-xl text-indigo-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Partner with our experienced project delivery team to ensure your software project is completed on time, within budget, and exceeds expectations.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-indigo-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-discuss-project\">\n                  Discuss Your Project\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-indigo-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-success-stories\">\n                  View Success Stories\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":17810},"client/src/pages/services/VirtualCTO.tsx":{"content":"import { ArrowRight, Users, Zap, Shield, Globe, CheckCircle, Brain, Target, Code, Settings, TrendingUp, Award } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function VirtualCTO() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-teal-600 via-teal-700 to-cyan-800 text-white py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"w-20 h-20 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm\">\n                <Brain className=\"w-10 h-10\" />\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-6\">Virtual CTO Services</h1>\n            <p className=\"text-xl text-teal-100 max-w-4xl mx-auto leading-relaxed mb-8\">\n              Get executive-level technology leadership and strategic guidance without the full-time commitment. Our experienced CTOs help drive your technology vision, architecture decisions, and team development.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-teal-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-get-cto\">\n                  Get Your Virtual CTO\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-teal-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-experience\">\n                  View Our Experience\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Comprehensive Technology Leadership</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              From technology strategy to team leadership, our Virtual CTOs provide the expertise and guidance needed to drive your technology initiatives and scale your business.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-blue-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Target className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Technology Strategy & Roadmap</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Develop comprehensive technology strategies aligned with business goals, create detailed roadmaps, and ensure technology investments drive measurable outcomes.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Strategic technology planning\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Business-technology alignment\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      ROI optimization strategies\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-green-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Code className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Technical Architecture & Design</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Design scalable, secure, and maintainable system architectures that support current needs and future growth with best practices and industry standards.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      System architecture design\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Microservices & cloud architecture\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Security & compliance frameworks\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-purple-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Team Leadership & Development</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Build and lead high-performing development teams with clear career paths, mentoring programs, and performance management systems.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Team structure & hiring guidance\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Career development programs\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Performance optimization\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-orange-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Settings className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Process Optimization & DevOps</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Implement efficient development processes, CI/CD pipelines, and DevOps practices to accelerate delivery and improve software quality.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Agile & DevOps implementation\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      CI/CD pipeline optimization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Quality assurance frameworks\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-red-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mb-4\">\n                    <Shield className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Digital Transformation</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Lead digital transformation initiatives, modernize legacy systems, and implement new technologies to drive business innovation and competitiveness.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Legacy system modernization\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Cloud migration strategies\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Technology adoption roadmaps\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow border-l-4 border-indigo-500\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mb-4\">\n                    <TrendingUp className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <CardTitle className=\"text-xl\">Technology Due Diligence</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-4\">\n                    Provide comprehensive technology assessments for investments, mergers, acquisitions, and strategic partnerships with detailed risk analysis.\n                  </p>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Technology stack assessment\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Risk & security evaluation\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-700\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                      Scalability & performance analysis\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTO Expertise Levels */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Virtual CTO Expertise</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Our CTOs bring decades of experience across industries and technologies to guide your strategic decisions.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Award className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">20+ Years Experience</h3>\n              <p className=\"text-gray-600\">Senior technology leaders with extensive experience in building and scaling technology organizations.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Globe className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Multi-Industry Focus</h3>\n              <p className=\"text-gray-600\">Experience across fintech, healthcare, e-commerce, SaaS, and enterprise software domains.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Zap className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Startup to Enterprise</h3>\n              <p className=\"text-gray-600\">Proven track record with startups, scale-ups, and Fortune 500 companies across different growth stages.</p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.4 }}\n              viewport={{ once: true }}\n              className=\"text-center\"\n            >\n              <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Target className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Results Driven</h3>\n              <p className=\"text-gray-600\">Focus on measurable outcomes including improved efficiency, cost reduction, and revenue growth.</p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Engagement Models */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Flexible CTO Engagement Models</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              Choose the level of CTO involvement that matches your current needs and growth stage.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow\">\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-2xl\">Strategic Advisory</CardTitle>\n                  <div className=\"text-4xl font-bold text-teal-600 mt-4\">$5,000<span className=\"text-lg text-gray-500\">/month</span></div>\n                  <p className=\"text-gray-600\">10-15 hours monthly</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Monthly strategy sessions</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Technology roadmap development</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Architecture reviews</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Executive reporting</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>On-demand consultation</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full border-2 border-teal-200 relative hover:shadow-lg transition-shadow\">\n                <div className=\"absolute -top-3 left-6\">\n                  <Badge className=\"bg-teal-600 text-white\">Most Popular</Badge>\n                </div>\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-2xl\">Part-Time CTO</CardTitle>\n                  <div className=\"text-4xl font-bold text-teal-600 mt-4\">$12,000<span className=\"text-lg text-gray-500\">/month</span></div>\n                  <p className=\"text-gray-600\">20-30 hours weekly</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Regular team leadership</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Hands-on architecture work</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Process implementation</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Team hiring & development</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Weekly progress reviews</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow\">\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-2xl\">Full-Time CTO</CardTitle>\n                  <div className=\"text-4xl font-bold text-gray-900 mt-4\">$18,000<span className=\"text-lg text-gray-500\">/month</span></div>\n                  <p className=\"text-gray-600\">Full-time commitment</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Complete technology leadership</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Daily team management</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Strategic planning & execution</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Board-level reporting</span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mr-3\" />\n                      <span>Complete organizational oversight</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-br from-teal-600 to-cyan-800 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">Ready for Strategic Technology Leadership?</h2>\n            <p className=\"text-xl text-teal-100 max-w-4xl mx-auto mb-8 leading-relaxed\">\n              Partner with our experienced Virtual CTOs to accelerate your technology initiatives, optimize your development processes, and drive strategic growth.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-teal-700 hover:bg-gray-100 px-8 py-3 text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"button-schedule-consultation\">\n                  Schedule a Consultation\n                </Button>\n              </Link>\n              <Link href=\"/portfolio\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white hover:text-teal-700 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-300\" data-testid=\"button-view-case-studies\">\n                  View Case Studies\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":26729},"local-setup-guide.md":{"content":"# 🏠 Pi Tetris - Local Development Setup Guide\n\nComplete instructions to run the Pi Tetris IT company website on your local PC.\n\n## 📋 Prerequisites\n\nBefore starting, make sure you have these installed:\n\n1. **Node.js 18 or higher** → [Download here](https://nodejs.org/)\n2. **PostgreSQL 14 or higher** → [Download here](https://www.postgresql.org/download/)\n3. **Git** → [Download here](https://git-scm.com/)\n\n## 🚀 Setup Steps\n\n### Step 1: Get the Project Files\nDownload the project files from Replit:\n1. In Replit, click the three dots menu (⋯) next to your repl name\n2. Select \"Download as ZIP\"\n3. Extract the ZIP file to your desired location on your PC\n\n### Step 2: Install Project Dependencies\nOpen terminal/command prompt in the project folder and run:\n```bash\nnpm install\n```\n\n### Step 3: Database Setup\n\n**Option A: Local PostgreSQL (Recommended for development)**\n```bash\n# Create a new database\ncreatedb pi_tetris_dev\n\n# Note your database connection details:\n# Host: localhost\n# Port: 5432 (default)\n# Database: pi_tetris_dev\n# Username: your-postgres-username\n# Password: your-postgres-password\n```\n\n**Option B: Cloud Database (Neon - Free)**\n1. Go to [neon.tech](https://neon.tech/)\n2. Sign up for a free account\n3. Create a new database\n4. Copy the connection string provided\n\n### Step 4: Environment Configuration\nCreate a `.env` file in your project root folder:\n\n```bash\n# Database - Replace with your actual database details\nDATABASE_URL=\"postgresql://username:password@localhost:5432/pi_tetris_dev\"\n\n# Session Secret - Generate a random string (required)\nSESSION_SECRET=\"your-super-secret-random-string-here\"\n\n# Local Development Settings\nNODE_ENV=\"development\"\nPORT=5000\n\n# These are required but can use dummy values for local development\nREPL_ID=\"local-development\"\nREPLIT_DOMAINS=\"localhost:5000\"\nISSUER_URL=\"https://replit.com/oidc\"\n```\n\n**Important**: Replace the DATABASE_URL with your actual database connection details!\n\n### Step 5: Database Schema Setup\n```bash\n# Create the database tables\nnpm run db:push\n```\n\n### Step 6: Start the Development Server\n```bash\nnpm run dev\n```\n\nYour website will be available at: **http://localhost:5000**\n\n## 🎯 What You'll See\n\n✅ **Homepage** with hero section and service overview  \n✅ **Service Pages** - All professional service pages (Mobile App Development, DevOps, AI/ML, etc.)  \n✅ **About Page** with team information  \n✅ **Portfolio** with case studies  \n✅ **Contact Form** with working submission  \n✅ **Admin Panel** at `/admin` (authentication disabled for local development)  \n\n## 🛠 Local Development Features\n\n### Authentication\n- **For Development**: Authentication is disabled - you can access admin features directly\n- **Admin Panel**: Go to `/admin` to manage content\n- **No Login Required**: All admin features work without authentication locally\n\n### File Uploads\n- **Note**: Object storage (file uploads) won't work locally without additional setup\n- **Alternative**: You can still add content using text descriptions and external image URLs\n\n### Database Management\n- **View Data**: Use any PostgreSQL client (pgAdmin, DBeaver, TablePlus)\n- **Update Schema**: Run `npm run db:push` after making changes to `shared/schema.ts`\n- **Reset Database**: Drop and recreate the database, then run `npm run db:push`\n\n## 📁 Key Project Files\n\n```\npi-tetris/\n├── client/src/           # React frontend\n│   ├── pages/           # All website pages\n│   ├── components/      # UI components\n│   └── App.tsx         # Main app routing\n├── server/              # Express.js backend\n│   ├── routes.ts       # API endpoints\n│   ├── storage.ts      # Database operations\n│   └── db.ts          # Database connection\n├── shared/\n│   └── schema.ts       # Database schema\n└── package.json        # Dependencies\n```\n\n## 🔧 Customization\n\n### Adding Content\n1. Go to `http://localhost:5000/admin`\n2. Add services, case studies, team members, etc.\n3. Changes are saved to your local database\n\n### Modifying Pages\n- Edit files in `client/src/pages/`\n- Changes will hot-reload automatically\n- All service pages are in `client/src/pages/services/`\n\n### Styling Changes\n- Global styles: `client/src/index.css`\n- Component styles: Individual `.tsx` files use Tailwind CSS\n\n## 🚨 Troubleshooting\n\n**Database Connection Error**\n- Check PostgreSQL is running: `pg_ctl status`\n- Verify DATABASE_URL in `.env` file\n- Test connection: `psql \"your-database-url\"`\n\n**Port 5000 Already in Use**\n- Change PORT in `.env` file to another port (e.g., 3000, 8000)\n- Or kill the process using port 5000\n\n**Build Errors**\n- Clear cache: `rm -rf node_modules && npm install`\n- Check TypeScript: `npm run check`\n\n**Missing Dependencies**\n- Make sure all packages installed: `npm install`\n- Check Node.js version: `node --version` (should be 18+)\n\n## 🌐 Production Deployment\n\nWhen ready for production:\n1. Set up proper authentication (replace local auth)\n2. Configure real object storage (AWS S3, Google Cloud, etc.)\n3. Use production database\n4. Set `NODE_ENV=production`\n5. Deploy to hosting platform (Vercel, Netlify, AWS, etc.)\n\n## 📞 Need Help?\n\nIf you encounter any issues:\n1. Check the console logs in your terminal\n2. Verify all prerequisites are installed\n3. Make sure your `.env` file has correct database settings\n4. Try restarting the development server\n\nHappy coding! 🎉","size_bytes":5443},"local-start.js":{"content":"#!/usr/bin/env node\n\nconst fs = require('fs');\nconst path = require('path');\nconst { execSync } = require('child_process');\n\nconsole.log('🚀 Pi Tetris Local Setup');\nconsole.log('========================\\n');\n\n// Check if .env exists\nconst envPath = path.join(__dirname, '.env');\nif (!fs.existsSync(envPath)) {\n  console.log('⚠️  .env file not found!');\n  console.log('📝 Creating .env file from template...\\n');\n  \n  const envExample = `# Database Configuration (REQUIRED - Replace with your database details)\nDATABASE_URL=\"postgresql://username:password@localhost:5432/pi_tetris_dev\"\n\n# Session Secret (REQUIRED - Generate a random string)\nSESSION_SECRET=\"change-this-to-a-random-secret-key\"\n\n# Local Development Settings\nNODE_ENV=\"development\"\nPORT=5000\n\n# Replit Compatibility (can use dummy values)\nREPL_ID=\"local-development\"\nREPLIT_DOMAINS=\"localhost:5000\"\nISSUER_URL=\"https://replit.com/oidc\"`;\n\n  fs.writeFileSync(envPath, envExample);\n  \n  console.log('✅ .env file created!');\n  console.log('🔧 Please edit .env file with your database details before continuing.\\n');\n  console.log('💡 Example database URL: postgresql://postgres:yourpassword@localhost:5432/pi_tetris_dev\\n');\n  process.exit(0);\n}\n\n// Check if dependencies are installed\nconsole.log('📦 Checking dependencies...');\ntry {\n  execSync('node -e \"require(\\'express\\')\"', { stdio: 'ignore' });\n  console.log('✅ Dependencies are installed\\n');\n} catch (error) {\n  console.log('⚠️  Installing dependencies...');\n  execSync('npm install', { stdio: 'inherit' });\n  console.log('✅ Dependencies installed\\n');\n}\n\nconsole.log('🗄️  Setting up database schema...');\ntry {\n  execSync('npm run db:push', { stdio: 'inherit' });\n  console.log('✅ Database schema ready\\n');\n} catch (error) {\n  console.log('❌ Database setup failed. Please check your DATABASE_URL in .env file');\n  console.log('💡 Make sure PostgreSQL is running and the database exists\\n');\n  process.exit(1);\n}\n\nconsole.log('🎉 Starting Pi Tetris development server...\\n');\nconsole.log('🌐 Website: http://localhost:5000');\nconsole.log('⚙️  Admin Panel: http://localhost:5000/admin');\nconsole.log('🔧 Authentication is disabled for local development\\n');\n\n// Start the development server\nexecSync('npm run dev', { stdio: 'inherit' });","size_bytes":2304},"server/localAuth.ts":{"content":"import type { Express, RequestHandler } from \"express\";\n\n// Simple local development authentication bypass\n// In production, replace with proper authentication system\n\nexport async function setupAuth(app: Express) {\n  // Local development: skip authentication setup\n  console.log(\"🔧 Local development mode: Authentication disabled\");\n}\n\nexport const isAuthenticated: RequestHandler = (req: any, res, next) => {\n  // For local development, always authenticate as a mock admin user\n  req.user = {\n    claims: {\n      sub: \"local-admin-user\",\n      email: \"admin@pitetris.local\",\n      first_name: \"Local\",\n      last_name: \"Admin\",\n      profile_image_url: null\n    }\n  };\n  req.isAuthenticated = () => true;\n  next();\n};","size_bytes":722}},"version":1}